/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../../src/app/patient-profile.component');
var import1 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/view_utils');
var import4 = require('@angular/core/src/metadata/view');
var import5 = require('@angular/core/src/linker/view_type');
var import6 = require('@angular/core/src/change_detection/constants');
var import7 = require('@angular/core/src/linker/component_factory');
var import8 = require('../../../src/app/patient-provider.service');
var import9 = require('@angular/router/src/router');
var import10 = require('@angular/router/src/router_state');
var import11 = require('@angular/common/src/location/location');
var import12 = require('../../node_modules/@angular/forms/src/directives/ng_form.ngfactory');
var import13 = require('../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory');
var import14 = require('@angular/material/input/input-container');
var import15 = require('../../node_modules/@angular/material/input/input-container.ngfactory');
var import16 = require('@angular/core/src/linker/query_list');
var import17 = require('../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory');
var import18 = require('../../node_modules/@angular/forms/src/directives/validators.ngfactory');
var import19 = require('../../node_modules/@angular/forms/src/directives/ng_model.ngfactory');
var import20 = require('../../node_modules/@angular/forms/src/directives/number_value_accessor.ngfactory');
var import21 = require('@angular/material/select/select');
var import22 = require('../../node_modules/@angular/material/core/compatibility/compatibility.ngfactory');
var import23 = require('../../node_modules/@angular/material/select/select.ngfactory');
var import24 = require('@angular/material/core/option/option');
var import25 = require('../../node_modules/@angular/material/core/option/option.ngfactory');
var import26 = require('@angular/material/button/button');
var import27 = require('../../node_modules/@angular/material/button/button.ngfactory');
var import28 = require('@angular/core/src/linker/element_ref');
var import29 = require('@angular/material/core/compatibility/compatibility');
var import30 = require('@angular/material/core/overlay/position/viewport-ruler');
var import31 = require('@angular/material/core/rtl/dir');
var import32 = require('@angular/forms/src/directives/default_value_accessor');
var import33 = require('@angular/forms/src/directives/validators');
var import34 = require('@angular/forms/src/validators');
var import35 = require('@angular/forms/src/directives/control_value_accessor');
var import36 = require('@angular/forms/src/directives/ng_model');
var import37 = require('@angular/forms/src/directives/ng_control');
var import38 = require('@angular/forms/src/directives/ng_control_status');
var import39 = require('@angular/forms/src/directives/number_value_accessor');
var import40 = require('@angular/forms/src/directives/ng_form');
var import41 = require('@angular/forms/src/directives/control_container');
var Wrapper_PatientProfileComponent = (function () {
    function Wrapper_PatientProfileComponent(p0, p1, p2, p3) {
        this._changed = false;
        this.context = new import0.PatientProfileComponent(p0, p1, p2, p3);
    }
    Wrapper_PatientProfileComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_PatientProfileComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_PatientProfileComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_PatientProfileComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_PatientProfileComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_PatientProfileComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_PatientProfileComponent;
}());
exports.Wrapper_PatientProfileComponent = Wrapper_PatientProfileComponent;
var renderType_PatientProfileComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_PatientProfileComponent_Host0 = (function (_super) {
    __extends(View_PatientProfileComponent_Host0, _super);
    function View_PatientProfileComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_PatientProfileComponent_Host0, renderType_PatientProfileComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_PatientProfileComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ng-component', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_PatientProfileComponent0(this.viewUtils, this, 0, this._el_0);
        this._PatientProfileComponent_0_3 = new Wrapper_PatientProfileComponent(this.injectorGet(import8.PatientProvider, this.parentIndex), this.injectorGet(import9.Router, this.parentIndex), this.injectorGet(import10.ActivatedRoute, this.parentIndex), this.injectorGet(import11.Location, this.parentIndex));
        this.compView_0.create(this._PatientProfileComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._PatientProfileComponent_0_3.context);
    };
    View_PatientProfileComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.PatientProfileComponent) && (0 === requestNodeIndex))) {
            return this._PatientProfileComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_PatientProfileComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._PatientProfileComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_PatientProfileComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_PatientProfileComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_PatientProfileComponent_Host0;
}(import1.AppView));
exports.PatientProfileComponentNgFactory = new import7.ComponentFactory('ng-component', View_PatientProfileComponent_Host0, import0.PatientProfileComponent);
var styles_PatientProfileComponent = [];
var renderType_PatientProfileComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_PatientProfileComponent, {});
var View_PatientProfileComponent0 = (function (_super) {
    __extends(View_PatientProfileComponent0, _super);
    function View_PatientProfileComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_PatientProfileComponent0, renderType_PatientProfileComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_PatientProfileComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'style', 'padding:5px;'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n	', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'form', import3.EMPTY_INLINE_ARRAY, null);
        this._NgForm_2_3 = new import12.Wrapper_NgForm(null, null);
        this._ControlContainer_2_4 = this._NgForm_2_3.context;
        this._NgControlStatusGroup_2_5 = new import13.Wrapper_NgControlStatusGroup(this._ControlContainer_2_4);
        this._text_3 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_4 = new import15.View_MdInputContainer0(this.viewUtils, this, 4, this._el_4);
        this._MdInputContainer_4_3 = new import15.Wrapper_MdInputContainer();
        this._query_MdInputDirective_4_0 = new import16.QueryList();
        this._query_MdPlaceholder_4_1 = new import16.QueryList();
        this._query_MdHint_4_2 = new import16.QueryList();
        this._text_5 = this.renderer.createText(null, '\n			', null);
        this._el_6 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(12, 'class', 'medium', 'mdInput', '', 'name', 'uhid', 'placeholder', 'UHID', 'required', '', 'type', 'text'), null);
        this._DefaultValueAccessor_6_3 = new import17.Wrapper_DefaultValueAccessor(this.renderer, new import28.ElementRef(this._el_6));
        this._RequiredValidator_6_4 = new import18.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_6_5 = [this._RequiredValidator_6_4.context];
        this._NG_VALUE_ACCESSOR_6_6 = [this._DefaultValueAccessor_6_3.context];
        this._NgModel_6_7 = new import19.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_6_5, null, this._NG_VALUE_ACCESSOR_6_6);
        this._NgControl_6_8 = this._NgModel_6_7.context;
        this._NgControlStatus_6_9 = new import13.Wrapper_NgControlStatus(this._NgControl_6_8);
        this._MdInputDirective_6_10 = new import15.Wrapper_MdInputDirective(new import28.ElementRef(this._el_6), this.renderer, this._NgControl_6_8);
        this._text_7 = this.renderer.createText(null, '		\n		', null);
        this.compView_4.create(this._MdInputContainer_4_3.context);
        this._text_8 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_9 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_9 = new import15.View_MdInputContainer0(this.viewUtils, this, 9, this._el_9);
        this._MdInputContainer_9_3 = new import15.Wrapper_MdInputContainer();
        this._query_MdInputDirective_9_0 = new import16.QueryList();
        this._query_MdPlaceholder_9_1 = new import16.QueryList();
        this._query_MdHint_9_2 = new import16.QueryList();
        this._text_10 = this.renderer.createText(null, '\n			', null);
        this._el_11 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(12, 'class', 'big', 'mdInput', '', 'name', 'name', 'placeholder', 'Name', 'required', '', 'type', 'text'), null);
        this._DefaultValueAccessor_11_3 = new import17.Wrapper_DefaultValueAccessor(this.renderer, new import28.ElementRef(this._el_11));
        this._RequiredValidator_11_4 = new import18.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_11_5 = [this._RequiredValidator_11_4.context];
        this._NG_VALUE_ACCESSOR_11_6 = [this._DefaultValueAccessor_11_3.context];
        this._NgModel_11_7 = new import19.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_11_5, null, this._NG_VALUE_ACCESSOR_11_6);
        this._NgControl_11_8 = this._NgModel_11_7.context;
        this._NgControlStatus_11_9 = new import13.Wrapper_NgControlStatus(this._NgControl_11_8);
        this._MdInputDirective_11_10 = new import15.Wrapper_MdInputDirective(new import28.ElementRef(this._el_11), this.renderer, this._NgControl_11_8);
        this._text_12 = this.renderer.createText(null, '\n		', null);
        this.compView_9.create(this._MdInputContainer_9_3.context);
        this._text_13 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_14 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_14 = new import15.View_MdInputContainer0(this.viewUtils, this, 14, this._el_14);
        this._MdInputContainer_14_3 = new import15.Wrapper_MdInputContainer();
        this._query_MdInputDirective_14_0 = new import16.QueryList();
        this._query_MdPlaceholder_14_1 = new import16.QueryList();
        this._query_MdHint_14_2 = new import16.QueryList();
        this._text_15 = this.renderer.createText(null, '\n			', null);
        this._el_16 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(12, 'class', 'small', 'mdInput', '', 'name', 'dob', 'placeholder', 'Date of birth', 'required', '', 'type', 'date'), null);
        this._DefaultValueAccessor_16_3 = new import17.Wrapper_DefaultValueAccessor(this.renderer, new import28.ElementRef(this._el_16));
        this._RequiredValidator_16_4 = new import18.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_16_5 = [this._RequiredValidator_16_4.context];
        this._NG_VALUE_ACCESSOR_16_6 = [this._DefaultValueAccessor_16_3.context];
        this._NgModel_16_7 = new import19.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_16_5, null, this._NG_VALUE_ACCESSOR_16_6);
        this._NgControl_16_8 = this._NgModel_16_7.context;
        this._NgControlStatus_16_9 = new import13.Wrapper_NgControlStatus(this._NgControl_16_8);
        this._MdInputDirective_16_10 = new import15.Wrapper_MdInputDirective(new import28.ElementRef(this._el_16), this.renderer, this._NgControl_16_8);
        this._text_17 = this.renderer.createText(null, '\n		', null);
        this.compView_14.create(this._MdInputContainer_14_3.context);
        this._text_18 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_19 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_19 = new import15.View_MdInputContainer0(this.viewUtils, this, 19, this._el_19);
        this._MdInputContainer_19_3 = new import15.Wrapper_MdInputContainer();
        this._query_MdInputDirective_19_0 = new import16.QueryList();
        this._query_MdPlaceholder_19_1 = new import16.QueryList();
        this._query_MdHint_19_2 = new import16.QueryList();
        this._text_20 = this.renderer.createText(null, '\n			', null);
        this._el_21 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(12, 'class', 'small', 'mdInput', '', 'name', 'bednum', 'placeholder', 'Bed Number', 'required', '', 'type', 'text'), null);
        this._DefaultValueAccessor_21_3 = new import17.Wrapper_DefaultValueAccessor(this.renderer, new import28.ElementRef(this._el_21));
        this._RequiredValidator_21_4 = new import18.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_21_5 = [this._RequiredValidator_21_4.context];
        this._NG_VALUE_ACCESSOR_21_6 = [this._DefaultValueAccessor_21_3.context];
        this._NgModel_21_7 = new import19.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_21_5, null, this._NG_VALUE_ACCESSOR_21_6);
        this._NgControl_21_8 = this._NgModel_21_7.context;
        this._NgControlStatus_21_9 = new import13.Wrapper_NgControlStatus(this._NgControl_21_8);
        this._MdInputDirective_21_10 = new import15.Wrapper_MdInputDirective(new import28.ElementRef(this._el_21), this.renderer, this._NgControl_21_8);
        this._text_22 = this.renderer.createText(null, '\n		', null);
        this.compView_19.create(this._MdInputContainer_19_3.context);
        this._text_23 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_24 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_24 = new import15.View_MdInputContainer0(this.viewUtils, this, 24, this._el_24);
        this._MdInputContainer_24_3 = new import15.Wrapper_MdInputContainer();
        this._query_MdInputDirective_24_0 = new import16.QueryList();
        this._query_MdPlaceholder_24_1 = new import16.QueryList();
        this._query_MdHint_24_2 = new import16.QueryList();
        this._text_25 = this.renderer.createText(null, '\n			', null);
        this._el_26 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(12, 'class', 'small', 'mdInput', '', 'name', 'weight', 'placeholder', 'Weight (Kgs)', 'required', '', 'type', 'number'), null);
        this._DefaultValueAccessor_26_3 = new import17.Wrapper_DefaultValueAccessor(this.renderer, new import28.ElementRef(this._el_26));
        this._NumberValueAccessor_26_4 = new import20.Wrapper_NumberValueAccessor(this.renderer, new import28.ElementRef(this._el_26));
        this._RequiredValidator_26_5 = new import18.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_26_6 = [this._RequiredValidator_26_5.context];
        this._NG_VALUE_ACCESSOR_26_7 = [
            this._DefaultValueAccessor_26_3.context,
            this._NumberValueAccessor_26_4.context
        ];
        this._NgModel_26_8 = new import19.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_26_6, null, this._NG_VALUE_ACCESSOR_26_7);
        this._NgControl_26_9 = this._NgModel_26_8.context;
        this._NgControlStatus_26_10 = new import13.Wrapper_NgControlStatus(this._NgControl_26_9);
        this._MdInputDirective_26_11 = new import15.Wrapper_MdInputDirective(new import28.ElementRef(this._el_26), this.renderer, this._NgControl_26_9);
        this._text_27 = this.renderer.createText(null, '\n		', null);
        this.compView_24.create(this._MdInputContainer_24_3.context);
        this._text_28 = this.renderer.createText(this._el_2, '								\n		', null);
        this._el_29 = import3.createRenderElement(this.renderer, this._el_2, 'md-select', new import3.InlineArray16(10, 'class', 'big', 'name', 'diabetes', 'placeholder', 'Diabetes Type', 'required', '', 'role', 'listbox'), null);
        this.compView_29 = new import23.View_MdSelect0(this.viewUtils, this, 29, this._el_29);
        this._RequiredValidator_29_3 = new import18.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_29_4 = [this._RequiredValidator_29_3.context];
        this._NgModel_29_5 = new import19.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_29_4, null, null);
        this._NgControl_29_6 = this._NgModel_29_5.context;
        this._NgControlStatus_29_7 = new import13.Wrapper_NgControlStatus(this._NgControl_29_6);
        this._MdPrefixRejector_29_8 = new import22.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import29.MATERIAL_COMPATIBILITY_MODE, this.parentIndex, null));
        this._MdSelect_29_9 = new import23.Wrapper_MdSelect(new import28.ElementRef(this._el_29), this.renderer, this.parentView.injectorGet(import30.ViewportRuler, this.parentIndex), this.compView_29.ref, this.parentView.injectorGet(import31.Dir, this.parentIndex, null), this._NgControl_29_6);
        this._query_MdOption_29_0 = new import16.QueryList();
        this._text_30 = this.renderer.createText(null, '\n			', null);
        this._el_31 = import3.createRenderElement(this.renderer, null, 'md-option', new import3.InlineArray4(4, 'role', 'option', 'value', 'Known Case'), null);
        this.compView_31 = new import25.View_MdOption0(this.viewUtils, this, 31, this._el_31);
        this._MdOption_31_3 = new import25.Wrapper_MdOption(new import28.ElementRef(this._el_31), this.renderer);
        this._MdPrefixRejector_31_4 = new import22.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import29.MATERIAL_COMPATIBILITY_MODE, this.parentIndex, null));
        this._text_32 = this.renderer.createText(null, 'Known Case', null);
        this.compView_31.create(this._MdOption_31_3.context);
        this._text_33 = this.renderer.createText(null, '\n			', null);
        this._el_34 = import3.createRenderElement(this.renderer, null, 'md-option', new import3.InlineArray4(4, 'role', 'option', 'value', 'New Onset'), null);
        this.compView_34 = new import25.View_MdOption0(this.viewUtils, this, 34, this._el_34);
        this._MdOption_34_3 = new import25.Wrapper_MdOption(new import28.ElementRef(this._el_34), this.renderer);
        this._MdPrefixRejector_34_4 = new import22.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import29.MATERIAL_COMPATIBILITY_MODE, this.parentIndex, null));
        this._text_35 = this.renderer.createText(null, 'New Onset', null);
        this.compView_34.create(this._MdOption_34_3.context);
        this._text_36 = this.renderer.createText(null, '\n		', null);
        this.compView_29.create(this._MdSelect_29_9.context);
        this._text_37 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_38 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', new import3.InlineArray2(2, 'class', 'big'), null);
        this.compView_38 = new import15.View_MdInputContainer0(this.viewUtils, this, 38, this._el_38);
        this._MdInputContainer_38_3 = new import15.Wrapper_MdInputContainer();
        this._query_MdInputDirective_38_0 = new import16.QueryList();
        this._query_MdPlaceholder_38_1 = new import16.QueryList();
        this._query_MdHint_38_2 = new import16.QueryList();
        this._text_39 = this.renderer.createText(null, '\n			', null);
        this._el_40 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(10, 'mdInput', '', 'name', 'preTransplantDose', 'placeholder', 'Pre-Transplant Insulin Dose (units/day)', 'required', '', 'type', 'number'), null);
        this._DefaultValueAccessor_40_3 = new import17.Wrapper_DefaultValueAccessor(this.renderer, new import28.ElementRef(this._el_40));
        this._NumberValueAccessor_40_4 = new import20.Wrapper_NumberValueAccessor(this.renderer, new import28.ElementRef(this._el_40));
        this._RequiredValidator_40_5 = new import18.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_40_6 = [this._RequiredValidator_40_5.context];
        this._NG_VALUE_ACCESSOR_40_7 = [
            this._DefaultValueAccessor_40_3.context,
            this._NumberValueAccessor_40_4.context
        ];
        this._NgModel_40_8 = new import19.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_40_6, null, this._NG_VALUE_ACCESSOR_40_7);
        this._NgControl_40_9 = this._NgModel_40_8.context;
        this._NgControlStatus_40_10 = new import13.Wrapper_NgControlStatus(this._NgControl_40_9);
        this._MdInputDirective_40_11 = new import15.Wrapper_MdInputDirective(new import28.ElementRef(this._el_40), this.renderer, this._NgControl_40_9);
        this._text_41 = this.renderer.createText(null, '\n		', null);
        this.compView_38.create(this._MdInputContainer_38_3.context);
        this._text_42 = this.renderer.createText(this._el_2, '\n		\n		', null);
        this._el_43 = import3.createRenderElement(this.renderer, this._el_2, 'div', new import3.InlineArray2(2, 'style', 'text-align:center;margin-top:10px;'), null);
        this._text_44 = this.renderer.createText(this._el_43, '\n			', null);
        this._el_45 = import3.createRenderElement(this.renderer, this._el_43, 'button', new import3.InlineArray4(4, 'md-raised-button', '', 'type', 'submit'), null);
        this.compView_45 = new import27.View_MdButton0(this.viewUtils, this, 45, this._el_45);
        this._MdPrefixRejector_45_3 = new import22.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import29.MATERIAL_COMPATIBILITY_MODE, this.parentIndex, null));
        this._MdButton_45_4 = new import27.Wrapper_MdButton(new import28.ElementRef(this._el_45), this.renderer);
        this._MdRaisedButtonCssMatStyler_45_5 = new import27.Wrapper_MdRaisedButtonCssMatStyler();
        this._text_46 = this.renderer.createText(null, 'Save', null);
        this.compView_45.create(this._MdButton_45_4.context);
        this._text_47 = this.renderer.createText(this._el_43, '\n			', null);
        this._el_48 = import3.createRenderElement(this.renderer, this._el_43, 'a', new import3.InlineArray2(2, 'md-button', ''), null);
        this.compView_48 = new import27.View_MdAnchor0(this.viewUtils, this, 48, this._el_48);
        this._MdPrefixRejector_48_3 = new import22.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import29.MATERIAL_COMPATIBILITY_MODE, this.parentIndex, null));
        this._MdAnchor_48_4 = new import27.Wrapper_MdAnchor(new import28.ElementRef(this._el_48), this.renderer);
        this._MdButtonCssMatStyler_48_5 = new import27.Wrapper_MdButtonCssMatStyler();
        this._text_49 = this.renderer.createText(null, 'Cancel', null);
        this.compView_48.create(this._MdAnchor_48_4.context);
        this._text_50 = this.renderer.createText(this._el_43, '\n		', null);
        this._text_51 = this.renderer.createText(this._el_2, '\n	', null);
        this._text_52 = this.renderer.createText(this._el_0, '		\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray8(6, 'ngSubmit', null, 'submit', null, 'reset', null), this.eventHandler(this.handleEvent_2));
        this._NgForm_2_3.subscribe(this, this.eventHandler(this.handleEvent_2), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_4, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_4));
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_6, new import3.InlineArray8(8, 'ngModelChange', null, 'input', null, 'blur', null, 'focus', null), this.eventHandler(this.handleEvent_6));
        this._NgModel_6_7.subscribe(this, this.eventHandler(this.handleEvent_6), true);
        var disposable_3 = import3.subscribeToRenderElement(this, this._el_9, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_9));
        var disposable_4 = import3.subscribeToRenderElement(this, this._el_11, new import3.InlineArray8(8, 'ngModelChange', null, 'input', null, 'blur', null, 'focus', null), this.eventHandler(this.handleEvent_11));
        this._NgModel_11_7.subscribe(this, this.eventHandler(this.handleEvent_11), true);
        var disposable_5 = import3.subscribeToRenderElement(this, this._el_14, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_14));
        var disposable_6 = import3.subscribeToRenderElement(this, this._el_16, new import3.InlineArray8(8, 'ngModelChange', null, 'input', null, 'blur', null, 'focus', null), this.eventHandler(this.handleEvent_16));
        this._NgModel_16_7.subscribe(this, this.eventHandler(this.handleEvent_16), true);
        var disposable_7 = import3.subscribeToRenderElement(this, this._el_19, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_19));
        var disposable_8 = import3.subscribeToRenderElement(this, this._el_21, new import3.InlineArray8(8, 'ngModelChange', null, 'input', null, 'blur', null, 'focus', null), this.eventHandler(this.handleEvent_21));
        this._NgModel_21_7.subscribe(this, this.eventHandler(this.handleEvent_21), true);
        var disposable_9 = import3.subscribeToRenderElement(this, this._el_24, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_24));
        var disposable_10 = import3.subscribeToRenderElement(this, this._el_26, new import3.InlineArray16(10, 'ngModelChange', null, 'input', null, 'blur', null, 'change', null, 'focus', null), this.eventHandler(this.handleEvent_26));
        this._NgModel_26_8.subscribe(this, this.eventHandler(this.handleEvent_26), true);
        var disposable_11 = import3.subscribeToRenderElement(this, this._el_29, new import3.InlineArray8(6, 'ngModelChange', null, 'keydown', null, 'blur', null), this.eventHandler(this.handleEvent_29));
        this._NgModel_29_5.subscribe(this, this.eventHandler(this.handleEvent_29), true);
        var disposable_12 = import3.subscribeToRenderElement(this, this._el_31, new import3.InlineArray4(4, 'click', null, 'keydown', null), this.eventHandler(this.handleEvent_31));
        var disposable_13 = import3.subscribeToRenderElement(this, this._el_34, new import3.InlineArray4(4, 'click', null, 'keydown', null), this.eventHandler(this.handleEvent_34));
        var disposable_14 = import3.subscribeToRenderElement(this, this._el_38, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_38));
        var disposable_15 = import3.subscribeToRenderElement(this, this._el_40, new import3.InlineArray16(10, 'ngModelChange', null, 'input', null, 'blur', null, 'change', null, 'focus', null), this.eventHandler(this.handleEvent_40));
        this._NgModel_40_8.subscribe(this, this.eventHandler(this.handleEvent_40), true);
        var disposable_16 = import3.subscribeToRenderElement(this, this._el_45, new import3.InlineArray8(6, 'mousedown', null, 'focus', null, 'blur', null), this.eventHandler(this.handleEvent_45));
        var disposable_17 = import3.subscribeToRenderElement(this, this._el_48, new import3.InlineArray8(8, 'click', null, 'mousedown', null, 'focus', null, 'blur', null), this.eventHandler(this.handleEvent_48));
        this._query_MdInputDirective_4_0.reset([this._MdInputDirective_6_10.context]);
        this._MdInputContainer_4_3.context._mdInputChild = this._query_MdInputDirective_4_0.first;
        this._query_MdPlaceholder_4_1.reset([]);
        this._MdInputContainer_4_3.context._placeholderChild = this._query_MdPlaceholder_4_1.first;
        this._query_MdInputDirective_9_0.reset([this._MdInputDirective_11_10.context]);
        this._MdInputContainer_9_3.context._mdInputChild = this._query_MdInputDirective_9_0.first;
        this._query_MdPlaceholder_9_1.reset([]);
        this._MdInputContainer_9_3.context._placeholderChild = this._query_MdPlaceholder_9_1.first;
        this._query_MdInputDirective_14_0.reset([this._MdInputDirective_16_10.context]);
        this._MdInputContainer_14_3.context._mdInputChild = this._query_MdInputDirective_14_0.first;
        this._query_MdPlaceholder_14_1.reset([]);
        this._MdInputContainer_14_3.context._placeholderChild = this._query_MdPlaceholder_14_1.first;
        this._query_MdInputDirective_19_0.reset([this._MdInputDirective_21_10.context]);
        this._MdInputContainer_19_3.context._mdInputChild = this._query_MdInputDirective_19_0.first;
        this._query_MdPlaceholder_19_1.reset([]);
        this._MdInputContainer_19_3.context._placeholderChild = this._query_MdPlaceholder_19_1.first;
        this._query_MdInputDirective_24_0.reset([this._MdInputDirective_26_11.context]);
        this._MdInputContainer_24_3.context._mdInputChild = this._query_MdInputDirective_24_0.first;
        this._query_MdPlaceholder_24_1.reset([]);
        this._MdInputContainer_24_3.context._placeholderChild = this._query_MdPlaceholder_24_1.first;
        this._query_MdInputDirective_38_0.reset([this._MdInputDirective_40_11.context]);
        this._MdInputContainer_38_3.context._mdInputChild = this._query_MdInputDirective_38_0.first;
        this._query_MdPlaceholder_38_1.reset([]);
        this._MdInputContainer_38_3.context._placeholderChild = this._query_MdPlaceholder_38_1.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._el_11,
            this._text_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._text_18,
            this._el_19,
            this._text_20,
            this._el_21,
            this._text_22,
            this._text_23,
            this._el_24,
            this._text_25,
            this._el_26,
            this._text_27,
            this._text_28,
            this._el_29,
            this._text_30,
            this._el_31,
            this._text_32,
            this._text_33,
            this._el_34,
            this._text_35,
            this._text_36,
            this._text_37,
            this._el_38,
            this._text_39,
            this._el_40,
            this._text_41,
            this._text_42,
            this._el_43,
            this._text_44,
            this._el_45,
            this._text_46,
            this._text_47,
            this._el_48,
            this._text_49,
            this._text_50,
            this._text_51,
            this._text_52
        ]), [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6,
            disposable_7,
            disposable_8,
            disposable_9,
            disposable_10,
            disposable_11,
            disposable_12,
            disposable_13,
            disposable_14,
            disposable_15,
            disposable_16,
            disposable_17
        ]);
        return null;
    };
    View_PatientProfileComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import32.DefaultValueAccessor) && (6 === requestNodeIndex))) {
            return this._DefaultValueAccessor_6_3.context;
        }
        if (((token === import33.RequiredValidator) && (6 === requestNodeIndex))) {
            return this._RequiredValidator_6_4.context;
        }
        if (((token === import34.NG_VALIDATORS) && (6 === requestNodeIndex))) {
            return this._NG_VALIDATORS_6_5;
        }
        if (((token === import35.NG_VALUE_ACCESSOR) && (6 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_6_6;
        }
        if (((token === import36.NgModel) && (6 === requestNodeIndex))) {
            return this._NgModel_6_7.context;
        }
        if (((token === import37.NgControl) && (6 === requestNodeIndex))) {
            return this._NgControl_6_8;
        }
        if (((token === import38.NgControlStatus) && (6 === requestNodeIndex))) {
            return this._NgControlStatus_6_9.context;
        }
        if (((token === import14.MdInputDirective) && (6 === requestNodeIndex))) {
            return this._MdInputDirective_6_10.context;
        }
        if (((token === import14.MdInputContainer) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 7)))) {
            return this._MdInputContainer_4_3.context;
        }
        if (((token === import32.DefaultValueAccessor) && (11 === requestNodeIndex))) {
            return this._DefaultValueAccessor_11_3.context;
        }
        if (((token === import33.RequiredValidator) && (11 === requestNodeIndex))) {
            return this._RequiredValidator_11_4.context;
        }
        if (((token === import34.NG_VALIDATORS) && (11 === requestNodeIndex))) {
            return this._NG_VALIDATORS_11_5;
        }
        if (((token === import35.NG_VALUE_ACCESSOR) && (11 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_11_6;
        }
        if (((token === import36.NgModel) && (11 === requestNodeIndex))) {
            return this._NgModel_11_7.context;
        }
        if (((token === import37.NgControl) && (11 === requestNodeIndex))) {
            return this._NgControl_11_8;
        }
        if (((token === import38.NgControlStatus) && (11 === requestNodeIndex))) {
            return this._NgControlStatus_11_9.context;
        }
        if (((token === import14.MdInputDirective) && (11 === requestNodeIndex))) {
            return this._MdInputDirective_11_10.context;
        }
        if (((token === import14.MdInputContainer) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 12)))) {
            return this._MdInputContainer_9_3.context;
        }
        if (((token === import32.DefaultValueAccessor) && (16 === requestNodeIndex))) {
            return this._DefaultValueAccessor_16_3.context;
        }
        if (((token === import33.RequiredValidator) && (16 === requestNodeIndex))) {
            return this._RequiredValidator_16_4.context;
        }
        if (((token === import34.NG_VALIDATORS) && (16 === requestNodeIndex))) {
            return this._NG_VALIDATORS_16_5;
        }
        if (((token === import35.NG_VALUE_ACCESSOR) && (16 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_16_6;
        }
        if (((token === import36.NgModel) && (16 === requestNodeIndex))) {
            return this._NgModel_16_7.context;
        }
        if (((token === import37.NgControl) && (16 === requestNodeIndex))) {
            return this._NgControl_16_8;
        }
        if (((token === import38.NgControlStatus) && (16 === requestNodeIndex))) {
            return this._NgControlStatus_16_9.context;
        }
        if (((token === import14.MdInputDirective) && (16 === requestNodeIndex))) {
            return this._MdInputDirective_16_10.context;
        }
        if (((token === import14.MdInputContainer) && ((14 <= requestNodeIndex) && (requestNodeIndex <= 17)))) {
            return this._MdInputContainer_14_3.context;
        }
        if (((token === import32.DefaultValueAccessor) && (21 === requestNodeIndex))) {
            return this._DefaultValueAccessor_21_3.context;
        }
        if (((token === import33.RequiredValidator) && (21 === requestNodeIndex))) {
            return this._RequiredValidator_21_4.context;
        }
        if (((token === import34.NG_VALIDATORS) && (21 === requestNodeIndex))) {
            return this._NG_VALIDATORS_21_5;
        }
        if (((token === import35.NG_VALUE_ACCESSOR) && (21 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_21_6;
        }
        if (((token === import36.NgModel) && (21 === requestNodeIndex))) {
            return this._NgModel_21_7.context;
        }
        if (((token === import37.NgControl) && (21 === requestNodeIndex))) {
            return this._NgControl_21_8;
        }
        if (((token === import38.NgControlStatus) && (21 === requestNodeIndex))) {
            return this._NgControlStatus_21_9.context;
        }
        if (((token === import14.MdInputDirective) && (21 === requestNodeIndex))) {
            return this._MdInputDirective_21_10.context;
        }
        if (((token === import14.MdInputContainer) && ((19 <= requestNodeIndex) && (requestNodeIndex <= 22)))) {
            return this._MdInputContainer_19_3.context;
        }
        if (((token === import32.DefaultValueAccessor) && (26 === requestNodeIndex))) {
            return this._DefaultValueAccessor_26_3.context;
        }
        if (((token === import39.NumberValueAccessor) && (26 === requestNodeIndex))) {
            return this._NumberValueAccessor_26_4.context;
        }
        if (((token === import33.RequiredValidator) && (26 === requestNodeIndex))) {
            return this._RequiredValidator_26_5.context;
        }
        if (((token === import34.NG_VALIDATORS) && (26 === requestNodeIndex))) {
            return this._NG_VALIDATORS_26_6;
        }
        if (((token === import35.NG_VALUE_ACCESSOR) && (26 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_26_7;
        }
        if (((token === import36.NgModel) && (26 === requestNodeIndex))) {
            return this._NgModel_26_8.context;
        }
        if (((token === import37.NgControl) && (26 === requestNodeIndex))) {
            return this._NgControl_26_9;
        }
        if (((token === import38.NgControlStatus) && (26 === requestNodeIndex))) {
            return this._NgControlStatus_26_10.context;
        }
        if (((token === import14.MdInputDirective) && (26 === requestNodeIndex))) {
            return this._MdInputDirective_26_11.context;
        }
        if (((token === import14.MdInputContainer) && ((24 <= requestNodeIndex) && (requestNodeIndex <= 27)))) {
            return this._MdInputContainer_24_3.context;
        }
        if (((token === import24.MdOption) && ((31 <= requestNodeIndex) && (requestNodeIndex <= 32)))) {
            return this._MdOption_31_3.context;
        }
        if (((token === import29.MdPrefixRejector) && ((31 <= requestNodeIndex) && (requestNodeIndex <= 32)))) {
            return this._MdPrefixRejector_31_4.context;
        }
        if (((token === import24.MdOption) && ((34 <= requestNodeIndex) && (requestNodeIndex <= 35)))) {
            return this._MdOption_34_3.context;
        }
        if (((token === import29.MdPrefixRejector) && ((34 <= requestNodeIndex) && (requestNodeIndex <= 35)))) {
            return this._MdPrefixRejector_34_4.context;
        }
        if (((token === import33.RequiredValidator) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) {
            return this._RequiredValidator_29_3.context;
        }
        if (((token === import34.NG_VALIDATORS) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) {
            return this._NG_VALIDATORS_29_4;
        }
        if (((token === import36.NgModel) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) {
            return this._NgModel_29_5.context;
        }
        if (((token === import37.NgControl) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) {
            return this._NgControl_29_6;
        }
        if (((token === import38.NgControlStatus) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) {
            return this._NgControlStatus_29_7.context;
        }
        if (((token === import29.MdPrefixRejector) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) {
            return this._MdPrefixRejector_29_8.context;
        }
        if (((token === import21.MdSelect) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) {
            return this._MdSelect_29_9.context;
        }
        if (((token === import32.DefaultValueAccessor) && (40 === requestNodeIndex))) {
            return this._DefaultValueAccessor_40_3.context;
        }
        if (((token === import39.NumberValueAccessor) && (40 === requestNodeIndex))) {
            return this._NumberValueAccessor_40_4.context;
        }
        if (((token === import33.RequiredValidator) && (40 === requestNodeIndex))) {
            return this._RequiredValidator_40_5.context;
        }
        if (((token === import34.NG_VALIDATORS) && (40 === requestNodeIndex))) {
            return this._NG_VALIDATORS_40_6;
        }
        if (((token === import35.NG_VALUE_ACCESSOR) && (40 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_40_7;
        }
        if (((token === import36.NgModel) && (40 === requestNodeIndex))) {
            return this._NgModel_40_8.context;
        }
        if (((token === import37.NgControl) && (40 === requestNodeIndex))) {
            return this._NgControl_40_9;
        }
        if (((token === import38.NgControlStatus) && (40 === requestNodeIndex))) {
            return this._NgControlStatus_40_10.context;
        }
        if (((token === import14.MdInputDirective) && (40 === requestNodeIndex))) {
            return this._MdInputDirective_40_11.context;
        }
        if (((token === import14.MdInputContainer) && ((38 <= requestNodeIndex) && (requestNodeIndex <= 41)))) {
            return this._MdInputContainer_38_3.context;
        }
        if (((token === import29.MdPrefixRejector) && ((45 <= requestNodeIndex) && (requestNodeIndex <= 46)))) {
            return this._MdPrefixRejector_45_3.context;
        }
        if (((token === import26.MdButton) && ((45 <= requestNodeIndex) && (requestNodeIndex <= 46)))) {
            return this._MdButton_45_4.context;
        }
        if (((token === import26.MdRaisedButtonCssMatStyler) && ((45 <= requestNodeIndex) && (requestNodeIndex <= 46)))) {
            return this._MdRaisedButtonCssMatStyler_45_5.context;
        }
        if (((token === import29.MdPrefixRejector) && ((48 <= requestNodeIndex) && (requestNodeIndex <= 49)))) {
            return this._MdPrefixRejector_48_3.context;
        }
        if (((token === import26.MdAnchor) && ((48 <= requestNodeIndex) && (requestNodeIndex <= 49)))) {
            return this._MdAnchor_48_4.context;
        }
        if (((token === import26.MdButtonCssMatStyler) && ((48 <= requestNodeIndex) && (requestNodeIndex <= 49)))) {
            return this._MdButtonCssMatStyler_48_5.context;
        }
        if (((token === import40.NgForm) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 51)))) {
            return this._NgForm_2_3.context;
        }
        if (((token === import41.ControlContainer) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 51)))) {
            return this._ControlContainer_2_4;
        }
        if (((token === import38.NgControlStatusGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 51)))) {
            return this._NgControlStatusGroup_2_5.context;
        }
        return notFoundResult;
    };
    View_PatientProfileComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._NgForm_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        this._NgControlStatusGroup_2_5.ngDoCheck(this, this._el_2, throwOnChange);
        this._MdInputContainer_4_3.ngDoCheck(this, this._el_4, throwOnChange);
        this._DefaultValueAccessor_6_3.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_6_1_0 = '';
        this._RequiredValidator_6_4.check_required(currVal_6_1_0, throwOnChange, false);
        this._RequiredValidator_6_4.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_6_2_0 = 'uhid';
        this._NgModel_6_7.check_name(currVal_6_2_0, throwOnChange, false);
        var currVal_6_2_1 = this.context.pp.patient.uhid;
        this._NgModel_6_7.check_model(currVal_6_2_1, throwOnChange, false);
        this._NgModel_6_7.ngDoCheck(this, this._el_6, throwOnChange);
        this._NgControlStatus_6_9.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_6_4_0 = 'UHID';
        this._MdInputDirective_6_10.check_placeholder(currVal_6_4_0, throwOnChange, false);
        var currVal_6_4_1 = '';
        this._MdInputDirective_6_10.check_required(currVal_6_4_1, throwOnChange, false);
        var currVal_6_4_2 = 'text';
        this._MdInputDirective_6_10.check_type(currVal_6_4_2, throwOnChange, false);
        this._MdInputDirective_6_10.ngDoCheck(this, this._el_6, throwOnChange);
        this._MdInputContainer_9_3.ngDoCheck(this, this._el_9, throwOnChange);
        this._DefaultValueAccessor_11_3.ngDoCheck(this, this._el_11, throwOnChange);
        var currVal_11_1_0 = '';
        this._RequiredValidator_11_4.check_required(currVal_11_1_0, throwOnChange, false);
        this._RequiredValidator_11_4.ngDoCheck(this, this._el_11, throwOnChange);
        var currVal_11_2_0 = 'name';
        this._NgModel_11_7.check_name(currVal_11_2_0, throwOnChange, false);
        var currVal_11_2_1 = this.context.pp.patient.name;
        this._NgModel_11_7.check_model(currVal_11_2_1, throwOnChange, false);
        this._NgModel_11_7.ngDoCheck(this, this._el_11, throwOnChange);
        this._NgControlStatus_11_9.ngDoCheck(this, this._el_11, throwOnChange);
        var currVal_11_4_0 = 'Name';
        this._MdInputDirective_11_10.check_placeholder(currVal_11_4_0, throwOnChange, false);
        var currVal_11_4_1 = '';
        this._MdInputDirective_11_10.check_required(currVal_11_4_1, throwOnChange, false);
        var currVal_11_4_2 = 'text';
        this._MdInputDirective_11_10.check_type(currVal_11_4_2, throwOnChange, false);
        this._MdInputDirective_11_10.ngDoCheck(this, this._el_11, throwOnChange);
        this._MdInputContainer_14_3.ngDoCheck(this, this._el_14, throwOnChange);
        this._DefaultValueAccessor_16_3.ngDoCheck(this, this._el_16, throwOnChange);
        var currVal_16_1_0 = '';
        this._RequiredValidator_16_4.check_required(currVal_16_1_0, throwOnChange, false);
        this._RequiredValidator_16_4.ngDoCheck(this, this._el_16, throwOnChange);
        var currVal_16_2_0 = 'dob';
        this._NgModel_16_7.check_name(currVal_16_2_0, throwOnChange, false);
        var currVal_16_2_1 = this.context.pp.patient.dob;
        this._NgModel_16_7.check_model(currVal_16_2_1, throwOnChange, false);
        this._NgModel_16_7.ngDoCheck(this, this._el_16, throwOnChange);
        this._NgControlStatus_16_9.ngDoCheck(this, this._el_16, throwOnChange);
        var currVal_16_4_0 = 'Date of birth';
        this._MdInputDirective_16_10.check_placeholder(currVal_16_4_0, throwOnChange, false);
        var currVal_16_4_1 = '';
        this._MdInputDirective_16_10.check_required(currVal_16_4_1, throwOnChange, false);
        var currVal_16_4_2 = 'date';
        this._MdInputDirective_16_10.check_type(currVal_16_4_2, throwOnChange, false);
        this._MdInputDirective_16_10.ngDoCheck(this, this._el_16, throwOnChange);
        this._MdInputContainer_19_3.ngDoCheck(this, this._el_19, throwOnChange);
        this._DefaultValueAccessor_21_3.ngDoCheck(this, this._el_21, throwOnChange);
        var currVal_21_1_0 = '';
        this._RequiredValidator_21_4.check_required(currVal_21_1_0, throwOnChange, false);
        this._RequiredValidator_21_4.ngDoCheck(this, this._el_21, throwOnChange);
        var currVal_21_2_0 = 'bednum';
        this._NgModel_21_7.check_name(currVal_21_2_0, throwOnChange, false);
        var currVal_21_2_1 = this.context.pp.patient.bednum;
        this._NgModel_21_7.check_model(currVal_21_2_1, throwOnChange, false);
        this._NgModel_21_7.ngDoCheck(this, this._el_21, throwOnChange);
        this._NgControlStatus_21_9.ngDoCheck(this, this._el_21, throwOnChange);
        var currVal_21_4_0 = 'Bed Number';
        this._MdInputDirective_21_10.check_placeholder(currVal_21_4_0, throwOnChange, false);
        var currVal_21_4_1 = '';
        this._MdInputDirective_21_10.check_required(currVal_21_4_1, throwOnChange, false);
        var currVal_21_4_2 = 'text';
        this._MdInputDirective_21_10.check_type(currVal_21_4_2, throwOnChange, false);
        this._MdInputDirective_21_10.ngDoCheck(this, this._el_21, throwOnChange);
        this._MdInputContainer_24_3.ngDoCheck(this, this._el_24, throwOnChange);
        this._DefaultValueAccessor_26_3.ngDoCheck(this, this._el_26, throwOnChange);
        this._NumberValueAccessor_26_4.ngDoCheck(this, this._el_26, throwOnChange);
        var currVal_26_2_0 = '';
        this._RequiredValidator_26_5.check_required(currVal_26_2_0, throwOnChange, false);
        this._RequiredValidator_26_5.ngDoCheck(this, this._el_26, throwOnChange);
        var currVal_26_3_0 = 'weight';
        this._NgModel_26_8.check_name(currVal_26_3_0, throwOnChange, false);
        var currVal_26_3_1 = this.context.pp.patient.profile.weight;
        this._NgModel_26_8.check_model(currVal_26_3_1, throwOnChange, false);
        this._NgModel_26_8.ngDoCheck(this, this._el_26, throwOnChange);
        this._NgControlStatus_26_10.ngDoCheck(this, this._el_26, throwOnChange);
        var currVal_26_5_0 = 'Weight (Kgs)';
        this._MdInputDirective_26_11.check_placeholder(currVal_26_5_0, throwOnChange, false);
        var currVal_26_5_1 = '';
        this._MdInputDirective_26_11.check_required(currVal_26_5_1, throwOnChange, false);
        var currVal_26_5_2 = 'number';
        this._MdInputDirective_26_11.check_type(currVal_26_5_2, throwOnChange, false);
        this._MdInputDirective_26_11.ngDoCheck(this, this._el_26, throwOnChange);
        var currVal_29_0_0 = '';
        this._RequiredValidator_29_3.check_required(currVal_29_0_0, throwOnChange, false);
        this._RequiredValidator_29_3.ngDoCheck(this, this._el_29, throwOnChange);
        var currVal_29_1_0 = 'diabetes';
        this._NgModel_29_5.check_name(currVal_29_1_0, throwOnChange, false);
        var currVal_29_1_1 = this.context.pp.patient.profile.diabetes;
        this._NgModel_29_5.check_model(currVal_29_1_1, throwOnChange, false);
        this._NgModel_29_5.ngDoCheck(this, this._el_29, throwOnChange);
        this._NgControlStatus_29_7.ngDoCheck(this, this._el_29, throwOnChange);
        this._MdPrefixRejector_29_8.ngDoCheck(this, this._el_29, throwOnChange);
        var currVal_29_4_0 = 'Diabetes Type';
        this._MdSelect_29_9.check_placeholder(currVal_29_4_0, throwOnChange, false);
        var currVal_29_4_1 = '';
        this._MdSelect_29_9.check_required(currVal_29_4_1, throwOnChange, false);
        this._MdSelect_29_9.ngDoCheck(this, this._el_29, throwOnChange);
        var currVal_31_0_0 = 'Known Case';
        this._MdOption_31_3.check_value(currVal_31_0_0, throwOnChange, false);
        this._MdOption_31_3.ngDoCheck(this, this._el_31, throwOnChange);
        this._MdPrefixRejector_31_4.ngDoCheck(this, this._el_31, throwOnChange);
        var currVal_34_0_0 = 'New Onset';
        this._MdOption_34_3.check_value(currVal_34_0_0, throwOnChange, false);
        this._MdOption_34_3.ngDoCheck(this, this._el_34, throwOnChange);
        this._MdPrefixRejector_34_4.ngDoCheck(this, this._el_34, throwOnChange);
        this._MdInputContainer_38_3.ngDoCheck(this, this._el_38, throwOnChange);
        this._DefaultValueAccessor_40_3.ngDoCheck(this, this._el_40, throwOnChange);
        this._NumberValueAccessor_40_4.ngDoCheck(this, this._el_40, throwOnChange);
        var currVal_40_2_0 = '';
        this._RequiredValidator_40_5.check_required(currVal_40_2_0, throwOnChange, false);
        this._RequiredValidator_40_5.ngDoCheck(this, this._el_40, throwOnChange);
        var currVal_40_3_0 = 'preTransplantDose';
        this._NgModel_40_8.check_name(currVal_40_3_0, throwOnChange, false);
        var currVal_40_3_1 = this.context.pp.patient.profile.preTransplantDose;
        this._NgModel_40_8.check_model(currVal_40_3_1, throwOnChange, false);
        this._NgModel_40_8.ngDoCheck(this, this._el_40, throwOnChange);
        this._NgControlStatus_40_10.ngDoCheck(this, this._el_40, throwOnChange);
        var currVal_40_5_0 = 'Pre-Transplant Insulin Dose (units/day)';
        this._MdInputDirective_40_11.check_placeholder(currVal_40_5_0, throwOnChange, false);
        var currVal_40_5_1 = '';
        this._MdInputDirective_40_11.check_required(currVal_40_5_1, throwOnChange, false);
        var currVal_40_5_2 = 'number';
        this._MdInputDirective_40_11.check_type(currVal_40_5_2, throwOnChange, false);
        this._MdInputDirective_40_11.ngDoCheck(this, this._el_40, throwOnChange);
        this._MdPrefixRejector_45_3.ngDoCheck(this, this._el_45, throwOnChange);
        var currVal_45_1_0 = !this._NgForm_2_3.context.form.valid;
        this._MdButton_45_4.check_disabled(currVal_45_1_0, throwOnChange, false);
        if (this._MdButton_45_4.ngDoCheck(this, this._el_45, throwOnChange)) {
            this.compView_45.markAsCheckOnce();
        }
        this._MdRaisedButtonCssMatStyler_45_5.ngDoCheck(this, this._el_45, throwOnChange);
        this._MdPrefixRejector_48_3.ngDoCheck(this, this._el_48, throwOnChange);
        this._MdAnchor_48_4.ngDoCheck(this, this._el_48, throwOnChange);
        this._MdButtonCssMatStyler_48_5.ngDoCheck(this, this._el_48, throwOnChange);
        if (!throwOnChange) {
            if (this._query_MdHint_4_2.dirty) {
                this._query_MdHint_4_2.reset([]);
                this._MdInputContainer_4_3.context._hintChildren = this._query_MdHint_4_2;
                this._query_MdHint_4_2.notifyOnChanges();
            }
            if (this._query_MdHint_9_2.dirty) {
                this._query_MdHint_9_2.reset([]);
                this._MdInputContainer_9_3.context._hintChildren = this._query_MdHint_9_2;
                this._query_MdHint_9_2.notifyOnChanges();
            }
            if (this._query_MdHint_14_2.dirty) {
                this._query_MdHint_14_2.reset([]);
                this._MdInputContainer_14_3.context._hintChildren = this._query_MdHint_14_2;
                this._query_MdHint_14_2.notifyOnChanges();
            }
            if (this._query_MdHint_19_2.dirty) {
                this._query_MdHint_19_2.reset([]);
                this._MdInputContainer_19_3.context._hintChildren = this._query_MdHint_19_2;
                this._query_MdHint_19_2.notifyOnChanges();
            }
            if (this._query_MdHint_24_2.dirty) {
                this._query_MdHint_24_2.reset([]);
                this._MdInputContainer_24_3.context._hintChildren = this._query_MdHint_24_2;
                this._query_MdHint_24_2.notifyOnChanges();
            }
            if (this._query_MdOption_29_0.dirty) {
                this._query_MdOption_29_0.reset([
                    this._MdOption_31_3.context,
                    this._MdOption_34_3.context
                ]);
                this._MdSelect_29_9.context.options = this._query_MdOption_29_0;
                this._query_MdOption_29_0.notifyOnChanges();
            }
            if (this._query_MdHint_38_2.dirty) {
                this._query_MdHint_38_2.reset([]);
                this._MdInputContainer_38_3.context._hintChildren = this._query_MdHint_38_2;
                this._query_MdHint_38_2.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_4_3.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_9_3.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_14_3.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_19_3.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_24_3.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdSelect_29_9.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_38_3.context.ngAfterContentInit();
            }
        }
        this._NgControlStatusGroup_2_5.checkHost(this, this, this._el_2, throwOnChange);
        this._MdInputContainer_4_3.checkHost(this, this.compView_4, this._el_4, throwOnChange);
        this._RequiredValidator_6_4.checkHost(this, this, this._el_6, throwOnChange);
        this._NgControlStatus_6_9.checkHost(this, this, this._el_6, throwOnChange);
        this._MdInputDirective_6_10.checkHost(this, this, this._el_6, throwOnChange);
        this._MdInputContainer_9_3.checkHost(this, this.compView_9, this._el_9, throwOnChange);
        this._RequiredValidator_11_4.checkHost(this, this, this._el_11, throwOnChange);
        this._NgControlStatus_11_9.checkHost(this, this, this._el_11, throwOnChange);
        this._MdInputDirective_11_10.checkHost(this, this, this._el_11, throwOnChange);
        this._MdInputContainer_14_3.checkHost(this, this.compView_14, this._el_14, throwOnChange);
        this._RequiredValidator_16_4.checkHost(this, this, this._el_16, throwOnChange);
        this._NgControlStatus_16_9.checkHost(this, this, this._el_16, throwOnChange);
        this._MdInputDirective_16_10.checkHost(this, this, this._el_16, throwOnChange);
        this._MdInputContainer_19_3.checkHost(this, this.compView_19, this._el_19, throwOnChange);
        this._RequiredValidator_21_4.checkHost(this, this, this._el_21, throwOnChange);
        this._NgControlStatus_21_9.checkHost(this, this, this._el_21, throwOnChange);
        this._MdInputDirective_21_10.checkHost(this, this, this._el_21, throwOnChange);
        this._MdInputContainer_24_3.checkHost(this, this.compView_24, this._el_24, throwOnChange);
        this._RequiredValidator_26_5.checkHost(this, this, this._el_26, throwOnChange);
        this._NgControlStatus_26_10.checkHost(this, this, this._el_26, throwOnChange);
        this._MdInputDirective_26_11.checkHost(this, this, this._el_26, throwOnChange);
        this._RequiredValidator_29_3.checkHost(this, this.compView_29, this._el_29, throwOnChange);
        this._NgControlStatus_29_7.checkHost(this, this.compView_29, this._el_29, throwOnChange);
        this._MdSelect_29_9.checkHost(this, this.compView_29, this._el_29, throwOnChange);
        this._MdOption_31_3.checkHost(this, this.compView_31, this._el_31, throwOnChange);
        this._MdOption_34_3.checkHost(this, this.compView_34, this._el_34, throwOnChange);
        this._MdInputContainer_38_3.checkHost(this, this.compView_38, this._el_38, throwOnChange);
        this._RequiredValidator_40_5.checkHost(this, this, this._el_40, throwOnChange);
        this._NgControlStatus_40_10.checkHost(this, this, this._el_40, throwOnChange);
        this._MdInputDirective_40_11.checkHost(this, this, this._el_40, throwOnChange);
        this._MdButton_45_4.checkHost(this, this.compView_45, this._el_45, throwOnChange);
        this._MdRaisedButtonCssMatStyler_45_5.checkHost(this, this.compView_45, this._el_45, throwOnChange);
        this._MdAnchor_48_4.checkHost(this, this.compView_48, this._el_48, throwOnChange);
        this._MdButtonCssMatStyler_48_5.checkHost(this, this.compView_48, this._el_48, throwOnChange);
        this.compView_4.internalDetectChanges(throwOnChange);
        this.compView_9.internalDetectChanges(throwOnChange);
        this.compView_14.internalDetectChanges(throwOnChange);
        this.compView_19.internalDetectChanges(throwOnChange);
        this.compView_24.internalDetectChanges(throwOnChange);
        this.compView_29.internalDetectChanges(throwOnChange);
        this.compView_31.internalDetectChanges(throwOnChange);
        this.compView_34.internalDetectChanges(throwOnChange);
        this.compView_38.internalDetectChanges(throwOnChange);
        this.compView_45.internalDetectChanges(throwOnChange);
        this.compView_48.internalDetectChanges(throwOnChange);
    };
    View_PatientProfileComponent0.prototype.destroyInternal = function () {
        this.compView_4.destroy();
        this.compView_9.destroy();
        this.compView_14.destroy();
        this.compView_19.destroy();
        this.compView_24.destroy();
        this.compView_29.destroy();
        this.compView_31.destroy();
        this.compView_34.destroy();
        this.compView_38.destroy();
        this.compView_45.destroy();
        this.compView_48.destroy();
        this._NgModel_6_7.ngOnDestroy();
        this._MdInputDirective_6_10.ngOnDestroy();
        this._NgModel_11_7.ngOnDestroy();
        this._MdInputDirective_11_10.ngOnDestroy();
        this._NgModel_16_7.ngOnDestroy();
        this._MdInputDirective_16_10.ngOnDestroy();
        this._NgModel_21_7.ngOnDestroy();
        this._MdInputDirective_21_10.ngOnDestroy();
        this._NgModel_26_8.ngOnDestroy();
        this._MdInputDirective_26_11.ngOnDestroy();
        this._MdOption_31_3.ngOnDestroy();
        this._MdOption_34_3.ngOnDestroy();
        this._NgModel_29_5.ngOnDestroy();
        this._MdSelect_29_9.ngOnDestroy();
        this._NgModel_40_8.ngOnDestroy();
        this._MdInputDirective_40_11.ngOnDestroy();
        this._NgForm_2_3.ngOnDestroy();
    };
    View_PatientProfileComponent0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 4) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 1))) {
            cb(this._text_5, ctx);
            cb(this._el_6, ctx);
            cb(this._text_7, ctx);
        }
        if (((nodeIndex == 4) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 9) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 9) && (ngContentIndex == 1))) {
            cb(this._text_10, ctx);
            cb(this._el_11, ctx);
            cb(this._text_12, ctx);
        }
        if (((nodeIndex == 9) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 9) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 9) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 14) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 14) && (ngContentIndex == 1))) {
            cb(this._text_15, ctx);
            cb(this._el_16, ctx);
            cb(this._text_17, ctx);
        }
        if (((nodeIndex == 14) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 14) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 14) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 19) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 19) && (ngContentIndex == 1))) {
            cb(this._text_20, ctx);
            cb(this._el_21, ctx);
            cb(this._text_22, ctx);
        }
        if (((nodeIndex == 19) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 19) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 19) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 24) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 24) && (ngContentIndex == 1))) {
            cb(this._text_25, ctx);
            cb(this._el_26, ctx);
            cb(this._text_27, ctx);
        }
        if (((nodeIndex == 24) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 24) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 24) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 29) && (ngContentIndex == 0))) {
            cb(this._text_30, ctx);
            cb(this._el_31, ctx);
            cb(this._text_33, ctx);
            cb(this._el_34, ctx);
            cb(this._text_36, ctx);
        }
        if (((nodeIndex == 31) && (ngContentIndex == 0))) {
            cb(this._text_32, ctx);
        }
        if (((nodeIndex == 34) && (ngContentIndex == 0))) {
            cb(this._text_35, ctx);
        }
        if (((nodeIndex == 38) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 38) && (ngContentIndex == 1))) {
            cb(this._text_39, ctx);
            cb(this._el_40, ctx);
            cb(this._text_41, ctx);
        }
        if (((nodeIndex == 38) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 38) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 38) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 45) && (ngContentIndex == 0))) {
            cb(this._text_46, ctx);
        }
        if (((nodeIndex == 48) && (ngContentIndex == 0))) {
            cb(this._text_49, ctx);
        }
    };
    View_PatientProfileComponent0.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._NgForm_2_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngSubmit')) {
            var pd_sub_0 = (this.context.saveProfile() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_4 = function (eventName, $event) {
        this.compView_4.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_4_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_6 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_6_3.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_6_10.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.pp.patient.uhid = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_9 = function (eventName, $event) {
        this.compView_9.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_9_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_11 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_11_3.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_11_10.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.pp.patient.name = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_14 = function (eventName, $event) {
        this.compView_14.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_14_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_16 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_16_3.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_16_10.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.pp.patient.dob = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_19 = function (eventName, $event) {
        this.compView_19.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_19_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_21 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_21_3.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_21_10.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.pp.patient.bednum = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_24 = function (eventName, $event) {
        this.compView_24.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_24_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_26 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_26_3.handleEvent(eventName, $event) && result);
        result = (this._NumberValueAccessor_26_4.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_26_11.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.pp.patient.profile.weight = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_29 = function (eventName, $event) {
        this.compView_29.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdSelect_29_9.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.pp.patient.profile.diabetes = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_31 = function (eventName, $event) {
        this.compView_31.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdOption_31_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_34 = function (eventName, $event) {
        this.compView_34.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdOption_34_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_38 = function (eventName, $event) {
        this.compView_38.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_38_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_40 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_40_3.handleEvent(eventName, $event) && result);
        result = (this._NumberValueAccessor_40_4.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_40_11.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.pp.patient.profile.preTransplantDose = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_45 = function (eventName, $event) {
        this.compView_45.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdButton_45_4.handleEvent(eventName, $event) && result);
        return result;
    };
    View_PatientProfileComponent0.prototype.handleEvent_48 = function (eventName, $event) {
        this.compView_48.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdAnchor_48_4.handleEvent(eventName, $event) && result);
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.goBack() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_PatientProfileComponent0;
}(import1.AppView));
exports.View_PatientProfileComponent0 = View_PatientProfileComponent0;
//# sourceMappingURL=patient-profile.component.ngfactory.js.map