/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../../src/app/form.component');
var import1 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/view_utils');
var import4 = require('@angular/core/src/metadata/view');
var import5 = require('@angular/core/src/linker/view_type');
var import6 = require('@angular/core/src/change_detection/constants');
var import7 = require('@angular/core/src/linker/component_factory');
var import8 = require('../../../src/app/patient-provider.service');
var import9 = require('@angular/router/src/router');
var import10 = require('@angular/router/src/router_state');
var import11 = require('@angular/common/src/location/location');
var import12 = require('../../../src/app/server.service');
var import13 = require('@angular/material/dialog/dialog');
var import14 = require('../../node_modules/@angular/forms/src/directives/ng_form.ngfactory');
var import15 = require('../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory');
var import16 = require('@angular/material/input/input-container');
var import17 = require('../../node_modules/@angular/material/input/input-container.ngfactory');
var import18 = require('@angular/core/src/linker/query_list');
var import19 = require('../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory');
var import20 = require('../../node_modules/@angular/forms/src/directives/number_value_accessor.ngfactory');
var import21 = require('../../node_modules/@angular/forms/src/directives/validators.ngfactory');
var import22 = require('../../node_modules/@angular/forms/src/directives/ng_model.ngfactory');
var import23 = require('@angular/material/button/button');
var import24 = require('../../node_modules/@angular/material/core/compatibility/compatibility.ngfactory');
var import25 = require('../../node_modules/@angular/material/button/button.ngfactory');
var import26 = require('@angular/core/src/linker/view_container');
var import27 = require('@angular/core/src/linker/element_ref');
var import28 = require('@angular/material/core/compatibility/compatibility');
var import29 = require('@angular/forms/src/directives/default_value_accessor');
var import30 = require('@angular/forms/src/directives/number_value_accessor');
var import31 = require('@angular/forms/src/directives/validators');
var import32 = require('@angular/forms/src/validators');
var import33 = require('@angular/forms/src/directives/control_value_accessor');
var import34 = require('@angular/forms/src/directives/ng_model');
var import35 = require('@angular/forms/src/directives/ng_control');
var import36 = require('@angular/forms/src/directives/ng_control_status');
var import37 = require('@angular/forms/src/directives/ng_form');
var import38 = require('@angular/forms/src/directives/control_container');
var import39 = require('@angular/material/select/select');
var import40 = require('../../node_modules/@angular/material/select/select.ngfactory');
var import41 = require('@angular/material/core/option/option');
var import42 = require('../../node_modules/@angular/material/core/option/option.ngfactory');
var import43 = require('@angular/material/core/overlay/position/viewport-ruler');
var import44 = require('@angular/material/core/rtl/dir');
var import45 = require('../../node_modules/@angular/common/src/directives/ng_if.ngfactory');
var import46 = require('@angular/core/src/linker/template_ref');
var import47 = require('@angular/common/src/directives/ng_if');
var Wrapper_FormComponent = (function () {
    function Wrapper_FormComponent(p0, p1, p2, p3, p4, p5) {
        this._changed = false;
        this.context = new import0.FormComponent(p0, p1, p2, p3, p4, p5);
    }
    Wrapper_FormComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_FormComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_FormComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_FormComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_FormComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_FormComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_FormComponent;
}());
exports.Wrapper_FormComponent = Wrapper_FormComponent;
var renderType_FormComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_FormComponent_Host0 = (function (_super) {
    __extends(View_FormComponent_Host0, _super);
    function View_FormComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_FormComponent_Host0, renderType_FormComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_FormComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ng-component', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_FormComponent0(this.viewUtils, this, 0, this._el_0);
        this._FormComponent_0_3 = new Wrapper_FormComponent(this.injectorGet(import8.PatientProvider, this.parentIndex), this.injectorGet(import9.Router, this.parentIndex), this.injectorGet(import10.ActivatedRoute, this.parentIndex), this.injectorGet(import11.Location, this.parentIndex), this.injectorGet(import12.Server, this.parentIndex), this.injectorGet(import13.MdDialog, this.parentIndex));
        this.compView_0.create(this._FormComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._FormComponent_0_3.context);
    };
    View_FormComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.FormComponent) && (0 === requestNodeIndex))) {
            return this._FormComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_FormComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._FormComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_FormComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_FormComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_FormComponent_Host0;
}(import1.AppView));
exports.FormComponentNgFactory = new import7.ComponentFactory('ng-component', View_FormComponent_Host0, import0.FormComponent);
var styles_FormComponent = [];
var View_FormComponent1 = (function (_super) {
    __extends(View_FormComponent1, _super);
    function View_FormComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_FormComponent1, renderType_FormComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_FormComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n		', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'form', import3.EMPTY_INLINE_ARRAY, null);
        this._NgForm_2_3 = new import14.Wrapper_NgForm(null, null);
        this._ControlContainer_2_4 = this._NgForm_2_3.context;
        this._NgControlStatusGroup_2_5 = new import15.Wrapper_NgControlStatusGroup(this._ControlContainer_2_4);
        this._text_3 = this.renderer.createText(this._el_2, '\n			', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', new import3.InlineArray2(2, 'class', 'big'), null);
        this.compView_4 = new import17.View_MdInputContainer0(this.viewUtils, this, 4, this._el_4);
        this._MdInputContainer_4_3 = new import17.Wrapper_MdInputContainer();
        this._query_MdInputDirective_4_0 = new import18.QueryList();
        this._query_MdPlaceholder_4_1 = new import18.QueryList();
        this._query_MdHint_4_2 = new import18.QueryList();
        this._text_5 = this.renderer.createText(null, '\n				', null);
        this._el_6 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(10, 'mdInput', '', 'name', 'currentRate', 'placeholder', 'Current Infusion Rate (units/hr)', 'required', '', 'type', 'number'), null);
        this._DefaultValueAccessor_6_3 = new import19.Wrapper_DefaultValueAccessor(this.renderer, new import27.ElementRef(this._el_6));
        this._NumberValueAccessor_6_4 = new import20.Wrapper_NumberValueAccessor(this.renderer, new import27.ElementRef(this._el_6));
        this._RequiredValidator_6_5 = new import21.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_6_6 = [this._RequiredValidator_6_5.context];
        this._NG_VALUE_ACCESSOR_6_7 = [
            this._DefaultValueAccessor_6_3.context,
            this._NumberValueAccessor_6_4.context
        ];
        this._NgModel_6_8 = new import22.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_6_6, null, this._NG_VALUE_ACCESSOR_6_7);
        this._NgControl_6_9 = this._NgModel_6_8.context;
        this._NgControlStatus_6_10 = new import15.Wrapper_NgControlStatus(this._NgControl_6_9);
        this._MdInputDirective_6_11 = new import17.Wrapper_MdInputDirective(new import27.ElementRef(this._el_6), this.renderer, this._NgControl_6_9);
        this._text_7 = this.renderer.createText(null, '\n			', null);
        this.compView_4.create(this._MdInputContainer_4_3.context);
        this._text_8 = this.renderer.createText(this._el_2, '\n			', null);
        this._el_9 = import3.createRenderElement(this.renderer, this._el_2, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_10 = this.renderer.createText(this._el_2, '\n			', null);
        this._el_11 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', new import3.InlineArray2(2, 'class', 'big'), null);
        this.compView_11 = new import17.View_MdInputContainer0(this.viewUtils, this, 11, this._el_11);
        this._MdInputContainer_11_3 = new import17.Wrapper_MdInputContainer();
        this._query_MdInputDirective_11_0 = new import18.QueryList();
        this._query_MdPlaceholder_11_1 = new import18.QueryList();
        this._query_MdHint_11_2 = new import18.QueryList();
        this._text_12 = this.renderer.createText(null, '\n				', null);
        this._el_13 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(10, 'mdInput', '', 'name', 'plasmaGlucose', 'placeholder', 'Plasma Glucose (mg/dl)', 'required', '', 'type', 'number'), null);
        this._DefaultValueAccessor_13_3 = new import19.Wrapper_DefaultValueAccessor(this.renderer, new import27.ElementRef(this._el_13));
        this._NumberValueAccessor_13_4 = new import20.Wrapper_NumberValueAccessor(this.renderer, new import27.ElementRef(this._el_13));
        this._RequiredValidator_13_5 = new import21.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_13_6 = [this._RequiredValidator_13_5.context];
        this._NG_VALUE_ACCESSOR_13_7 = [
            this._DefaultValueAccessor_13_3.context,
            this._NumberValueAccessor_13_4.context
        ];
        this._NgModel_13_8 = new import22.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_13_6, null, this._NG_VALUE_ACCESSOR_13_7);
        this._NgControl_13_9 = this._NgModel_13_8.context;
        this._NgControlStatus_13_10 = new import15.Wrapper_NgControlStatus(this._NgControl_13_9);
        this._MdInputDirective_13_11 = new import17.Wrapper_MdInputDirective(new import27.ElementRef(this._el_13), this.renderer, this._NgControl_13_9);
        this._text_14 = this.renderer.createText(null, '\n			', null);
        this.compView_11.create(this._MdInputContainer_11_3.context);
        this._text_15 = this.renderer.createText(this._el_2, '\n			', null);
        this._el_16 = import3.createRenderElement(this.renderer, this._el_2, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_17 = this.renderer.createText(this._el_2, '\n			', null);
        this._el_18 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', new import3.InlineArray2(2, 'class', 'big'), null);
        this.compView_18 = new import17.View_MdInputContainer0(this.viewUtils, this, 18, this._el_18);
        this._MdInputContainer_18_3 = new import17.Wrapper_MdInputContainer();
        this._query_MdInputDirective_18_0 = new import18.QueryList();
        this._query_MdPlaceholder_18_1 = new import18.QueryList();
        this._query_MdHint_18_2 = new import18.QueryList();
        this._text_19 = this.renderer.createText(null, '\n				', null);
        this._el_20 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(10, 'mdInput', '', 'name', 'modifiedRate', 'placeholder', 'Modified Infusion Rate (units/hr)', 'required', '', 'type', 'number'), null);
        this._DefaultValueAccessor_20_3 = new import19.Wrapper_DefaultValueAccessor(this.renderer, new import27.ElementRef(this._el_20));
        this._NumberValueAccessor_20_4 = new import20.Wrapper_NumberValueAccessor(this.renderer, new import27.ElementRef(this._el_20));
        this._RequiredValidator_20_5 = new import21.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_20_6 = [this._RequiredValidator_20_5.context];
        this._NG_VALUE_ACCESSOR_20_7 = [
            this._DefaultValueAccessor_20_3.context,
            this._NumberValueAccessor_20_4.context
        ];
        this._NgModel_20_8 = new import22.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_20_6, null, this._NG_VALUE_ACCESSOR_20_7);
        this._NgControl_20_9 = this._NgModel_20_8.context;
        this._NgControlStatus_20_10 = new import15.Wrapper_NgControlStatus(this._NgControl_20_9);
        this._MdInputDirective_20_11 = new import17.Wrapper_MdInputDirective(new import27.ElementRef(this._el_20), this.renderer, this._NgControl_20_9);
        this._text_21 = this.renderer.createText(null, '\n			', null);
        this.compView_18.create(this._MdInputContainer_18_3.context);
        this._text_22 = this.renderer.createText(this._el_2, '\n			\n			', null);
        this._el_23 = import3.createRenderElement(this.renderer, this._el_2, 'div', new import3.InlineArray2(2, 'style', 'text-align:center;margin-top:10px;'), null);
        this._text_24 = this.renderer.createText(this._el_23, '\n				', null);
        this._el_25 = import3.createRenderElement(this.renderer, this._el_23, 'button', new import3.InlineArray4(4, 'md-raised-button', '', 'type', 'submit'), null);
        this.compView_25 = new import25.View_MdButton0(this.viewUtils, this, 25, this._el_25);
        this._MdPrefixRejector_25_3 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._MdButton_25_4 = new import25.Wrapper_MdButton(new import27.ElementRef(this._el_25), this.renderer);
        this._MdRaisedButtonCssMatStyler_25_5 = new import25.Wrapper_MdRaisedButtonCssMatStyler();
        this._text_26 = this.renderer.createText(null, 'Save', null);
        this.compView_25.create(this._MdButton_25_4.context);
        this._text_27 = this.renderer.createText(this._el_23, '\n				', null);
        this._el_28 = import3.createRenderElement(this.renderer, this._el_23, 'a', new import3.InlineArray2(2, 'md-button', ''), null);
        this.compView_28 = new import25.View_MdAnchor0(this.viewUtils, this, 28, this._el_28);
        this._MdPrefixRejector_28_3 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._MdAnchor_28_4 = new import25.Wrapper_MdAnchor(new import27.ElementRef(this._el_28), this.renderer);
        this._MdButtonCssMatStyler_28_5 = new import25.Wrapper_MdButtonCssMatStyler();
        this._text_29 = this.renderer.createText(null, 'Cancel', null);
        this.compView_28.create(this._MdAnchor_28_4.context);
        this._text_30 = this.renderer.createText(this._el_23, '\n			', null);
        this._text_31 = this.renderer.createText(this._el_2, '\n		', null);
        this._text_32 = this.renderer.createText(this._el_0, '\n	', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray8(6, 'ngSubmit', null, 'submit', null, 'reset', null), this.eventHandler(this.handleEvent_2));
        this._NgForm_2_3.subscribe(this, this.eventHandler(this.handleEvent_2), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_4, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_4));
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_6, new import3.InlineArray16(10, 'ngModelChange', null, 'input', null, 'blur', null, 'change', null, 'focus', null), this.eventHandler(this.handleEvent_6));
        this._NgModel_6_8.subscribe(this, this.eventHandler(this.handleEvent_6), true);
        var disposable_3 = import3.subscribeToRenderElement(this, this._el_11, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_11));
        var disposable_4 = import3.subscribeToRenderElement(this, this._el_13, new import3.InlineArray16(10, 'ngModelChange', null, 'input', null, 'blur', null, 'change', null, 'focus', null), this.eventHandler(this.handleEvent_13));
        this._NgModel_13_8.subscribe(this, this.eventHandler(this.handleEvent_13), true);
        var disposable_5 = import3.subscribeToRenderElement(this, this._el_18, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_18));
        var disposable_6 = import3.subscribeToRenderElement(this, this._el_20, new import3.InlineArray16(10, 'ngModelChange', null, 'input', null, 'blur', null, 'change', null, 'focus', null), this.eventHandler(this.handleEvent_20));
        this._NgModel_20_8.subscribe(this, this.eventHandler(this.handleEvent_20), true);
        var disposable_7 = import3.subscribeToRenderElement(this, this._el_25, new import3.InlineArray8(6, 'mousedown', null, 'focus', null, 'blur', null), this.eventHandler(this.handleEvent_25));
        var disposable_8 = import3.subscribeToRenderElement(this, this._el_28, new import3.InlineArray8(8, 'click', null, 'mousedown', null, 'focus', null, 'blur', null), this.eventHandler(this.handleEvent_28));
        this._query_MdInputDirective_4_0.reset([this._MdInputDirective_6_11.context]);
        this._MdInputContainer_4_3.context._mdInputChild = this._query_MdInputDirective_4_0.first;
        this._query_MdPlaceholder_4_1.reset([]);
        this._MdInputContainer_4_3.context._placeholderChild = this._query_MdPlaceholder_4_1.first;
        this._query_MdInputDirective_11_0.reset([this._MdInputDirective_13_11.context]);
        this._MdInputContainer_11_3.context._mdInputChild = this._query_MdInputDirective_11_0.first;
        this._query_MdPlaceholder_11_1.reset([]);
        this._MdInputContainer_11_3.context._placeholderChild = this._query_MdPlaceholder_11_1.first;
        this._query_MdInputDirective_18_0.reset([this._MdInputDirective_20_11.context]);
        this._MdInputContainer_18_3.context._mdInputChild = this._query_MdInputDirective_18_0.first;
        this._query_MdPlaceholder_18_1.reset([]);
        this._MdInputContainer_18_3.context._placeholderChild = this._query_MdPlaceholder_18_1.first;
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._el_11,
            this._text_12,
            this._el_13,
            this._text_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._el_18,
            this._text_19,
            this._el_20,
            this._text_21,
            this._text_22,
            this._el_23,
            this._text_24,
            this._el_25,
            this._text_26,
            this._text_27,
            this._el_28,
            this._text_29,
            this._text_30,
            this._text_31,
            this._text_32
        ]), [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6,
            disposable_7,
            disposable_8
        ]);
        return null;
    };
    View_FormComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import29.DefaultValueAccessor) && (6 === requestNodeIndex))) {
            return this._DefaultValueAccessor_6_3.context;
        }
        if (((token === import30.NumberValueAccessor) && (6 === requestNodeIndex))) {
            return this._NumberValueAccessor_6_4.context;
        }
        if (((token === import31.RequiredValidator) && (6 === requestNodeIndex))) {
            return this._RequiredValidator_6_5.context;
        }
        if (((token === import32.NG_VALIDATORS) && (6 === requestNodeIndex))) {
            return this._NG_VALIDATORS_6_6;
        }
        if (((token === import33.NG_VALUE_ACCESSOR) && (6 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_6_7;
        }
        if (((token === import34.NgModel) && (6 === requestNodeIndex))) {
            return this._NgModel_6_8.context;
        }
        if (((token === import35.NgControl) && (6 === requestNodeIndex))) {
            return this._NgControl_6_9;
        }
        if (((token === import36.NgControlStatus) && (6 === requestNodeIndex))) {
            return this._NgControlStatus_6_10.context;
        }
        if (((token === import16.MdInputDirective) && (6 === requestNodeIndex))) {
            return this._MdInputDirective_6_11.context;
        }
        if (((token === import16.MdInputContainer) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 7)))) {
            return this._MdInputContainer_4_3.context;
        }
        if (((token === import29.DefaultValueAccessor) && (13 === requestNodeIndex))) {
            return this._DefaultValueAccessor_13_3.context;
        }
        if (((token === import30.NumberValueAccessor) && (13 === requestNodeIndex))) {
            return this._NumberValueAccessor_13_4.context;
        }
        if (((token === import31.RequiredValidator) && (13 === requestNodeIndex))) {
            return this._RequiredValidator_13_5.context;
        }
        if (((token === import32.NG_VALIDATORS) && (13 === requestNodeIndex))) {
            return this._NG_VALIDATORS_13_6;
        }
        if (((token === import33.NG_VALUE_ACCESSOR) && (13 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_13_7;
        }
        if (((token === import34.NgModel) && (13 === requestNodeIndex))) {
            return this._NgModel_13_8.context;
        }
        if (((token === import35.NgControl) && (13 === requestNodeIndex))) {
            return this._NgControl_13_9;
        }
        if (((token === import36.NgControlStatus) && (13 === requestNodeIndex))) {
            return this._NgControlStatus_13_10.context;
        }
        if (((token === import16.MdInputDirective) && (13 === requestNodeIndex))) {
            return this._MdInputDirective_13_11.context;
        }
        if (((token === import16.MdInputContainer) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 14)))) {
            return this._MdInputContainer_11_3.context;
        }
        if (((token === import29.DefaultValueAccessor) && (20 === requestNodeIndex))) {
            return this._DefaultValueAccessor_20_3.context;
        }
        if (((token === import30.NumberValueAccessor) && (20 === requestNodeIndex))) {
            return this._NumberValueAccessor_20_4.context;
        }
        if (((token === import31.RequiredValidator) && (20 === requestNodeIndex))) {
            return this._RequiredValidator_20_5.context;
        }
        if (((token === import32.NG_VALIDATORS) && (20 === requestNodeIndex))) {
            return this._NG_VALIDATORS_20_6;
        }
        if (((token === import33.NG_VALUE_ACCESSOR) && (20 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_20_7;
        }
        if (((token === import34.NgModel) && (20 === requestNodeIndex))) {
            return this._NgModel_20_8.context;
        }
        if (((token === import35.NgControl) && (20 === requestNodeIndex))) {
            return this._NgControl_20_9;
        }
        if (((token === import36.NgControlStatus) && (20 === requestNodeIndex))) {
            return this._NgControlStatus_20_10.context;
        }
        if (((token === import16.MdInputDirective) && (20 === requestNodeIndex))) {
            return this._MdInputDirective_20_11.context;
        }
        if (((token === import16.MdInputContainer) && ((18 <= requestNodeIndex) && (requestNodeIndex <= 21)))) {
            return this._MdInputContainer_18_3.context;
        }
        if (((token === import28.MdPrefixRejector) && ((25 <= requestNodeIndex) && (requestNodeIndex <= 26)))) {
            return this._MdPrefixRejector_25_3.context;
        }
        if (((token === import23.MdButton) && ((25 <= requestNodeIndex) && (requestNodeIndex <= 26)))) {
            return this._MdButton_25_4.context;
        }
        if (((token === import23.MdRaisedButtonCssMatStyler) && ((25 <= requestNodeIndex) && (requestNodeIndex <= 26)))) {
            return this._MdRaisedButtonCssMatStyler_25_5.context;
        }
        if (((token === import28.MdPrefixRejector) && ((28 <= requestNodeIndex) && (requestNodeIndex <= 29)))) {
            return this._MdPrefixRejector_28_3.context;
        }
        if (((token === import23.MdAnchor) && ((28 <= requestNodeIndex) && (requestNodeIndex <= 29)))) {
            return this._MdAnchor_28_4.context;
        }
        if (((token === import23.MdButtonCssMatStyler) && ((28 <= requestNodeIndex) && (requestNodeIndex <= 29)))) {
            return this._MdButtonCssMatStyler_28_5.context;
        }
        if (((token === import37.NgForm) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 31)))) {
            return this._NgForm_2_3.context;
        }
        if (((token === import38.ControlContainer) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 31)))) {
            return this._ControlContainer_2_4;
        }
        if (((token === import36.NgControlStatusGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 31)))) {
            return this._NgControlStatusGroup_2_5.context;
        }
        return notFoundResult;
    };
    View_FormComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        this._NgForm_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        this._NgControlStatusGroup_2_5.ngDoCheck(this, this._el_2, throwOnChange);
        this._MdInputContainer_4_3.ngDoCheck(this, this._el_4, throwOnChange);
        this._DefaultValueAccessor_6_3.ngDoCheck(this, this._el_6, throwOnChange);
        this._NumberValueAccessor_6_4.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_6_2_0 = '';
        this._RequiredValidator_6_5.check_required(currVal_6_2_0, throwOnChange, false);
        this._RequiredValidator_6_5.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_6_3_0 = 'currentRate';
        this._NgModel_6_8.check_name(currVal_6_3_0, throwOnChange, false);
        var currVal_6_3_1 = this.parentView.context.form.values.currentRate;
        this._NgModel_6_8.check_model(currVal_6_3_1, throwOnChange, false);
        this._NgModel_6_8.ngDoCheck(this, this._el_6, throwOnChange);
        this._NgControlStatus_6_10.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_6_5_0 = 'Current Infusion Rate (units/hr)';
        this._MdInputDirective_6_11.check_placeholder(currVal_6_5_0, throwOnChange, false);
        var currVal_6_5_1 = '';
        this._MdInputDirective_6_11.check_required(currVal_6_5_1, throwOnChange, false);
        var currVal_6_5_2 = 'number';
        this._MdInputDirective_6_11.check_type(currVal_6_5_2, throwOnChange, false);
        this._MdInputDirective_6_11.ngDoCheck(this, this._el_6, throwOnChange);
        this._MdInputContainer_11_3.ngDoCheck(this, this._el_11, throwOnChange);
        this._DefaultValueAccessor_13_3.ngDoCheck(this, this._el_13, throwOnChange);
        this._NumberValueAccessor_13_4.ngDoCheck(this, this._el_13, throwOnChange);
        var currVal_13_2_0 = '';
        this._RequiredValidator_13_5.check_required(currVal_13_2_0, throwOnChange, false);
        this._RequiredValidator_13_5.ngDoCheck(this, this._el_13, throwOnChange);
        var currVal_13_3_0 = 'plasmaGlucose';
        this._NgModel_13_8.check_name(currVal_13_3_0, throwOnChange, false);
        var currVal_13_3_1 = this.parentView.context.form.values.plasmaGlucose;
        this._NgModel_13_8.check_model(currVal_13_3_1, throwOnChange, false);
        this._NgModel_13_8.ngDoCheck(this, this._el_13, throwOnChange);
        this._NgControlStatus_13_10.ngDoCheck(this, this._el_13, throwOnChange);
        var currVal_13_5_0 = 'Plasma Glucose (mg/dl)';
        this._MdInputDirective_13_11.check_placeholder(currVal_13_5_0, throwOnChange, false);
        var currVal_13_5_1 = '';
        this._MdInputDirective_13_11.check_required(currVal_13_5_1, throwOnChange, false);
        var currVal_13_5_2 = 'number';
        this._MdInputDirective_13_11.check_type(currVal_13_5_2, throwOnChange, false);
        this._MdInputDirective_13_11.ngDoCheck(this, this._el_13, throwOnChange);
        this._MdInputContainer_18_3.ngDoCheck(this, this._el_18, throwOnChange);
        this._DefaultValueAccessor_20_3.ngDoCheck(this, this._el_20, throwOnChange);
        this._NumberValueAccessor_20_4.ngDoCheck(this, this._el_20, throwOnChange);
        var currVal_20_2_0 = '';
        this._RequiredValidator_20_5.check_required(currVal_20_2_0, throwOnChange, false);
        this._RequiredValidator_20_5.ngDoCheck(this, this._el_20, throwOnChange);
        var currVal_20_3_0 = 'modifiedRate';
        this._NgModel_20_8.check_name(currVal_20_3_0, throwOnChange, false);
        var currVal_20_3_1 = this.parentView.context.form.values.modifiedRate;
        this._NgModel_20_8.check_model(currVal_20_3_1, throwOnChange, false);
        this._NgModel_20_8.ngDoCheck(this, this._el_20, throwOnChange);
        this._NgControlStatus_20_10.ngDoCheck(this, this._el_20, throwOnChange);
        var currVal_20_5_0 = 'Modified Infusion Rate (units/hr)';
        this._MdInputDirective_20_11.check_placeholder(currVal_20_5_0, throwOnChange, false);
        var currVal_20_5_1 = '';
        this._MdInputDirective_20_11.check_required(currVal_20_5_1, throwOnChange, false);
        var currVal_20_5_2 = 'number';
        this._MdInputDirective_20_11.check_type(currVal_20_5_2, throwOnChange, false);
        this._MdInputDirective_20_11.ngDoCheck(this, this._el_20, throwOnChange);
        this._MdPrefixRejector_25_3.ngDoCheck(this, this._el_25, throwOnChange);
        var currVal_25_1_0 = !this._NgForm_2_3.context.form.valid;
        this._MdButton_25_4.check_disabled(currVal_25_1_0, throwOnChange, false);
        if (this._MdButton_25_4.ngDoCheck(this, this._el_25, throwOnChange)) {
            this.compView_25.markAsCheckOnce();
        }
        this._MdRaisedButtonCssMatStyler_25_5.ngDoCheck(this, this._el_25, throwOnChange);
        this._MdPrefixRejector_28_3.ngDoCheck(this, this._el_28, throwOnChange);
        this._MdAnchor_28_4.ngDoCheck(this, this._el_28, throwOnChange);
        this._MdButtonCssMatStyler_28_5.ngDoCheck(this, this._el_28, throwOnChange);
        if (!throwOnChange) {
            if (this._query_MdHint_4_2.dirty) {
                this._query_MdHint_4_2.reset([]);
                this._MdInputContainer_4_3.context._hintChildren = this._query_MdHint_4_2;
                this._query_MdHint_4_2.notifyOnChanges();
            }
            if (this._query_MdHint_11_2.dirty) {
                this._query_MdHint_11_2.reset([]);
                this._MdInputContainer_11_3.context._hintChildren = this._query_MdHint_11_2;
                this._query_MdHint_11_2.notifyOnChanges();
            }
            if (this._query_MdHint_18_2.dirty) {
                this._query_MdHint_18_2.reset([]);
                this._MdInputContainer_18_3.context._hintChildren = this._query_MdHint_18_2;
                this._query_MdHint_18_2.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_4_3.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_11_3.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_18_3.context.ngAfterContentInit();
            }
        }
        this._NgControlStatusGroup_2_5.checkHost(this, this, this._el_2, throwOnChange);
        this._MdInputContainer_4_3.checkHost(this, this.compView_4, this._el_4, throwOnChange);
        this._RequiredValidator_6_5.checkHost(this, this, this._el_6, throwOnChange);
        this._NgControlStatus_6_10.checkHost(this, this, this._el_6, throwOnChange);
        this._MdInputDirective_6_11.checkHost(this, this, this._el_6, throwOnChange);
        this._MdInputContainer_11_3.checkHost(this, this.compView_11, this._el_11, throwOnChange);
        this._RequiredValidator_13_5.checkHost(this, this, this._el_13, throwOnChange);
        this._NgControlStatus_13_10.checkHost(this, this, this._el_13, throwOnChange);
        this._MdInputDirective_13_11.checkHost(this, this, this._el_13, throwOnChange);
        this._MdInputContainer_18_3.checkHost(this, this.compView_18, this._el_18, throwOnChange);
        this._RequiredValidator_20_5.checkHost(this, this, this._el_20, throwOnChange);
        this._NgControlStatus_20_10.checkHost(this, this, this._el_20, throwOnChange);
        this._MdInputDirective_20_11.checkHost(this, this, this._el_20, throwOnChange);
        this._MdButton_25_4.checkHost(this, this.compView_25, this._el_25, throwOnChange);
        this._MdRaisedButtonCssMatStyler_25_5.checkHost(this, this.compView_25, this._el_25, throwOnChange);
        this._MdAnchor_28_4.checkHost(this, this.compView_28, this._el_28, throwOnChange);
        this._MdButtonCssMatStyler_28_5.checkHost(this, this.compView_28, this._el_28, throwOnChange);
        this.compView_4.internalDetectChanges(throwOnChange);
        this.compView_11.internalDetectChanges(throwOnChange);
        this.compView_18.internalDetectChanges(throwOnChange);
        this.compView_25.internalDetectChanges(throwOnChange);
        this.compView_28.internalDetectChanges(throwOnChange);
    };
    View_FormComponent1.prototype.destroyInternal = function () {
        this.compView_4.destroy();
        this.compView_11.destroy();
        this.compView_18.destroy();
        this.compView_25.destroy();
        this.compView_28.destroy();
        this._NgModel_6_8.ngOnDestroy();
        this._MdInputDirective_6_11.ngOnDestroy();
        this._NgModel_13_8.ngOnDestroy();
        this._MdInputDirective_13_11.ngOnDestroy();
        this._NgModel_20_8.ngOnDestroy();
        this._MdInputDirective_20_11.ngOnDestroy();
        this._NgForm_2_3.ngOnDestroy();
    };
    View_FormComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_FormComponent1.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 4) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 1))) {
            cb(this._text_5, ctx);
            cb(this._el_6, ctx);
            cb(this._text_7, ctx);
        }
        if (((nodeIndex == 4) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 11) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 11) && (ngContentIndex == 1))) {
            cb(this._text_12, ctx);
            cb(this._el_13, ctx);
            cb(this._text_14, ctx);
        }
        if (((nodeIndex == 11) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 11) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 11) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 18) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 18) && (ngContentIndex == 1))) {
            cb(this._text_19, ctx);
            cb(this._el_20, ctx);
            cb(this._text_21, ctx);
        }
        if (((nodeIndex == 18) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 18) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 18) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 25) && (ngContentIndex == 0))) {
            cb(this._text_26, ctx);
        }
        if (((nodeIndex == 28) && (ngContentIndex == 0))) {
            cb(this._text_29, ctx);
        }
    };
    View_FormComponent1.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._NgForm_2_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngSubmit')) {
            var pd_sub_0 = (this.parentView.context.saveForm() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_FormComponent1.prototype.handleEvent_4 = function (eventName, $event) {
        this.compView_4.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_4_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent1.prototype.handleEvent_6 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_6_3.handleEvent(eventName, $event) && result);
        result = (this._NumberValueAccessor_6_4.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_6_11.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.parentView.context.form.values.currentRate = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_FormComponent1.prototype.handleEvent_11 = function (eventName, $event) {
        this.compView_11.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_11_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent1.prototype.handleEvent_13 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_13_3.handleEvent(eventName, $event) && result);
        result = (this._NumberValueAccessor_13_4.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_13_11.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.parentView.context.form.values.plasmaGlucose = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_FormComponent1.prototype.handleEvent_18 = function (eventName, $event) {
        this.compView_18.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_18_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent1.prototype.handleEvent_20 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_20_3.handleEvent(eventName, $event) && result);
        result = (this._NumberValueAccessor_20_4.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_20_11.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.parentView.context.form.values.modifiedRate = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_FormComponent1.prototype.handleEvent_25 = function (eventName, $event) {
        this.compView_25.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdButton_25_4.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent1.prototype.handleEvent_28 = function (eventName, $event) {
        this.compView_28.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdAnchor_28_4.handleEvent(eventName, $event) && result);
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.context.goBack() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_FormComponent1;
}(import1.AppView));
var View_FormComponent2 = (function (_super) {
    __extends(View_FormComponent2, _super);
    function View_FormComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_FormComponent2, renderType_FormComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_FormComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n		', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'form', import3.EMPTY_INLINE_ARRAY, null);
        this._NgForm_2_3 = new import14.Wrapper_NgForm(null, null);
        this._ControlContainer_2_4 = this._NgForm_2_3.context;
        this._NgControlStatusGroup_2_5 = new import15.Wrapper_NgControlStatusGroup(this._ControlContainer_2_4);
        this._text_3 = this.renderer.createText(this._el_2, '\n			', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'md-select', new import3.InlineArray16(10, 'class', 'big', 'name', 'diabetes', 'placeholder', 'Dosage Type', 'required', '', 'role', 'listbox'), null);
        this.compView_4 = new import40.View_MdSelect0(this.viewUtils, this, 4, this._el_4);
        this._RequiredValidator_4_3 = new import21.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_4_4 = [this._RequiredValidator_4_3.context];
        this._NgModel_4_5 = new import22.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_4_4, null, null);
        this._NgControl_4_6 = this._NgModel_4_5.context;
        this._NgControlStatus_4_7 = new import15.Wrapper_NgControlStatus(this._NgControl_4_6);
        this._MdPrefixRejector_4_8 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._MdSelect_4_9 = new import40.Wrapper_MdSelect(new import27.ElementRef(this._el_4), this.renderer, this.parentView.parentView.injectorGet(import43.ViewportRuler, this.parentView.parentIndex), this.compView_4.ref, this.parentView.parentView.injectorGet(import44.Dir, this.parentView.parentIndex, null), this._NgControl_4_6);
        this._query_MdOption_4_0 = new import18.QueryList();
        this._text_5 = this.renderer.createText(null, '\n				', null);
        this._el_6 = import3.createRenderElement(this.renderer, null, 'md-option', new import3.InlineArray4(4, 'role', 'option', 'value', 'Before Breakfast'), null);
        this.compView_6 = new import42.View_MdOption0(this.viewUtils, this, 6, this._el_6);
        this._MdOption_6_3 = new import42.Wrapper_MdOption(new import27.ElementRef(this._el_6), this.renderer);
        this._MdPrefixRejector_6_4 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._text_7 = this.renderer.createText(null, 'Before Breakfast', null);
        this.compView_6.create(this._MdOption_6_3.context);
        this._text_8 = this.renderer.createText(null, '\n				', null);
        this._el_9 = import3.createRenderElement(this.renderer, null, 'md-option', new import3.InlineArray4(4, 'role', 'option', 'value', '10am'), null);
        this.compView_9 = new import42.View_MdOption0(this.viewUtils, this, 9, this._el_9);
        this._MdOption_9_3 = new import42.Wrapper_MdOption(new import27.ElementRef(this._el_9), this.renderer);
        this._MdPrefixRejector_9_4 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._text_10 = this.renderer.createText(null, '10am', null);
        this.compView_9.create(this._MdOption_9_3.context);
        this._text_11 = this.renderer.createText(null, '			\n				', null);
        this._el_12 = import3.createRenderElement(this.renderer, null, 'md-option', new import3.InlineArray4(4, 'role', 'option', 'value', 'Before Lunch'), null);
        this.compView_12 = new import42.View_MdOption0(this.viewUtils, this, 12, this._el_12);
        this._MdOption_12_3 = new import42.Wrapper_MdOption(new import27.ElementRef(this._el_12), this.renderer);
        this._MdPrefixRejector_12_4 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._text_13 = this.renderer.createText(null, 'Before Lunch', null);
        this.compView_12.create(this._MdOption_12_3.context);
        this._text_14 = this.renderer.createText(null, '\n				', null);
        this._el_15 = import3.createRenderElement(this.renderer, null, 'md-option', new import3.InlineArray4(4, 'role', 'option', 'value', 'Before Evening Snack'), null);
        this.compView_15 = new import42.View_MdOption0(this.viewUtils, this, 15, this._el_15);
        this._MdOption_15_3 = new import42.Wrapper_MdOption(new import27.ElementRef(this._el_15), this.renderer);
        this._MdPrefixRejector_15_4 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._text_16 = this.renderer.createText(null, 'Before Evening Snack', null);
        this.compView_15.create(this._MdOption_15_3.context);
        this._text_17 = this.renderer.createText(null, '\n				', null);
        this._el_18 = import3.createRenderElement(this.renderer, null, 'md-option', new import3.InlineArray4(4, 'role', 'option', 'value', 'Before Dinner'), null);
        this.compView_18 = new import42.View_MdOption0(this.viewUtils, this, 18, this._el_18);
        this._MdOption_18_3 = new import42.Wrapper_MdOption(new import27.ElementRef(this._el_18), this.renderer);
        this._MdPrefixRejector_18_4 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._text_19 = this.renderer.createText(null, 'Before Dinner', null);
        this.compView_18.create(this._MdOption_18_3.context);
        this._text_20 = this.renderer.createText(null, '\n				', null);
        this._el_21 = import3.createRenderElement(this.renderer, null, 'md-option', new import3.InlineArray4(4, 'role', 'option', 'value', 'Bedtime'), null);
        this.compView_21 = new import42.View_MdOption0(this.viewUtils, this, 21, this._el_21);
        this._MdOption_21_3 = new import42.Wrapper_MdOption(new import27.ElementRef(this._el_21), this.renderer);
        this._MdPrefixRejector_21_4 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._text_22 = this.renderer.createText(null, 'Bedtime', null);
        this.compView_21.create(this._MdOption_21_3.context);
        this._text_23 = this.renderer.createText(null, '\n			', null);
        this.compView_4.create(this._MdSelect_4_9.context);
        this._text_24 = this.renderer.createText(this._el_2, '\n			', null);
        this._el_25 = import3.createRenderElement(this.renderer, this._el_2, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_26 = this.renderer.createText(this._el_2, '\n			', null);
        this._el_27 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', new import3.InlineArray2(2, 'class', 'big'), null);
        this.compView_27 = new import17.View_MdInputContainer0(this.viewUtils, this, 27, this._el_27);
        this._MdInputContainer_27_3 = new import17.Wrapper_MdInputContainer();
        this._query_MdInputDirective_27_0 = new import18.QueryList();
        this._query_MdPlaceholder_27_1 = new import18.QueryList();
        this._query_MdHint_27_2 = new import18.QueryList();
        this._text_28 = this.renderer.createText(null, '\n				', null);
        this._el_29 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray16(10, 'mdInput', '', 'name', 'plasmaGlucose', 'placeholder', 'Plasma Glucose (mg/dl)', 'required', '', 'type', 'number'), null);
        this._DefaultValueAccessor_29_3 = new import19.Wrapper_DefaultValueAccessor(this.renderer, new import27.ElementRef(this._el_29));
        this._NumberValueAccessor_29_4 = new import20.Wrapper_NumberValueAccessor(this.renderer, new import27.ElementRef(this._el_29));
        this._RequiredValidator_29_5 = new import21.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_29_6 = [this._RequiredValidator_29_5.context];
        this._NG_VALUE_ACCESSOR_29_7 = [
            this._DefaultValueAccessor_29_3.context,
            this._NumberValueAccessor_29_4.context
        ];
        this._NgModel_29_8 = new import22.Wrapper_NgModel(this._ControlContainer_2_4, this._NG_VALIDATORS_29_6, null, this._NG_VALUE_ACCESSOR_29_7);
        this._NgControl_29_9 = this._NgModel_29_8.context;
        this._NgControlStatus_29_10 = new import15.Wrapper_NgControlStatus(this._NgControl_29_9);
        this._MdInputDirective_29_11 = new import17.Wrapper_MdInputDirective(new import27.ElementRef(this._el_29), this.renderer, this._NgControl_29_9);
        this._text_30 = this.renderer.createText(null, '\n			', null);
        this.compView_27.create(this._MdInputContainer_27_3.context);
        this._text_31 = this.renderer.createText(this._el_2, '					\n			\n			', null);
        this._el_32 = import3.createRenderElement(this.renderer, this._el_2, 'div', new import3.InlineArray2(2, 'style', 'text-align:center;margin-top:10px;'), null);
        this._text_33 = this.renderer.createText(this._el_32, '\n				', null);
        this._el_34 = import3.createRenderElement(this.renderer, this._el_32, 'button', new import3.InlineArray4(4, 'md-raised-button', '', 'type', 'submit'), null);
        this.compView_34 = new import25.View_MdButton0(this.viewUtils, this, 34, this._el_34);
        this._MdPrefixRejector_34_3 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._MdButton_34_4 = new import25.Wrapper_MdButton(new import27.ElementRef(this._el_34), this.renderer);
        this._MdRaisedButtonCssMatStyler_34_5 = new import25.Wrapper_MdRaisedButtonCssMatStyler();
        this._text_35 = this.renderer.createText(null, 'Save', null);
        this.compView_34.create(this._MdButton_34_4.context);
        this._text_36 = this.renderer.createText(this._el_32, '\n				', null);
        this._el_37 = import3.createRenderElement(this.renderer, this._el_32, 'a', new import3.InlineArray2(2, 'md-button', ''), null);
        this.compView_37 = new import25.View_MdAnchor0(this.viewUtils, this, 37, this._el_37);
        this._MdPrefixRejector_37_3 = new import24.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import28.MATERIAL_COMPATIBILITY_MODE, this.parentView.parentIndex, null));
        this._MdAnchor_37_4 = new import25.Wrapper_MdAnchor(new import27.ElementRef(this._el_37), this.renderer);
        this._MdButtonCssMatStyler_37_5 = new import25.Wrapper_MdButtonCssMatStyler();
        this._text_38 = this.renderer.createText(null, 'Cancel', null);
        this.compView_37.create(this._MdAnchor_37_4.context);
        this._text_39 = this.renderer.createText(this._el_32, '\n			', null);
        this._text_40 = this.renderer.createText(this._el_2, '\n		', null);
        this._text_41 = this.renderer.createText(this._el_0, '\n	', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray8(6, 'ngSubmit', null, 'submit', null, 'reset', null), this.eventHandler(this.handleEvent_2));
        this._NgForm_2_3.subscribe(this, this.eventHandler(this.handleEvent_2), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_4, new import3.InlineArray8(6, 'ngModelChange', null, 'keydown', null, 'blur', null), this.eventHandler(this.handleEvent_4));
        this._NgModel_4_5.subscribe(this, this.eventHandler(this.handleEvent_4), true);
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_6, new import3.InlineArray4(4, 'click', null, 'keydown', null), this.eventHandler(this.handleEvent_6));
        var disposable_3 = import3.subscribeToRenderElement(this, this._el_9, new import3.InlineArray4(4, 'click', null, 'keydown', null), this.eventHandler(this.handleEvent_9));
        var disposable_4 = import3.subscribeToRenderElement(this, this._el_12, new import3.InlineArray4(4, 'click', null, 'keydown', null), this.eventHandler(this.handleEvent_12));
        var disposable_5 = import3.subscribeToRenderElement(this, this._el_15, new import3.InlineArray4(4, 'click', null, 'keydown', null), this.eventHandler(this.handleEvent_15));
        var disposable_6 = import3.subscribeToRenderElement(this, this._el_18, new import3.InlineArray4(4, 'click', null, 'keydown', null), this.eventHandler(this.handleEvent_18));
        var disposable_7 = import3.subscribeToRenderElement(this, this._el_21, new import3.InlineArray4(4, 'click', null, 'keydown', null), this.eventHandler(this.handleEvent_21));
        var disposable_8 = import3.subscribeToRenderElement(this, this._el_27, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_27));
        var disposable_9 = import3.subscribeToRenderElement(this, this._el_29, new import3.InlineArray16(10, 'ngModelChange', null, 'input', null, 'blur', null, 'change', null, 'focus', null), this.eventHandler(this.handleEvent_29));
        this._NgModel_29_8.subscribe(this, this.eventHandler(this.handleEvent_29), true);
        var disposable_10 = import3.subscribeToRenderElement(this, this._el_34, new import3.InlineArray8(6, 'mousedown', null, 'focus', null, 'blur', null), this.eventHandler(this.handleEvent_34));
        var disposable_11 = import3.subscribeToRenderElement(this, this._el_37, new import3.InlineArray8(8, 'click', null, 'mousedown', null, 'focus', null, 'blur', null), this.eventHandler(this.handleEvent_37));
        this._query_MdInputDirective_27_0.reset([this._MdInputDirective_29_11.context]);
        this._MdInputContainer_27_3.context._mdInputChild = this._query_MdInputDirective_27_0.first;
        this._query_MdPlaceholder_27_1.reset([]);
        this._MdInputContainer_27_3.context._placeholderChild = this._query_MdPlaceholder_27_1.first;
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._el_15,
            this._text_16,
            this._text_17,
            this._el_18,
            this._text_19,
            this._text_20,
            this._el_21,
            this._text_22,
            this._text_23,
            this._text_24,
            this._el_25,
            this._text_26,
            this._el_27,
            this._text_28,
            this._el_29,
            this._text_30,
            this._text_31,
            this._el_32,
            this._text_33,
            this._el_34,
            this._text_35,
            this._text_36,
            this._el_37,
            this._text_38,
            this._text_39,
            this._text_40,
            this._text_41
        ]), [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6,
            disposable_7,
            disposable_8,
            disposable_9,
            disposable_10,
            disposable_11
        ]);
        return null;
    };
    View_FormComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import41.MdOption) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) {
            return this._MdOption_6_3.context;
        }
        if (((token === import28.MdPrefixRejector) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) {
            return this._MdPrefixRejector_6_4.context;
        }
        if (((token === import41.MdOption) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 10)))) {
            return this._MdOption_9_3.context;
        }
        if (((token === import28.MdPrefixRejector) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 10)))) {
            return this._MdPrefixRejector_9_4.context;
        }
        if (((token === import41.MdOption) && ((12 <= requestNodeIndex) && (requestNodeIndex <= 13)))) {
            return this._MdOption_12_3.context;
        }
        if (((token === import28.MdPrefixRejector) && ((12 <= requestNodeIndex) && (requestNodeIndex <= 13)))) {
            return this._MdPrefixRejector_12_4.context;
        }
        if (((token === import41.MdOption) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 16)))) {
            return this._MdOption_15_3.context;
        }
        if (((token === import28.MdPrefixRejector) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 16)))) {
            return this._MdPrefixRejector_15_4.context;
        }
        if (((token === import41.MdOption) && ((18 <= requestNodeIndex) && (requestNodeIndex <= 19)))) {
            return this._MdOption_18_3.context;
        }
        if (((token === import28.MdPrefixRejector) && ((18 <= requestNodeIndex) && (requestNodeIndex <= 19)))) {
            return this._MdPrefixRejector_18_4.context;
        }
        if (((token === import41.MdOption) && ((21 <= requestNodeIndex) && (requestNodeIndex <= 22)))) {
            return this._MdOption_21_3.context;
        }
        if (((token === import28.MdPrefixRejector) && ((21 <= requestNodeIndex) && (requestNodeIndex <= 22)))) {
            return this._MdPrefixRejector_21_4.context;
        }
        if (((token === import31.RequiredValidator) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 23)))) {
            return this._RequiredValidator_4_3.context;
        }
        if (((token === import32.NG_VALIDATORS) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 23)))) {
            return this._NG_VALIDATORS_4_4;
        }
        if (((token === import34.NgModel) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 23)))) {
            return this._NgModel_4_5.context;
        }
        if (((token === import35.NgControl) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 23)))) {
            return this._NgControl_4_6;
        }
        if (((token === import36.NgControlStatus) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 23)))) {
            return this._NgControlStatus_4_7.context;
        }
        if (((token === import28.MdPrefixRejector) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 23)))) {
            return this._MdPrefixRejector_4_8.context;
        }
        if (((token === import39.MdSelect) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 23)))) {
            return this._MdSelect_4_9.context;
        }
        if (((token === import29.DefaultValueAccessor) && (29 === requestNodeIndex))) {
            return this._DefaultValueAccessor_29_3.context;
        }
        if (((token === import30.NumberValueAccessor) && (29 === requestNodeIndex))) {
            return this._NumberValueAccessor_29_4.context;
        }
        if (((token === import31.RequiredValidator) && (29 === requestNodeIndex))) {
            return this._RequiredValidator_29_5.context;
        }
        if (((token === import32.NG_VALIDATORS) && (29 === requestNodeIndex))) {
            return this._NG_VALIDATORS_29_6;
        }
        if (((token === import33.NG_VALUE_ACCESSOR) && (29 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_29_7;
        }
        if (((token === import34.NgModel) && (29 === requestNodeIndex))) {
            return this._NgModel_29_8.context;
        }
        if (((token === import35.NgControl) && (29 === requestNodeIndex))) {
            return this._NgControl_29_9;
        }
        if (((token === import36.NgControlStatus) && (29 === requestNodeIndex))) {
            return this._NgControlStatus_29_10.context;
        }
        if (((token === import16.MdInputDirective) && (29 === requestNodeIndex))) {
            return this._MdInputDirective_29_11.context;
        }
        if (((token === import16.MdInputContainer) && ((27 <= requestNodeIndex) && (requestNodeIndex <= 30)))) {
            return this._MdInputContainer_27_3.context;
        }
        if (((token === import28.MdPrefixRejector) && ((34 <= requestNodeIndex) && (requestNodeIndex <= 35)))) {
            return this._MdPrefixRejector_34_3.context;
        }
        if (((token === import23.MdButton) && ((34 <= requestNodeIndex) && (requestNodeIndex <= 35)))) {
            return this._MdButton_34_4.context;
        }
        if (((token === import23.MdRaisedButtonCssMatStyler) && ((34 <= requestNodeIndex) && (requestNodeIndex <= 35)))) {
            return this._MdRaisedButtonCssMatStyler_34_5.context;
        }
        if (((token === import28.MdPrefixRejector) && ((37 <= requestNodeIndex) && (requestNodeIndex <= 38)))) {
            return this._MdPrefixRejector_37_3.context;
        }
        if (((token === import23.MdAnchor) && ((37 <= requestNodeIndex) && (requestNodeIndex <= 38)))) {
            return this._MdAnchor_37_4.context;
        }
        if (((token === import23.MdButtonCssMatStyler) && ((37 <= requestNodeIndex) && (requestNodeIndex <= 38)))) {
            return this._MdButtonCssMatStyler_37_5.context;
        }
        if (((token === import37.NgForm) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 40)))) {
            return this._NgForm_2_3.context;
        }
        if (((token === import38.ControlContainer) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 40)))) {
            return this._ControlContainer_2_4;
        }
        if (((token === import36.NgControlStatusGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 40)))) {
            return this._NgControlStatusGroup_2_5.context;
        }
        return notFoundResult;
    };
    View_FormComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        this._NgForm_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        this._NgControlStatusGroup_2_5.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_4_0_0 = '';
        this._RequiredValidator_4_3.check_required(currVal_4_0_0, throwOnChange, false);
        this._RequiredValidator_4_3.ngDoCheck(this, this._el_4, throwOnChange);
        var currVal_4_1_0 = 'diabetes';
        this._NgModel_4_5.check_name(currVal_4_1_0, throwOnChange, false);
        var currVal_4_1_1 = this.parentView.context.form.values.dosageType;
        this._NgModel_4_5.check_model(currVal_4_1_1, throwOnChange, false);
        this._NgModel_4_5.ngDoCheck(this, this._el_4, throwOnChange);
        this._NgControlStatus_4_7.ngDoCheck(this, this._el_4, throwOnChange);
        this._MdPrefixRejector_4_8.ngDoCheck(this, this._el_4, throwOnChange);
        var currVal_4_4_0 = 'Dosage Type';
        this._MdSelect_4_9.check_placeholder(currVal_4_4_0, throwOnChange, false);
        var currVal_4_4_1 = '';
        this._MdSelect_4_9.check_required(currVal_4_4_1, throwOnChange, false);
        this._MdSelect_4_9.ngDoCheck(this, this._el_4, throwOnChange);
        var currVal_6_0_0 = 'Before Breakfast';
        this._MdOption_6_3.check_value(currVal_6_0_0, throwOnChange, false);
        this._MdOption_6_3.ngDoCheck(this, this._el_6, throwOnChange);
        this._MdPrefixRejector_6_4.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_9_0_0 = '10am';
        this._MdOption_9_3.check_value(currVal_9_0_0, throwOnChange, false);
        this._MdOption_9_3.ngDoCheck(this, this._el_9, throwOnChange);
        this._MdPrefixRejector_9_4.ngDoCheck(this, this._el_9, throwOnChange);
        var currVal_12_0_0 = 'Before Lunch';
        this._MdOption_12_3.check_value(currVal_12_0_0, throwOnChange, false);
        this._MdOption_12_3.ngDoCheck(this, this._el_12, throwOnChange);
        this._MdPrefixRejector_12_4.ngDoCheck(this, this._el_12, throwOnChange);
        var currVal_15_0_0 = 'Before Evening Snack';
        this._MdOption_15_3.check_value(currVal_15_0_0, throwOnChange, false);
        this._MdOption_15_3.ngDoCheck(this, this._el_15, throwOnChange);
        this._MdPrefixRejector_15_4.ngDoCheck(this, this._el_15, throwOnChange);
        var currVal_18_0_0 = 'Before Dinner';
        this._MdOption_18_3.check_value(currVal_18_0_0, throwOnChange, false);
        this._MdOption_18_3.ngDoCheck(this, this._el_18, throwOnChange);
        this._MdPrefixRejector_18_4.ngDoCheck(this, this._el_18, throwOnChange);
        var currVal_21_0_0 = 'Bedtime';
        this._MdOption_21_3.check_value(currVal_21_0_0, throwOnChange, false);
        this._MdOption_21_3.ngDoCheck(this, this._el_21, throwOnChange);
        this._MdPrefixRejector_21_4.ngDoCheck(this, this._el_21, throwOnChange);
        this._MdInputContainer_27_3.ngDoCheck(this, this._el_27, throwOnChange);
        this._DefaultValueAccessor_29_3.ngDoCheck(this, this._el_29, throwOnChange);
        this._NumberValueAccessor_29_4.ngDoCheck(this, this._el_29, throwOnChange);
        var currVal_29_2_0 = '';
        this._RequiredValidator_29_5.check_required(currVal_29_2_0, throwOnChange, false);
        this._RequiredValidator_29_5.ngDoCheck(this, this._el_29, throwOnChange);
        var currVal_29_3_0 = 'plasmaGlucose';
        this._NgModel_29_8.check_name(currVal_29_3_0, throwOnChange, false);
        var currVal_29_3_1 = this.parentView.context.form.values.plasmaGlucose;
        this._NgModel_29_8.check_model(currVal_29_3_1, throwOnChange, false);
        this._NgModel_29_8.ngDoCheck(this, this._el_29, throwOnChange);
        this._NgControlStatus_29_10.ngDoCheck(this, this._el_29, throwOnChange);
        var currVal_29_5_0 = 'Plasma Glucose (mg/dl)';
        this._MdInputDirective_29_11.check_placeholder(currVal_29_5_0, throwOnChange, false);
        var currVal_29_5_1 = '';
        this._MdInputDirective_29_11.check_required(currVal_29_5_1, throwOnChange, false);
        var currVal_29_5_2 = 'number';
        this._MdInputDirective_29_11.check_type(currVal_29_5_2, throwOnChange, false);
        this._MdInputDirective_29_11.ngDoCheck(this, this._el_29, throwOnChange);
        this._MdPrefixRejector_34_3.ngDoCheck(this, this._el_34, throwOnChange);
        var currVal_34_1_0 = !this._NgForm_2_3.context.form.valid;
        this._MdButton_34_4.check_disabled(currVal_34_1_0, throwOnChange, false);
        if (this._MdButton_34_4.ngDoCheck(this, this._el_34, throwOnChange)) {
            this.compView_34.markAsCheckOnce();
        }
        this._MdRaisedButtonCssMatStyler_34_5.ngDoCheck(this, this._el_34, throwOnChange);
        this._MdPrefixRejector_37_3.ngDoCheck(this, this._el_37, throwOnChange);
        this._MdAnchor_37_4.ngDoCheck(this, this._el_37, throwOnChange);
        this._MdButtonCssMatStyler_37_5.ngDoCheck(this, this._el_37, throwOnChange);
        if (!throwOnChange) {
            if (this._query_MdOption_4_0.dirty) {
                this._query_MdOption_4_0.reset([
                    this._MdOption_6_3.context,
                    this._MdOption_9_3.context,
                    this._MdOption_12_3.context,
                    this._MdOption_15_3.context,
                    this._MdOption_18_3.context,
                    this._MdOption_21_3.context
                ]);
                this._MdSelect_4_9.context.options = this._query_MdOption_4_0;
                this._query_MdOption_4_0.notifyOnChanges();
            }
            if (this._query_MdHint_27_2.dirty) {
                this._query_MdHint_27_2.reset([]);
                this._MdInputContainer_27_3.context._hintChildren = this._query_MdHint_27_2;
                this._query_MdHint_27_2.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdSelect_4_9.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_27_3.context.ngAfterContentInit();
            }
        }
        this._NgControlStatusGroup_2_5.checkHost(this, this, this._el_2, throwOnChange);
        this._RequiredValidator_4_3.checkHost(this, this.compView_4, this._el_4, throwOnChange);
        this._NgControlStatus_4_7.checkHost(this, this.compView_4, this._el_4, throwOnChange);
        this._MdSelect_4_9.checkHost(this, this.compView_4, this._el_4, throwOnChange);
        this._MdOption_6_3.checkHost(this, this.compView_6, this._el_6, throwOnChange);
        this._MdOption_9_3.checkHost(this, this.compView_9, this._el_9, throwOnChange);
        this._MdOption_12_3.checkHost(this, this.compView_12, this._el_12, throwOnChange);
        this._MdOption_15_3.checkHost(this, this.compView_15, this._el_15, throwOnChange);
        this._MdOption_18_3.checkHost(this, this.compView_18, this._el_18, throwOnChange);
        this._MdOption_21_3.checkHost(this, this.compView_21, this._el_21, throwOnChange);
        this._MdInputContainer_27_3.checkHost(this, this.compView_27, this._el_27, throwOnChange);
        this._RequiredValidator_29_5.checkHost(this, this, this._el_29, throwOnChange);
        this._NgControlStatus_29_10.checkHost(this, this, this._el_29, throwOnChange);
        this._MdInputDirective_29_11.checkHost(this, this, this._el_29, throwOnChange);
        this._MdButton_34_4.checkHost(this, this.compView_34, this._el_34, throwOnChange);
        this._MdRaisedButtonCssMatStyler_34_5.checkHost(this, this.compView_34, this._el_34, throwOnChange);
        this._MdAnchor_37_4.checkHost(this, this.compView_37, this._el_37, throwOnChange);
        this._MdButtonCssMatStyler_37_5.checkHost(this, this.compView_37, this._el_37, throwOnChange);
        this.compView_4.internalDetectChanges(throwOnChange);
        this.compView_6.internalDetectChanges(throwOnChange);
        this.compView_9.internalDetectChanges(throwOnChange);
        this.compView_12.internalDetectChanges(throwOnChange);
        this.compView_15.internalDetectChanges(throwOnChange);
        this.compView_18.internalDetectChanges(throwOnChange);
        this.compView_21.internalDetectChanges(throwOnChange);
        this.compView_27.internalDetectChanges(throwOnChange);
        this.compView_34.internalDetectChanges(throwOnChange);
        this.compView_37.internalDetectChanges(throwOnChange);
    };
    View_FormComponent2.prototype.destroyInternal = function () {
        this.compView_4.destroy();
        this.compView_6.destroy();
        this.compView_9.destroy();
        this.compView_12.destroy();
        this.compView_15.destroy();
        this.compView_18.destroy();
        this.compView_21.destroy();
        this.compView_27.destroy();
        this.compView_34.destroy();
        this.compView_37.destroy();
        this._MdOption_6_3.ngOnDestroy();
        this._MdOption_9_3.ngOnDestroy();
        this._MdOption_12_3.ngOnDestroy();
        this._MdOption_15_3.ngOnDestroy();
        this._MdOption_18_3.ngOnDestroy();
        this._MdOption_21_3.ngOnDestroy();
        this._NgModel_4_5.ngOnDestroy();
        this._MdSelect_4_9.ngOnDestroy();
        this._NgModel_29_8.ngOnDestroy();
        this._MdInputDirective_29_11.ngOnDestroy();
        this._NgForm_2_3.ngOnDestroy();
    };
    View_FormComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_FormComponent2.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 4) && (ngContentIndex == 0))) {
            cb(this._text_5, ctx);
            cb(this._el_6, ctx);
            cb(this._text_8, ctx);
            cb(this._el_9, ctx);
            cb(this._text_11, ctx);
            cb(this._el_12, ctx);
            cb(this._text_14, ctx);
            cb(this._el_15, ctx);
            cb(this._text_17, ctx);
            cb(this._el_18, ctx);
            cb(this._text_20, ctx);
            cb(this._el_21, ctx);
            cb(this._text_23, ctx);
        }
        if (((nodeIndex == 6) && (ngContentIndex == 0))) {
            cb(this._text_7, ctx);
        }
        if (((nodeIndex == 9) && (ngContentIndex == 0))) {
            cb(this._text_10, ctx);
        }
        if (((nodeIndex == 12) && (ngContentIndex == 0))) {
            cb(this._text_13, ctx);
        }
        if (((nodeIndex == 15) && (ngContentIndex == 0))) {
            cb(this._text_16, ctx);
        }
        if (((nodeIndex == 18) && (ngContentIndex == 0))) {
            cb(this._text_19, ctx);
        }
        if (((nodeIndex == 21) && (ngContentIndex == 0))) {
            cb(this._text_22, ctx);
        }
        if (((nodeIndex == 27) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 27) && (ngContentIndex == 1))) {
            cb(this._text_28, ctx);
            cb(this._el_29, ctx);
            cb(this._text_30, ctx);
        }
        if (((nodeIndex == 27) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 27) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 27) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 34) && (ngContentIndex == 0))) {
            cb(this._text_35, ctx);
        }
        if (((nodeIndex == 37) && (ngContentIndex == 0))) {
            cb(this._text_38, ctx);
        }
    };
    View_FormComponent2.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._NgForm_2_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngSubmit')) {
            var pd_sub_0 = (this.parentView.context.saveForm() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_FormComponent2.prototype.handleEvent_4 = function (eventName, $event) {
        this.compView_4.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdSelect_4_9.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.parentView.context.form.values.dosageType = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_FormComponent2.prototype.handleEvent_6 = function (eventName, $event) {
        this.compView_6.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdOption_6_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent2.prototype.handleEvent_9 = function (eventName, $event) {
        this.compView_9.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdOption_9_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent2.prototype.handleEvent_12 = function (eventName, $event) {
        this.compView_12.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdOption_12_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent2.prototype.handleEvent_15 = function (eventName, $event) {
        this.compView_15.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdOption_15_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent2.prototype.handleEvent_18 = function (eventName, $event) {
        this.compView_18.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdOption_18_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent2.prototype.handleEvent_21 = function (eventName, $event) {
        this.compView_21.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdOption_21_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent2.prototype.handleEvent_27 = function (eventName, $event) {
        this.compView_27.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_27_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent2.prototype.handleEvent_29 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_29_3.handleEvent(eventName, $event) && result);
        result = (this._NumberValueAccessor_29_4.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_29_11.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.parentView.context.form.values.plasmaGlucose = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_FormComponent2.prototype.handleEvent_34 = function (eventName, $event) {
        this.compView_34.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdButton_34_4.handleEvent(eventName, $event) && result);
        return result;
    };
    View_FormComponent2.prototype.handleEvent_37 = function (eventName, $event) {
        this.compView_37.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdAnchor_37_4.handleEvent(eventName, $event) && result);
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.context.goBack() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_FormComponent2;
}(import1.AppView));
var renderType_FormComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_FormComponent, {});
var View_FormComponent0 = (function (_super) {
    __extends(View_FormComponent0, _super);
    function View_FormComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_FormComponent0, renderType_FormComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_FormComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'style', 'padding:5px;'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n	', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import26.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import46.TemplateRef_(this, 2, this._anchor_2);
        this._NgIf_2_6 = new import45.Wrapper_NgIf(this._vc_2.vcRef, this._TemplateRef_2_5);
        this._text_3 = this.renderer.createText(this._el_0, '\n\n	', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_4 = new import26.ViewContainer(4, 0, this, this._anchor_4);
        this._TemplateRef_4_5 = new import46.TemplateRef_(this, 4, this._anchor_4);
        this._NgIf_4_6 = new import45.Wrapper_NgIf(this._vc_4.vcRef, this._TemplateRef_4_5);
        this._text_5 = this.renderer.createText(this._el_0, '\n', null);
        this._text_6 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3,
            this._anchor_4,
            this._text_5,
            this._text_6
        ]), null);
        return null;
    };
    View_FormComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import46.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import47.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6.context;
        }
        if (((token === import46.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import47.NgIf) && (4 === requestNodeIndex))) {
            return this._NgIf_4_6.context;
        }
        return notFoundResult;
    };
    View_FormComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = (this.context.type == 'infusion');
        this._NgIf_2_6.check_ngIf(currVal_2_0_0, throwOnChange, false);
        this._NgIf_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        var currVal_4_0_0 = (this.context.type == 'subcutaneous');
        this._NgIf_4_6.check_ngIf(currVal_4_0_0, throwOnChange, false);
        this._NgIf_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
    };
    View_FormComponent0.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
        this._vc_4.destroyNestedViews();
    };
    View_FormComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_FormComponent1(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        if ((nodeIndex == 4)) {
            return new View_FormComponent2(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        return null;
    };
    return View_FormComponent0;
}(import1.AppView));
exports.View_FormComponent0 = View_FormComponent0;
//# sourceMappingURL=form.component.ngfactory.js.map