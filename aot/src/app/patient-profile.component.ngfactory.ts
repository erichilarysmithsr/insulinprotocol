/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../src/app/patient-profile.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../src/app/patient-provider.service';
import * as import9 from '@angular/router/src/router';
import * as import10 from '@angular/router/src/router_state';
import * as import11 from '@angular/common/src/location/location';
import * as import12 from '@angular/material/core/option/option';
import * as import13 from '../../node_modules/@angular/material/core/option/option.ngfactory';
import * as import14 from '../../node_modules/@angular/material/core/compatibility/compatibility.ngfactory';
import * as import15 from '@angular/core/src/linker/view_container';
import * as import16 from '@angular/core/src/change_detection/change_detection_util';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/material/core/compatibility/compatibility';
import * as import19 from '@angular/material/select/select';
import * as import20 from '../../node_modules/@angular/forms/src/directives/validators.ngfactory';
import * as import21 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import22 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import23 from '../../node_modules/@angular/material/select/select.ngfactory';
import * as import24 from '@angular/core/src/linker/query_list';
import * as import25 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import26 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import27 from '@angular/material/core/rtl/dir';
import * as import28 from '@angular/core/src/linker/template_ref';
import * as import29 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import30 from '@angular/common/src/directives/ng_for';
import * as import31 from '@angular/forms/src/directives/validators';
import * as import32 from '@angular/forms/src/validators';
import * as import33 from '@angular/forms/src/directives/ng_model';
import * as import34 from '@angular/forms/src/directives/ng_control';
import * as import35 from '@angular/forms/src/directives/ng_control_status';
import * as import36 from '../../node_modules/@angular/forms/src/directives/ng_form.ngfactory';
import * as import37 from '@angular/material/input/input-container';
import * as import38 from '../../node_modules/@angular/material/input/input-container.ngfactory';
import * as import39 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import40 from '../../node_modules/@angular/forms/src/directives/number_value_accessor.ngfactory';
import * as import41 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import42 from '@angular/material/button/button';
import * as import43 from '../../node_modules/@angular/material/button/button.ngfactory';
import * as import44 from '@angular/common/src/pipes/date_pipe';
import * as import45 from '@angular/core/src/i18n/tokens';
import * as import46 from '@angular/forms/src/directives/default_value_accessor';
import * as import47 from '@angular/forms/src/directives/control_value_accessor';
import * as import48 from '@angular/forms/src/directives/number_value_accessor';
import * as import49 from '@angular/common/src/directives/ng_if';
import * as import50 from '@angular/forms/src/directives/ng_form';
import * as import51 from '@angular/forms/src/directives/control_container';
export class Wrapper_PatientProfileComponent {
  /*private*/ _eventHandler:Function;
  context:import0.PatientProfileComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this._changed = false;
    this.context = new import0.PatientProfileComponent(p0,p1,p2,p3);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_PatientProfileComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_PatientProfileComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.PatientProfileComponent>;
  _PatientProfileComponent_0_3:Wrapper_PatientProfileComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_PatientProfileComponent_Host0,renderType_PatientProfileComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ng-component',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_PatientProfileComponent0(this.viewUtils,this,0,this._el_0);
    this._PatientProfileComponent_0_3 = new Wrapper_PatientProfileComponent(this.injectorGet(import8.PatientProvider,this.parentIndex),this.injectorGet(import9.Router,this.parentIndex),this.injectorGet(import10.ActivatedRoute,this.parentIndex),this.injectorGet(import11.Location,this.parentIndex));
    this.compView_0.create(this._PatientProfileComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._PatientProfileComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.PatientProfileComponent) && (0 === requestNodeIndex))) { return this._PatientProfileComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._PatientProfileComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const PatientProfileComponentNgFactory:import7.ComponentFactory<import0.PatientProfileComponent> = new import7.ComponentFactory<import0.PatientProfileComponent>('ng-component',View_PatientProfileComponent_Host0,import0.PatientProfileComponent);
const styles_PatientProfileComponent:any[] = ([] as any[]);
class View_PatientProfileComponent2 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import12.MdOption>;
  _MdOption_0_3:import13.Wrapper_MdOption;
  _MdPrefixRejector_0_4:import14.Wrapper_MdPrefixRejector;
  _text_1:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_PatientProfileComponent2,renderType_PatientProfileComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_5 = import16.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'md-option',new import3.InlineArray2(2,'role','option'),(null as any));
    this.compView_0 = new import13.View_MdOption0(this.viewUtils,this,0,this._el_0);
    this._MdOption_0_3 = new import13.Wrapper_MdOption(new import17.ElementRef(this._el_0),this.renderer);
    this._MdPrefixRejector_0_4 = new import14.Wrapper_MdPrefixRejector(this.parentView.parentView.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentView.parentView.parentIndex,(null as any)));
    this._text_1 = this.renderer.createText((null as any),'',(null as any));
    this.compView_0.create(this._MdOption_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'click',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.MdOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MdOption_0_3.context; }
    if (((token === import18.MdPrefixRejector) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MdPrefixRejector_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit.k;
    this._MdOption_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._MdOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdPrefixRejector_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdOption_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    const currVal_5:any = import3.inlineInterpolate(1,'',this.context.$implicit.t,'');
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setText(this._text_1,currVal_5);
      this._expr_5 = currVal_5;
    }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_PatientProfileComponent1>this.parentView)._query_MdOption_0_0.setDirty();
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdOption_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) { cb(this._text_1,ctx); }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdOption_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
class View_PatientProfileComponent1 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import19.MdSelect>;
  _RequiredValidator_0_3:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_0_4:any[];
  _NgModel_0_5:import21.Wrapper_NgModel;
  _NgControl_0_6:any;
  _NgControlStatus_0_7:import22.Wrapper_NgControlStatus;
  _MdPrefixRejector_0_8:import14.Wrapper_MdPrefixRejector;
  _MdSelect_0_9:import23.Wrapper_MdSelect;
  _query_MdOption_0_0:import24.QueryList<any>;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import15.ViewContainer;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import25.Wrapper_NgFor;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_PatientProfileComponent1,renderType_PatientProfileComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'md-select',new import3.InlineArray16(10,'class','medium','name','subcutaneousColumn','placeholder','Subcutaneous Column','required','','role','listbox'),(null as any));
    this.compView_0 = new import23.View_MdSelect0(this.viewUtils,this,0,this._el_0);
    this._RequiredValidator_0_3 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_0_4 = [this._RequiredValidator_0_3.context];
    this._NgModel_0_5 = new import21.Wrapper_NgModel((<View_PatientProfileComponent0>this.parentView)._ControlContainer_2_4,this._NG_VALIDATORS_0_4,(null as any),(null as any));
    this._NgControl_0_6 = this._NgModel_0_5.context;
    this._NgControlStatus_0_7 = new import22.Wrapper_NgControlStatus(this._NgControl_0_6);
    this._MdPrefixRejector_0_8 = new import14.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentView.parentIndex,(null as any)));
    this._MdSelect_0_9 = new import23.Wrapper_MdSelect(new import17.ElementRef(this._el_0),this.renderer,this.parentView.parentView.injectorGet(import26.ViewportRuler,this.parentView.parentIndex),this.compView_0.ref,this.parentView.parentView.injectorGet(import27.Dir,this.parentView.parentIndex,(null as any)),this._NgControl_0_6);
    this._query_MdOption_0_0 = new import24.QueryList<any>();
    this._text_1 = this.renderer.createText((null as any),'\n			',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_2 = new import15.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import28.TemplateRef_(this,2,this._anchor_2);
    this._NgFor_2_6 = new import25.Wrapper_NgFor(this._vc_2.vcRef,this._TemplateRef_2_5,this.parentView.parentView.injectorGet(import29.IterableDiffers,this.parentView.parentIndex),this.parentView.ref);
    this._text_3 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_0.create(this._MdSelect_0_9.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(6,'ngModelChange',(null as any),'keydown',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgModel_0_5.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import28.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import30.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    if (((token === import31.RequiredValidator) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._RequiredValidator_0_3.context; }
    if (((token === import32.NG_VALIDATORS) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NG_VALIDATORS_0_4; }
    if (((token === import33.NgModel) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgModel_0_5.context; }
    if (((token === import34.NgControl) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgControl_0_6; }
    if (((token === import35.NgControlStatus) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgControlStatus_0_7.context; }
    if (((token === import18.MdPrefixRejector) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._MdPrefixRejector_0_8.context; }
    if (((token === import19.MdSelect) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._MdSelect_0_9.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = '';
    this._RequiredValidator_0_3.check_required(currVal_0_0_0,throwOnChange,false);
    this._RequiredValidator_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = 'subcutaneousColumn';
    this._NgModel_0_5.check_name(currVal_0_1_0,throwOnChange,false);
    const currVal_0_1_1:any = this.parentView.context.pp.patient.profile.subcutaneousColumn;
    this._NgModel_0_5.check_model(currVal_0_1_1,throwOnChange,false);
    this._NgModel_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdPrefixRejector_0_8.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_4_0:any = 'Subcutaneous Column';
    this._MdSelect_0_9.check_placeholder(currVal_0_4_0,throwOnChange,false);
    const currVal_0_4_1:any = '';
    this._MdSelect_0_9.check_required(currVal_0_4_1,throwOnChange,false);
    this._MdSelect_0_9.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = this.parentView.context.getOptions('subcutaneous');
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    this._NgFor_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdOption_0_0.dirty) {
          this._query_MdOption_0_0.reset([this._vc_2.mapNestedViews(View_PatientProfileComponent2,(nestedView:View_PatientProfileComponent2):any => {
            return [nestedView._MdOption_0_3.context];
        })]);
        this._MdSelect_0_9.context.options = this._query_MdOption_0_0;
        this._query_MdOption_0_0.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._MdSelect_0_9.context.ngAfterContentInit(); }
    }
    this._RequiredValidator_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this._MdSelect_0_9.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this.compView_0.destroy();
    this._NgModel_0_5.ngOnDestroy();
    this._MdSelect_0_9.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {
      cb(this._text_1,ctx);
      cb(this._vc_2.nativeElement,ctx);
      this._vc_2.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_3,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 2)) { return new View_PatientProfileComponent2(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSelect_0_9.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.pp.patient.profile.subcutaneousColumn = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_PatientProfileComponent4 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import12.MdOption>;
  _MdOption_0_3:import13.Wrapper_MdOption;
  _MdPrefixRejector_0_4:import14.Wrapper_MdPrefixRejector;
  _text_1:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_PatientProfileComponent4,renderType_PatientProfileComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_5 = import16.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'md-option',new import3.InlineArray2(2,'role','option'),(null as any));
    this.compView_0 = new import13.View_MdOption0(this.viewUtils,this,0,this._el_0);
    this._MdOption_0_3 = new import13.Wrapper_MdOption(new import17.ElementRef(this._el_0),this.renderer);
    this._MdPrefixRejector_0_4 = new import14.Wrapper_MdPrefixRejector(this.parentView.parentView.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentView.parentView.parentIndex,(null as any)));
    this._text_1 = this.renderer.createText((null as any),'',(null as any));
    this.compView_0.create(this._MdOption_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'click',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.MdOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MdOption_0_3.context; }
    if (((token === import18.MdPrefixRejector) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MdPrefixRejector_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit.k;
    this._MdOption_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._MdOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdPrefixRejector_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdOption_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    const currVal_5:any = import3.inlineInterpolate(1,'',this.context.$implicit.t,'');
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setText(this._text_1,currVal_5);
      this._expr_5 = currVal_5;
    }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_PatientProfileComponent3>this.parentView)._query_MdOption_0_0.setDirty();
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdOption_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) { cb(this._text_1,ctx); }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdOption_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
class View_PatientProfileComponent3 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import19.MdSelect>;
  _RequiredValidator_0_3:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_0_4:any[];
  _NgModel_0_5:import21.Wrapper_NgModel;
  _NgControl_0_6:any;
  _NgControlStatus_0_7:import22.Wrapper_NgControlStatus;
  _MdPrefixRejector_0_8:import14.Wrapper_MdPrefixRejector;
  _MdSelect_0_9:import23.Wrapper_MdSelect;
  _query_MdOption_0_0:import24.QueryList<any>;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import15.ViewContainer;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import25.Wrapper_NgFor;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_PatientProfileComponent3,renderType_PatientProfileComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'md-select',new import3.InlineArray16(10,'class','medium','name','infusionColumn','placeholder','Infusion Column','required','','role','listbox'),(null as any));
    this.compView_0 = new import23.View_MdSelect0(this.viewUtils,this,0,this._el_0);
    this._RequiredValidator_0_3 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_0_4 = [this._RequiredValidator_0_3.context];
    this._NgModel_0_5 = new import21.Wrapper_NgModel((<View_PatientProfileComponent0>this.parentView)._ControlContainer_2_4,this._NG_VALIDATORS_0_4,(null as any),(null as any));
    this._NgControl_0_6 = this._NgModel_0_5.context;
    this._NgControlStatus_0_7 = new import22.Wrapper_NgControlStatus(this._NgControl_0_6);
    this._MdPrefixRejector_0_8 = new import14.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentView.parentIndex,(null as any)));
    this._MdSelect_0_9 = new import23.Wrapper_MdSelect(new import17.ElementRef(this._el_0),this.renderer,this.parentView.parentView.injectorGet(import26.ViewportRuler,this.parentView.parentIndex),this.compView_0.ref,this.parentView.parentView.injectorGet(import27.Dir,this.parentView.parentIndex,(null as any)),this._NgControl_0_6);
    this._query_MdOption_0_0 = new import24.QueryList<any>();
    this._text_1 = this.renderer.createText((null as any),'\n			',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_2 = new import15.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import28.TemplateRef_(this,2,this._anchor_2);
    this._NgFor_2_6 = new import25.Wrapper_NgFor(this._vc_2.vcRef,this._TemplateRef_2_5,this.parentView.parentView.injectorGet(import29.IterableDiffers,this.parentView.parentIndex),this.parentView.ref);
    this._text_3 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_0.create(this._MdSelect_0_9.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(6,'ngModelChange',(null as any),'keydown',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgModel_0_5.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import28.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import30.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    if (((token === import31.RequiredValidator) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._RequiredValidator_0_3.context; }
    if (((token === import32.NG_VALIDATORS) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NG_VALIDATORS_0_4; }
    if (((token === import33.NgModel) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgModel_0_5.context; }
    if (((token === import34.NgControl) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgControl_0_6; }
    if (((token === import35.NgControlStatus) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgControlStatus_0_7.context; }
    if (((token === import18.MdPrefixRejector) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._MdPrefixRejector_0_8.context; }
    if (((token === import19.MdSelect) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._MdSelect_0_9.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = '';
    this._RequiredValidator_0_3.check_required(currVal_0_0_0,throwOnChange,false);
    this._RequiredValidator_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = 'infusionColumn';
    this._NgModel_0_5.check_name(currVal_0_1_0,throwOnChange,false);
    const currVal_0_1_1:any = this.parentView.context.pp.patient.profile.infusionColumn;
    this._NgModel_0_5.check_model(currVal_0_1_1,throwOnChange,false);
    this._NgModel_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdPrefixRejector_0_8.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_4_0:any = 'Infusion Column';
    this._MdSelect_0_9.check_placeholder(currVal_0_4_0,throwOnChange,false);
    const currVal_0_4_1:any = '';
    this._MdSelect_0_9.check_required(currVal_0_4_1,throwOnChange,false);
    this._MdSelect_0_9.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = this.parentView.context.getOptions('infusion');
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    this._NgFor_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdOption_0_0.dirty) {
          this._query_MdOption_0_0.reset([this._vc_2.mapNestedViews(View_PatientProfileComponent4,(nestedView:View_PatientProfileComponent4):any => {
            return [nestedView._MdOption_0_3.context];
        })]);
        this._MdSelect_0_9.context.options = this._query_MdOption_0_0;
        this._query_MdOption_0_0.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._MdSelect_0_9.context.ngAfterContentInit(); }
    }
    this._RequiredValidator_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this._MdSelect_0_9.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this.compView_0.destroy();
    this._NgModel_0_5.ngOnDestroy();
    this._MdSelect_0_9.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {
      cb(this._text_1,ctx);
      cb(this._vc_2.nativeElement,ctx);
      this._vc_2.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_3,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 2)) { return new View_PatientProfileComponent4(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSelect_0_9.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.pp.patient.profile.infusionColumn = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_PatientProfileComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_PatientProfileComponent,{});
export class View_PatientProfileComponent0 extends import1.AppView<import0.PatientProfileComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _NgForm_2_3:import36.Wrapper_NgForm;
  _ControlContainer_2_4:any;
  _NgControlStatusGroup_2_5:import22.Wrapper_NgControlStatusGroup;
  _text_3:any;
  _el_4:any;
  compView_4:import1.AppView<import37.MdInputContainer>;
  _MdInputContainer_4_3:import38.Wrapper_MdInputContainer;
  _query_MdInputDirective_4_0:import24.QueryList<any>;
  _query_MdPlaceholder_4_1:import24.QueryList<any>;
  _query_MdHint_4_2:import24.QueryList<any>;
  _text_5:any;
  _el_6:any;
  _DefaultValueAccessor_6_3:import39.Wrapper_DefaultValueAccessor;
  _RequiredValidator_6_4:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_6_5:any[];
  _NG_VALUE_ACCESSOR_6_6:any[];
  _NgModel_6_7:import21.Wrapper_NgModel;
  _NgControl_6_8:any;
  _NgControlStatus_6_9:import22.Wrapper_NgControlStatus;
  _MdInputDirective_6_10:import38.Wrapper_MdInputDirective;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  compView_9:import1.AppView<import37.MdInputContainer>;
  _MdInputContainer_9_3:import38.Wrapper_MdInputContainer;
  _query_MdInputDirective_9_0:import24.QueryList<any>;
  _query_MdPlaceholder_9_1:import24.QueryList<any>;
  _query_MdHint_9_2:import24.QueryList<any>;
  _text_10:any;
  _el_11:any;
  _DefaultValueAccessor_11_3:import39.Wrapper_DefaultValueAccessor;
  _RequiredValidator_11_4:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_11_5:any[];
  _NG_VALUE_ACCESSOR_11_6:any[];
  _NgModel_11_7:import21.Wrapper_NgModel;
  _NgControl_11_8:any;
  _NgControlStatus_11_9:import22.Wrapper_NgControlStatus;
  _MdInputDirective_11_10:import38.Wrapper_MdInputDirective;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  compView_14:import1.AppView<import37.MdInputContainer>;
  _MdInputContainer_14_3:import38.Wrapper_MdInputContainer;
  _query_MdInputDirective_14_0:import24.QueryList<any>;
  _query_MdPlaceholder_14_1:import24.QueryList<any>;
  _query_MdHint_14_2:import24.QueryList<any>;
  _text_15:any;
  _el_16:any;
  _DefaultValueAccessor_16_3:import39.Wrapper_DefaultValueAccessor;
  _RequiredValidator_16_4:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_16_5:any[];
  _NG_VALUE_ACCESSOR_16_6:any[];
  _NgModel_16_7:import21.Wrapper_NgModel;
  _NgControl_16_8:any;
  _NgControlStatus_16_9:import22.Wrapper_NgControlStatus;
  _MdInputDirective_16_10:import38.Wrapper_MdInputDirective;
  _text_17:any;
  _text_18:any;
  _el_19:any;
  compView_19:import1.AppView<import37.MdInputContainer>;
  _MdInputContainer_19_3:import38.Wrapper_MdInputContainer;
  _query_MdInputDirective_19_0:import24.QueryList<any>;
  _query_MdPlaceholder_19_1:import24.QueryList<any>;
  _query_MdHint_19_2:import24.QueryList<any>;
  _text_20:any;
  _el_21:any;
  _DefaultValueAccessor_21_3:import39.Wrapper_DefaultValueAccessor;
  _RequiredValidator_21_4:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_21_5:any[];
  _NG_VALUE_ACCESSOR_21_6:any[];
  _NgModel_21_7:import21.Wrapper_NgModel;
  _NgControl_21_8:any;
  _NgControlStatus_21_9:import22.Wrapper_NgControlStatus;
  _MdInputDirective_21_10:import38.Wrapper_MdInputDirective;
  _text_22:any;
  _text_23:any;
  _el_24:any;
  compView_24:import1.AppView<import37.MdInputContainer>;
  _MdInputContainer_24_3:import38.Wrapper_MdInputContainer;
  _query_MdInputDirective_24_0:import24.QueryList<any>;
  _query_MdPlaceholder_24_1:import24.QueryList<any>;
  _query_MdHint_24_2:import24.QueryList<any>;
  _text_25:any;
  _el_26:any;
  _DefaultValueAccessor_26_3:import39.Wrapper_DefaultValueAccessor;
  _NumberValueAccessor_26_4:import40.Wrapper_NumberValueAccessor;
  _RequiredValidator_26_5:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_26_6:any[];
  _NG_VALUE_ACCESSOR_26_7:any[];
  _NgModel_26_8:import21.Wrapper_NgModel;
  _NgControl_26_9:any;
  _NgControlStatus_26_10:import22.Wrapper_NgControlStatus;
  _MdInputDirective_26_11:import38.Wrapper_MdInputDirective;
  _text_27:any;
  _text_28:any;
  _el_29:any;
  compView_29:import1.AppView<import19.MdSelect>;
  _RequiredValidator_29_3:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_29_4:any[];
  _NgModel_29_5:import21.Wrapper_NgModel;
  _NgControl_29_6:any;
  _NgControlStatus_29_7:import22.Wrapper_NgControlStatus;
  _MdPrefixRejector_29_8:import14.Wrapper_MdPrefixRejector;
  _MdSelect_29_9:import23.Wrapper_MdSelect;
  _query_MdOption_29_0:import24.QueryList<any>;
  _text_30:any;
  _el_31:any;
  compView_31:import1.AppView<import12.MdOption>;
  _MdOption_31_3:import13.Wrapper_MdOption;
  _MdPrefixRejector_31_4:import14.Wrapper_MdPrefixRejector;
  _text_32:any;
  _text_33:any;
  _el_34:any;
  compView_34:import1.AppView<import12.MdOption>;
  _MdOption_34_3:import13.Wrapper_MdOption;
  _MdPrefixRejector_34_4:import14.Wrapper_MdPrefixRejector;
  _text_35:any;
  _text_36:any;
  _text_37:any;
  _el_38:any;
  compView_38:import1.AppView<import37.MdInputContainer>;
  _MdInputContainer_38_3:import38.Wrapper_MdInputContainer;
  _query_MdInputDirective_38_0:import24.QueryList<any>;
  _query_MdPlaceholder_38_1:import24.QueryList<any>;
  _query_MdHint_38_2:import24.QueryList<any>;
  _text_39:any;
  _el_40:any;
  _DefaultValueAccessor_40_3:import39.Wrapper_DefaultValueAccessor;
  _NumberValueAccessor_40_4:import40.Wrapper_NumberValueAccessor;
  _RequiredValidator_40_5:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_40_6:any[];
  _NG_VALUE_ACCESSOR_40_7:any[];
  _NgModel_40_8:import21.Wrapper_NgModel;
  _NgControl_40_9:any;
  _NgControlStatus_40_10:import22.Wrapper_NgControlStatus;
  _MdInputDirective_40_11:import38.Wrapper_MdInputDirective;
  _text_41:any;
  _text_42:any;
  _el_43:any;
  compView_43:import1.AppView<import19.MdSelect>;
  _RequiredValidator_43_3:import20.Wrapper_RequiredValidator;
  _NG_VALIDATORS_43_4:any[];
  _NgModel_43_5:import21.Wrapper_NgModel;
  _NgControl_43_6:any;
  _NgControlStatus_43_7:import22.Wrapper_NgControlStatus;
  _MdPrefixRejector_43_8:import14.Wrapper_MdPrefixRejector;
  _MdSelect_43_9:import23.Wrapper_MdSelect;
  _query_MdOption_43_0:import24.QueryList<any>;
  _text_44:any;
  _el_45:any;
  compView_45:import1.AppView<import12.MdOption>;
  _MdOption_45_3:import13.Wrapper_MdOption;
  _MdPrefixRejector_45_4:import14.Wrapper_MdPrefixRejector;
  _text_46:any;
  _text_47:any;
  _el_48:any;
  compView_48:import1.AppView<import12.MdOption>;
  _MdOption_48_3:import13.Wrapper_MdOption;
  _MdPrefixRejector_48_4:import14.Wrapper_MdPrefixRejector;
  _text_49:any;
  _text_50:any;
  _text_51:any;
  _anchor_52:any;
  /*private*/ _vc_52:import15.ViewContainer;
  _TemplateRef_52_5:any;
  _NgIf_52_6:import41.Wrapper_NgIf;
  _text_53:any;
  _anchor_54:any;
  /*private*/ _vc_54:import15.ViewContainer;
  _TemplateRef_54_5:any;
  _NgIf_54_6:import41.Wrapper_NgIf;
  _text_55:any;
  _el_56:any;
  _text_57:any;
  _el_58:any;
  compView_58:import1.AppView<import42.MdButton>;
  _MdPrefixRejector_58_3:import14.Wrapper_MdPrefixRejector;
  _MdButton_58_4:import43.Wrapper_MdButton;
  _MdRaisedButtonCssMatStyler_58_5:import43.Wrapper_MdRaisedButtonCssMatStyler;
  _text_59:any;
  _text_60:any;
  _el_61:any;
  compView_61:import1.AppView<import42.MdAnchor>;
  _MdPrefixRejector_61_3:import14.Wrapper_MdPrefixRejector;
  _MdAnchor_61_4:import43.Wrapper_MdAnchor;
  _MdButtonCssMatStyler_61_5:import43.Wrapper_MdButtonCssMatStyler;
  _text_62:any;
  _text_63:any;
  _text_64:any;
  _text_65:any;
  _pipe_date_0:import44.DatePipe;
  _pipe_date_0_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_PatientProfileComponent0,renderType_PatientProfileComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'style','padding:5px;'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'form',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgForm_2_3 = new import36.Wrapper_NgForm((null as any),(null as any));
    this._ControlContainer_2_4 = this._NgForm_2_3.context;
    this._NgControlStatusGroup_2_5 = new import22.Wrapper_NgControlStatusGroup(this._ControlContainer_2_4);
    this._text_3 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'md-input-container',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_4 = new import38.View_MdInputContainer0(this.viewUtils,this,4,this._el_4);
    this._MdInputContainer_4_3 = new import38.Wrapper_MdInputContainer();
    this._query_MdInputDirective_4_0 = new import24.QueryList<any>();
    this._query_MdPlaceholder_4_1 = new import24.QueryList<any>();
    this._query_MdHint_4_2 = new import24.QueryList<any>();
    this._text_5 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray16(12,'class','medium','mdInput','','name','uhid','placeholder','UHID','required','','type','text'),(null as any));
    this._DefaultValueAccessor_6_3 = new import39.Wrapper_DefaultValueAccessor(this.renderer,new import17.ElementRef(this._el_6));
    this._RequiredValidator_6_4 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_6_5 = [this._RequiredValidator_6_4.context];
    this._NG_VALUE_ACCESSOR_6_6 = [this._DefaultValueAccessor_6_3.context];
    this._NgModel_6_7 = new import21.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_6_5,(null as any),this._NG_VALUE_ACCESSOR_6_6);
    this._NgControl_6_8 = this._NgModel_6_7.context;
    this._NgControlStatus_6_9 = new import22.Wrapper_NgControlStatus(this._NgControl_6_8);
    this._MdInputDirective_6_10 = new import38.Wrapper_MdInputDirective(new import17.ElementRef(this._el_6),this.renderer,this._NgControl_6_8);
    this._text_7 = this.renderer.createText((null as any),'		\n		',(null as any));
    this.compView_4.create(this._MdInputContainer_4_3.context);
    this._text_8 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_2,'md-input-container',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_9 = new import38.View_MdInputContainer0(this.viewUtils,this,9,this._el_9);
    this._MdInputContainer_9_3 = new import38.Wrapper_MdInputContainer();
    this._query_MdInputDirective_9_0 = new import24.QueryList<any>();
    this._query_MdPlaceholder_9_1 = new import24.QueryList<any>();
    this._query_MdHint_9_2 = new import24.QueryList<any>();
    this._text_10 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray16(12,'class','big','mdInput','','name','name','placeholder','Name','required','','type','text'),(null as any));
    this._DefaultValueAccessor_11_3 = new import39.Wrapper_DefaultValueAccessor(this.renderer,new import17.ElementRef(this._el_11));
    this._RequiredValidator_11_4 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_11_5 = [this._RequiredValidator_11_4.context];
    this._NG_VALUE_ACCESSOR_11_6 = [this._DefaultValueAccessor_11_3.context];
    this._NgModel_11_7 = new import21.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_11_5,(null as any),this._NG_VALUE_ACCESSOR_11_6);
    this._NgControl_11_8 = this._NgModel_11_7.context;
    this._NgControlStatus_11_9 = new import22.Wrapper_NgControlStatus(this._NgControl_11_8);
    this._MdInputDirective_11_10 = new import38.Wrapper_MdInputDirective(new import17.ElementRef(this._el_11),this.renderer,this._NgControl_11_8);
    this._text_12 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_9.create(this._MdInputContainer_9_3.context);
    this._text_13 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_2,'md-input-container',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_14 = new import38.View_MdInputContainer0(this.viewUtils,this,14,this._el_14);
    this._MdInputContainer_14_3 = new import38.Wrapper_MdInputContainer();
    this._query_MdInputDirective_14_0 = new import24.QueryList<any>();
    this._query_MdPlaceholder_14_1 = new import24.QueryList<any>();
    this._query_MdHint_14_2 = new import24.QueryList<any>();
    this._text_15 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray16(12,'class','small','mdInput','','name','dob','placeholder','Date of birth','required','','type','date'),(null as any));
    this._DefaultValueAccessor_16_3 = new import39.Wrapper_DefaultValueAccessor(this.renderer,new import17.ElementRef(this._el_16));
    this._RequiredValidator_16_4 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_16_5 = [this._RequiredValidator_16_4.context];
    this._NG_VALUE_ACCESSOR_16_6 = [this._DefaultValueAccessor_16_3.context];
    this._NgModel_16_7 = new import21.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_16_5,(null as any),this._NG_VALUE_ACCESSOR_16_6);
    this._NgControl_16_8 = this._NgModel_16_7.context;
    this._NgControlStatus_16_9 = new import22.Wrapper_NgControlStatus(this._NgControl_16_8);
    this._MdInputDirective_16_10 = new import38.Wrapper_MdInputDirective(new import17.ElementRef(this._el_16),this.renderer,this._NgControl_16_8);
    this._text_17 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_14.create(this._MdInputContainer_14_3.context);
    this._text_18 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,this._el_2,'md-input-container',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_19 = new import38.View_MdInputContainer0(this.viewUtils,this,19,this._el_19);
    this._MdInputContainer_19_3 = new import38.Wrapper_MdInputContainer();
    this._query_MdInputDirective_19_0 = new import24.QueryList<any>();
    this._query_MdPlaceholder_19_1 = new import24.QueryList<any>();
    this._query_MdHint_19_2 = new import24.QueryList<any>();
    this._text_20 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_21 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray16(12,'class','small','mdInput','','name','bednum','placeholder','Bed Number','required','','type','text'),(null as any));
    this._DefaultValueAccessor_21_3 = new import39.Wrapper_DefaultValueAccessor(this.renderer,new import17.ElementRef(this._el_21));
    this._RequiredValidator_21_4 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_21_5 = [this._RequiredValidator_21_4.context];
    this._NG_VALUE_ACCESSOR_21_6 = [this._DefaultValueAccessor_21_3.context];
    this._NgModel_21_7 = new import21.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_21_5,(null as any),this._NG_VALUE_ACCESSOR_21_6);
    this._NgControl_21_8 = this._NgModel_21_7.context;
    this._NgControlStatus_21_9 = new import22.Wrapper_NgControlStatus(this._NgControl_21_8);
    this._MdInputDirective_21_10 = new import38.Wrapper_MdInputDirective(new import17.ElementRef(this._el_21),this.renderer,this._NgControl_21_8);
    this._text_22 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_19.create(this._MdInputContainer_19_3.context);
    this._text_23 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,this._el_2,'md-input-container',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_24 = new import38.View_MdInputContainer0(this.viewUtils,this,24,this._el_24);
    this._MdInputContainer_24_3 = new import38.Wrapper_MdInputContainer();
    this._query_MdInputDirective_24_0 = new import24.QueryList<any>();
    this._query_MdPlaceholder_24_1 = new import24.QueryList<any>();
    this._query_MdHint_24_2 = new import24.QueryList<any>();
    this._text_25 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_26 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray16(12,'class','small','mdInput','','name','weight','placeholder','Weight (Kgs)','required','','type','number'),(null as any));
    this._DefaultValueAccessor_26_3 = new import39.Wrapper_DefaultValueAccessor(this.renderer,new import17.ElementRef(this._el_26));
    this._NumberValueAccessor_26_4 = new import40.Wrapper_NumberValueAccessor(this.renderer,new import17.ElementRef(this._el_26));
    this._RequiredValidator_26_5 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_26_6 = [this._RequiredValidator_26_5.context];
    this._NG_VALUE_ACCESSOR_26_7 = [
      this._DefaultValueAccessor_26_3.context,
      this._NumberValueAccessor_26_4.context
    ]
    ;
    this._NgModel_26_8 = new import21.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_26_6,(null as any),this._NG_VALUE_ACCESSOR_26_7);
    this._NgControl_26_9 = this._NgModel_26_8.context;
    this._NgControlStatus_26_10 = new import22.Wrapper_NgControlStatus(this._NgControl_26_9);
    this._MdInputDirective_26_11 = new import38.Wrapper_MdInputDirective(new import17.ElementRef(this._el_26),this.renderer,this._NgControl_26_9);
    this._text_27 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_24.create(this._MdInputContainer_24_3.context);
    this._text_28 = this.renderer.createText(this._el_2,'								\n		',(null as any));
    this._el_29 = import3.createRenderElement(this.renderer,this._el_2,'md-select',new import3.InlineArray16(10,'class','big','name','diabetes','placeholder','Diabetes Type','required','','role','listbox'),(null as any));
    this.compView_29 = new import23.View_MdSelect0(this.viewUtils,this,29,this._el_29);
    this._RequiredValidator_29_3 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_29_4 = [this._RequiredValidator_29_3.context];
    this._NgModel_29_5 = new import21.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_29_4,(null as any),(null as any));
    this._NgControl_29_6 = this._NgModel_29_5.context;
    this._NgControlStatus_29_7 = new import22.Wrapper_NgControlStatus(this._NgControl_29_6);
    this._MdPrefixRejector_29_8 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdSelect_29_9 = new import23.Wrapper_MdSelect(new import17.ElementRef(this._el_29),this.renderer,this.parentView.injectorGet(import26.ViewportRuler,this.parentIndex),this.compView_29.ref,this.parentView.injectorGet(import27.Dir,this.parentIndex,(null as any)),this._NgControl_29_6);
    this._query_MdOption_29_0 = new import24.QueryList<any>();
    this._text_30 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_31 = import3.createRenderElement(this.renderer,(null as any),'md-option',new import3.InlineArray4(4,'role','option','value','Known Case'),(null as any));
    this.compView_31 = new import13.View_MdOption0(this.viewUtils,this,31,this._el_31);
    this._MdOption_31_3 = new import13.Wrapper_MdOption(new import17.ElementRef(this._el_31),this.renderer);
    this._MdPrefixRejector_31_4 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._text_32 = this.renderer.createText((null as any),'Known Case',(null as any));
    this.compView_31.create(this._MdOption_31_3.context);
    this._text_33 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_34 = import3.createRenderElement(this.renderer,(null as any),'md-option',new import3.InlineArray4(4,'role','option','value','New Onset'),(null as any));
    this.compView_34 = new import13.View_MdOption0(this.viewUtils,this,34,this._el_34);
    this._MdOption_34_3 = new import13.Wrapper_MdOption(new import17.ElementRef(this._el_34),this.renderer);
    this._MdPrefixRejector_34_4 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._text_35 = this.renderer.createText((null as any),'New Onset',(null as any));
    this.compView_34.create(this._MdOption_34_3.context);
    this._text_36 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_29.create(this._MdSelect_29_9.context);
    this._text_37 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._el_38 = import3.createRenderElement(this.renderer,this._el_2,'md-input-container',new import3.InlineArray2(2,'class','big'),(null as any));
    this.compView_38 = new import38.View_MdInputContainer0(this.viewUtils,this,38,this._el_38);
    this._MdInputContainer_38_3 = new import38.Wrapper_MdInputContainer();
    this._query_MdInputDirective_38_0 = new import24.QueryList<any>();
    this._query_MdPlaceholder_38_1 = new import24.QueryList<any>();
    this._query_MdHint_38_2 = new import24.QueryList<any>();
    this._text_39 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_40 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray16(10,'mdInput','','name','preTransplantDose','placeholder','Pre-Transplant Insulin Dose (units/day)','required','','type','number'),(null as any));
    this._DefaultValueAccessor_40_3 = new import39.Wrapper_DefaultValueAccessor(this.renderer,new import17.ElementRef(this._el_40));
    this._NumberValueAccessor_40_4 = new import40.Wrapper_NumberValueAccessor(this.renderer,new import17.ElementRef(this._el_40));
    this._RequiredValidator_40_5 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_40_6 = [this._RequiredValidator_40_5.context];
    this._NG_VALUE_ACCESSOR_40_7 = [
      this._DefaultValueAccessor_40_3.context,
      this._NumberValueAccessor_40_4.context
    ]
    ;
    this._NgModel_40_8 = new import21.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_40_6,(null as any),this._NG_VALUE_ACCESSOR_40_7);
    this._NgControl_40_9 = this._NgModel_40_8.context;
    this._NgControlStatus_40_10 = new import22.Wrapper_NgControlStatus(this._NgControl_40_9);
    this._MdInputDirective_40_11 = new import38.Wrapper_MdInputDirective(new import17.ElementRef(this._el_40),this.renderer,this._NgControl_40_9);
    this._text_41 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_38.create(this._MdInputContainer_38_3.context);
    this._text_42 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._el_43 = import3.createRenderElement(this.renderer,this._el_2,'md-select',new import3.InlineArray16(10,'class','medium','name','insulinDeliveryType','placeholder','Insulin Delivery Type','required','','role','listbox'),(null as any));
    this.compView_43 = new import23.View_MdSelect0(this.viewUtils,this,43,this._el_43);
    this._RequiredValidator_43_3 = new import20.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_43_4 = [this._RequiredValidator_43_3.context];
    this._NgModel_43_5 = new import21.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_43_4,(null as any),(null as any));
    this._NgControl_43_6 = this._NgModel_43_5.context;
    this._NgControlStatus_43_7 = new import22.Wrapper_NgControlStatus(this._NgControl_43_6);
    this._MdPrefixRejector_43_8 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdSelect_43_9 = new import23.Wrapper_MdSelect(new import17.ElementRef(this._el_43),this.renderer,this.parentView.injectorGet(import26.ViewportRuler,this.parentIndex),this.compView_43.ref,this.parentView.injectorGet(import27.Dir,this.parentIndex,(null as any)),this._NgControl_43_6);
    this._query_MdOption_43_0 = new import24.QueryList<any>();
    this._text_44 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_45 = import3.createRenderElement(this.renderer,(null as any),'md-option',new import3.InlineArray4(4,'role','option','value','infusion'),(null as any));
    this.compView_45 = new import13.View_MdOption0(this.viewUtils,this,45,this._el_45);
    this._MdOption_45_3 = new import13.Wrapper_MdOption(new import17.ElementRef(this._el_45),this.renderer);
    this._MdPrefixRejector_45_4 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._text_46 = this.renderer.createText((null as any),'Infusion',(null as any));
    this.compView_45.create(this._MdOption_45_3.context);
    this._text_47 = this.renderer.createText((null as any),'\n			',(null as any));
    this._el_48 = import3.createRenderElement(this.renderer,(null as any),'md-option',new import3.InlineArray4(4,'role','option','value','subcutaneous'),(null as any));
    this.compView_48 = new import13.View_MdOption0(this.viewUtils,this,48,this._el_48);
    this._MdOption_48_3 = new import13.Wrapper_MdOption(new import17.ElementRef(this._el_48),this.renderer);
    this._MdPrefixRejector_48_4 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._text_49 = this.renderer.createText((null as any),'Subcutaneous',(null as any));
    this.compView_48.create(this._MdOption_48_3.context);
    this._text_50 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_43.create(this._MdSelect_43_9.context);
    this._text_51 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._anchor_52 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._vc_52 = new import15.ViewContainer(52,2,this,this._anchor_52);
    this._TemplateRef_52_5 = new import28.TemplateRef_(this,52,this._anchor_52);
    this._NgIf_52_6 = new import41.Wrapper_NgIf(this._vc_52.vcRef,this._TemplateRef_52_5);
    this._text_53 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._anchor_54 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._vc_54 = new import15.ViewContainer(54,2,this,this._anchor_54);
    this._TemplateRef_54_5 = new import28.TemplateRef_(this,54,this._anchor_54);
    this._NgIf_54_6 = new import41.Wrapper_NgIf(this._vc_54.vcRef,this._TemplateRef_54_5);
    this._text_55 = this.renderer.createText(this._el_2,'\n		\n		',(null as any));
    this._el_56 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'style','text-align:center;margin-top:10px;'),(null as any));
    this._text_57 = this.renderer.createText(this._el_56,'\n			',(null as any));
    this._el_58 = import3.createRenderElement(this.renderer,this._el_56,'button',new import3.InlineArray4(4,'md-raised-button','','type','submit'),(null as any));
    this.compView_58 = new import43.View_MdButton0(this.viewUtils,this,58,this._el_58);
    this._MdPrefixRejector_58_3 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdButton_58_4 = new import43.Wrapper_MdButton(new import17.ElementRef(this._el_58),this.renderer);
    this._MdRaisedButtonCssMatStyler_58_5 = new import43.Wrapper_MdRaisedButtonCssMatStyler();
    this._text_59 = this.renderer.createText((null as any),'Save',(null as any));
    this.compView_58.create(this._MdButton_58_4.context);
    this._text_60 = this.renderer.createText(this._el_56,'\n			',(null as any));
    this._el_61 = import3.createRenderElement(this.renderer,this._el_56,'a',new import3.InlineArray2(2,'md-button',''),(null as any));
    this.compView_61 = new import43.View_MdAnchor0(this.viewUtils,this,61,this._el_61);
    this._MdPrefixRejector_61_3 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import18.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdAnchor_61_4 = new import43.Wrapper_MdAnchor(new import17.ElementRef(this._el_61),this.renderer);
    this._MdButtonCssMatStyler_61_5 = new import43.Wrapper_MdButtonCssMatStyler();
    this._text_62 = this.renderer.createText((null as any),'Cancel',(null as any));
    this.compView_61.create(this._MdAnchor_61_4.context);
    this._text_63 = this.renderer.createText(this._el_56,'\n		',(null as any));
    this._text_64 = this.renderer.createText(this._el_2,'\n	',(null as any));
    this._text_65 = this.renderer.createText(this._el_0,'		\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_2));
    this._NgForm_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_4));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_6));
    this._NgModel_6_7.subscribe(this,this.eventHandler(this.handleEvent_6),true);
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_9,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_9));
    var disposable_4:Function = import3.subscribeToRenderElement(this,this._el_11,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_11));
    this._NgModel_11_7.subscribe(this,this.eventHandler(this.handleEvent_11),true);
    var disposable_5:Function = import3.subscribeToRenderElement(this,this._el_14,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_14));
    var disposable_6:Function = import3.subscribeToRenderElement(this,this._el_16,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_16));
    this._NgModel_16_7.subscribe(this,this.eventHandler(this.handleEvent_16),true);
    this._pipe_date_0 = new import44.DatePipe(this.parentView.injectorGet(import45.LOCALE_ID,this.parentIndex));
    this._pipe_date_0_0 = import3.pureProxy2(this._pipe_date_0.transform.bind(this._pipe_date_0));
    var disposable_7:Function = import3.subscribeToRenderElement(this,this._el_19,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_19));
    var disposable_8:Function = import3.subscribeToRenderElement(this,this._el_21,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_21));
    this._NgModel_21_7.subscribe(this,this.eventHandler(this.handleEvent_21),true);
    var disposable_9:Function = import3.subscribeToRenderElement(this,this._el_24,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_24));
    var disposable_10:Function = import3.subscribeToRenderElement(this,this._el_26,new import3.InlineArray16(10,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'change',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_26));
    this._NgModel_26_8.subscribe(this,this.eventHandler(this.handleEvent_26),true);
    var disposable_11:Function = import3.subscribeToRenderElement(this,this._el_29,new import3.InlineArray8(6,'ngModelChange',(null as any),'keydown',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_29));
    this._NgModel_29_5.subscribe(this,this.eventHandler(this.handleEvent_29),true);
    var disposable_12:Function = import3.subscribeToRenderElement(this,this._el_31,new import3.InlineArray4(4,'click',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_31));
    var disposable_13:Function = import3.subscribeToRenderElement(this,this._el_34,new import3.InlineArray4(4,'click',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_34));
    var disposable_14:Function = import3.subscribeToRenderElement(this,this._el_38,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_38));
    var disposable_15:Function = import3.subscribeToRenderElement(this,this._el_40,new import3.InlineArray16(10,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'change',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_40));
    this._NgModel_40_8.subscribe(this,this.eventHandler(this.handleEvent_40),true);
    var disposable_16:Function = import3.subscribeToRenderElement(this,this._el_43,new import3.InlineArray8(6,'ngModelChange',(null as any),'keydown',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_43));
    this._NgModel_43_5.subscribe(this,this.eventHandler(this.handleEvent_43),true);
    var disposable_17:Function = import3.subscribeToRenderElement(this,this._el_45,new import3.InlineArray4(4,'click',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_45));
    var disposable_18:Function = import3.subscribeToRenderElement(this,this._el_48,new import3.InlineArray4(4,'click',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_48));
    var disposable_19:Function = import3.subscribeToRenderElement(this,this._el_58,new import3.InlineArray8(6,'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_58));
    var disposable_20:Function = import3.subscribeToRenderElement(this,this._el_61,new import3.InlineArray8(8,'click',(null as any),'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_61));
    this._query_MdInputDirective_4_0.reset([this._MdInputDirective_6_10.context]);
    this._MdInputContainer_4_3.context._mdInputChild = this._query_MdInputDirective_4_0.first;
    this._query_MdPlaceholder_4_1.reset(([] as any[]));
    this._MdInputContainer_4_3.context._placeholderChild = this._query_MdPlaceholder_4_1.first;
    this._query_MdInputDirective_9_0.reset([this._MdInputDirective_11_10.context]);
    this._MdInputContainer_9_3.context._mdInputChild = this._query_MdInputDirective_9_0.first;
    this._query_MdPlaceholder_9_1.reset(([] as any[]));
    this._MdInputContainer_9_3.context._placeholderChild = this._query_MdPlaceholder_9_1.first;
    this._query_MdInputDirective_14_0.reset([this._MdInputDirective_16_10.context]);
    this._MdInputContainer_14_3.context._mdInputChild = this._query_MdInputDirective_14_0.first;
    this._query_MdPlaceholder_14_1.reset(([] as any[]));
    this._MdInputContainer_14_3.context._placeholderChild = this._query_MdPlaceholder_14_1.first;
    this._query_MdInputDirective_19_0.reset([this._MdInputDirective_21_10.context]);
    this._MdInputContainer_19_3.context._mdInputChild = this._query_MdInputDirective_19_0.first;
    this._query_MdPlaceholder_19_1.reset(([] as any[]));
    this._MdInputContainer_19_3.context._placeholderChild = this._query_MdPlaceholder_19_1.first;
    this._query_MdInputDirective_24_0.reset([this._MdInputDirective_26_11.context]);
    this._MdInputContainer_24_3.context._mdInputChild = this._query_MdInputDirective_24_0.first;
    this._query_MdPlaceholder_24_1.reset(([] as any[]));
    this._MdInputContainer_24_3.context._placeholderChild = this._query_MdPlaceholder_24_1.first;
    this._query_MdInputDirective_38_0.reset([this._MdInputDirective_40_11.context]);
    this._MdInputContainer_38_3.context._mdInputChild = this._query_MdInputDirective_38_0.first;
    this._query_MdPlaceholder_38_1.reset(([] as any[]));
    this._MdInputContainer_38_3.context._placeholderChild = this._query_MdPlaceholder_38_1.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._el_21,
      this._text_22,
      this._text_23,
      this._el_24,
      this._text_25,
      this._el_26,
      this._text_27,
      this._text_28,
      this._el_29,
      this._text_30,
      this._el_31,
      this._text_32,
      this._text_33,
      this._el_34,
      this._text_35,
      this._text_36,
      this._text_37,
      this._el_38,
      this._text_39,
      this._el_40,
      this._text_41,
      this._text_42,
      this._el_43,
      this._text_44,
      this._el_45,
      this._text_46,
      this._text_47,
      this._el_48,
      this._text_49,
      this._text_50,
      this._text_51,
      this._anchor_52,
      this._text_53,
      this._anchor_54,
      this._text_55,
      this._el_56,
      this._text_57,
      this._el_58,
      this._text_59,
      this._text_60,
      this._el_61,
      this._text_62,
      this._text_63,
      this._text_64,
      this._text_65
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5,
      disposable_6,
      disposable_7,
      disposable_8,
      disposable_9,
      disposable_10,
      disposable_11,
      disposable_12,
      disposable_13,
      disposable_14,
      disposable_15,
      disposable_16,
      disposable_17,
      disposable_18,
      disposable_19,
      disposable_20
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import46.DefaultValueAccessor) && (6 === requestNodeIndex))) { return this._DefaultValueAccessor_6_3.context; }
    if (((token === import31.RequiredValidator) && (6 === requestNodeIndex))) { return this._RequiredValidator_6_4.context; }
    if (((token === import32.NG_VALIDATORS) && (6 === requestNodeIndex))) { return this._NG_VALIDATORS_6_5; }
    if (((token === import47.NG_VALUE_ACCESSOR) && (6 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_6_6; }
    if (((token === import33.NgModel) && (6 === requestNodeIndex))) { return this._NgModel_6_7.context; }
    if (((token === import34.NgControl) && (6 === requestNodeIndex))) { return this._NgControl_6_8; }
    if (((token === import35.NgControlStatus) && (6 === requestNodeIndex))) { return this._NgControlStatus_6_9.context; }
    if (((token === import37.MdInputDirective) && (6 === requestNodeIndex))) { return this._MdInputDirective_6_10.context; }
    if (((token === import37.MdInputContainer) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._MdInputContainer_4_3.context; }
    if (((token === import46.DefaultValueAccessor) && (11 === requestNodeIndex))) { return this._DefaultValueAccessor_11_3.context; }
    if (((token === import31.RequiredValidator) && (11 === requestNodeIndex))) { return this._RequiredValidator_11_4.context; }
    if (((token === import32.NG_VALIDATORS) && (11 === requestNodeIndex))) { return this._NG_VALIDATORS_11_5; }
    if (((token === import47.NG_VALUE_ACCESSOR) && (11 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_11_6; }
    if (((token === import33.NgModel) && (11 === requestNodeIndex))) { return this._NgModel_11_7.context; }
    if (((token === import34.NgControl) && (11 === requestNodeIndex))) { return this._NgControl_11_8; }
    if (((token === import35.NgControlStatus) && (11 === requestNodeIndex))) { return this._NgControlStatus_11_9.context; }
    if (((token === import37.MdInputDirective) && (11 === requestNodeIndex))) { return this._MdInputDirective_11_10.context; }
    if (((token === import37.MdInputContainer) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._MdInputContainer_9_3.context; }
    if (((token === import46.DefaultValueAccessor) && (16 === requestNodeIndex))) { return this._DefaultValueAccessor_16_3.context; }
    if (((token === import31.RequiredValidator) && (16 === requestNodeIndex))) { return this._RequiredValidator_16_4.context; }
    if (((token === import32.NG_VALIDATORS) && (16 === requestNodeIndex))) { return this._NG_VALIDATORS_16_5; }
    if (((token === import47.NG_VALUE_ACCESSOR) && (16 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_16_6; }
    if (((token === import33.NgModel) && (16 === requestNodeIndex))) { return this._NgModel_16_7.context; }
    if (((token === import34.NgControl) && (16 === requestNodeIndex))) { return this._NgControl_16_8; }
    if (((token === import35.NgControlStatus) && (16 === requestNodeIndex))) { return this._NgControlStatus_16_9.context; }
    if (((token === import37.MdInputDirective) && (16 === requestNodeIndex))) { return this._MdInputDirective_16_10.context; }
    if (((token === import37.MdInputContainer) && ((14 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._MdInputContainer_14_3.context; }
    if (((token === import46.DefaultValueAccessor) && (21 === requestNodeIndex))) { return this._DefaultValueAccessor_21_3.context; }
    if (((token === import31.RequiredValidator) && (21 === requestNodeIndex))) { return this._RequiredValidator_21_4.context; }
    if (((token === import32.NG_VALIDATORS) && (21 === requestNodeIndex))) { return this._NG_VALIDATORS_21_5; }
    if (((token === import47.NG_VALUE_ACCESSOR) && (21 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_21_6; }
    if (((token === import33.NgModel) && (21 === requestNodeIndex))) { return this._NgModel_21_7.context; }
    if (((token === import34.NgControl) && (21 === requestNodeIndex))) { return this._NgControl_21_8; }
    if (((token === import35.NgControlStatus) && (21 === requestNodeIndex))) { return this._NgControlStatus_21_9.context; }
    if (((token === import37.MdInputDirective) && (21 === requestNodeIndex))) { return this._MdInputDirective_21_10.context; }
    if (((token === import37.MdInputContainer) && ((19 <= requestNodeIndex) && (requestNodeIndex <= 22)))) { return this._MdInputContainer_19_3.context; }
    if (((token === import46.DefaultValueAccessor) && (26 === requestNodeIndex))) { return this._DefaultValueAccessor_26_3.context; }
    if (((token === import48.NumberValueAccessor) && (26 === requestNodeIndex))) { return this._NumberValueAccessor_26_4.context; }
    if (((token === import31.RequiredValidator) && (26 === requestNodeIndex))) { return this._RequiredValidator_26_5.context; }
    if (((token === import32.NG_VALIDATORS) && (26 === requestNodeIndex))) { return this._NG_VALIDATORS_26_6; }
    if (((token === import47.NG_VALUE_ACCESSOR) && (26 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_26_7; }
    if (((token === import33.NgModel) && (26 === requestNodeIndex))) { return this._NgModel_26_8.context; }
    if (((token === import34.NgControl) && (26 === requestNodeIndex))) { return this._NgControl_26_9; }
    if (((token === import35.NgControlStatus) && (26 === requestNodeIndex))) { return this._NgControlStatus_26_10.context; }
    if (((token === import37.MdInputDirective) && (26 === requestNodeIndex))) { return this._MdInputDirective_26_11.context; }
    if (((token === import37.MdInputContainer) && ((24 <= requestNodeIndex) && (requestNodeIndex <= 27)))) { return this._MdInputContainer_24_3.context; }
    if (((token === import12.MdOption) && ((31 <= requestNodeIndex) && (requestNodeIndex <= 32)))) { return this._MdOption_31_3.context; }
    if (((token === import18.MdPrefixRejector) && ((31 <= requestNodeIndex) && (requestNodeIndex <= 32)))) { return this._MdPrefixRejector_31_4.context; }
    if (((token === import12.MdOption) && ((34 <= requestNodeIndex) && (requestNodeIndex <= 35)))) { return this._MdOption_34_3.context; }
    if (((token === import18.MdPrefixRejector) && ((34 <= requestNodeIndex) && (requestNodeIndex <= 35)))) { return this._MdPrefixRejector_34_4.context; }
    if (((token === import31.RequiredValidator) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) { return this._RequiredValidator_29_3.context; }
    if (((token === import32.NG_VALIDATORS) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) { return this._NG_VALIDATORS_29_4; }
    if (((token === import33.NgModel) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) { return this._NgModel_29_5.context; }
    if (((token === import34.NgControl) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) { return this._NgControl_29_6; }
    if (((token === import35.NgControlStatus) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) { return this._NgControlStatus_29_7.context; }
    if (((token === import18.MdPrefixRejector) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) { return this._MdPrefixRejector_29_8.context; }
    if (((token === import19.MdSelect) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 36)))) { return this._MdSelect_29_9.context; }
    if (((token === import46.DefaultValueAccessor) && (40 === requestNodeIndex))) { return this._DefaultValueAccessor_40_3.context; }
    if (((token === import48.NumberValueAccessor) && (40 === requestNodeIndex))) { return this._NumberValueAccessor_40_4.context; }
    if (((token === import31.RequiredValidator) && (40 === requestNodeIndex))) { return this._RequiredValidator_40_5.context; }
    if (((token === import32.NG_VALIDATORS) && (40 === requestNodeIndex))) { return this._NG_VALIDATORS_40_6; }
    if (((token === import47.NG_VALUE_ACCESSOR) && (40 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_40_7; }
    if (((token === import33.NgModel) && (40 === requestNodeIndex))) { return this._NgModel_40_8.context; }
    if (((token === import34.NgControl) && (40 === requestNodeIndex))) { return this._NgControl_40_9; }
    if (((token === import35.NgControlStatus) && (40 === requestNodeIndex))) { return this._NgControlStatus_40_10.context; }
    if (((token === import37.MdInputDirective) && (40 === requestNodeIndex))) { return this._MdInputDirective_40_11.context; }
    if (((token === import37.MdInputContainer) && ((38 <= requestNodeIndex) && (requestNodeIndex <= 41)))) { return this._MdInputContainer_38_3.context; }
    if (((token === import12.MdOption) && ((45 <= requestNodeIndex) && (requestNodeIndex <= 46)))) { return this._MdOption_45_3.context; }
    if (((token === import18.MdPrefixRejector) && ((45 <= requestNodeIndex) && (requestNodeIndex <= 46)))) { return this._MdPrefixRejector_45_4.context; }
    if (((token === import12.MdOption) && ((48 <= requestNodeIndex) && (requestNodeIndex <= 49)))) { return this._MdOption_48_3.context; }
    if (((token === import18.MdPrefixRejector) && ((48 <= requestNodeIndex) && (requestNodeIndex <= 49)))) { return this._MdPrefixRejector_48_4.context; }
    if (((token === import31.RequiredValidator) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._RequiredValidator_43_3.context; }
    if (((token === import32.NG_VALIDATORS) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._NG_VALIDATORS_43_4; }
    if (((token === import33.NgModel) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._NgModel_43_5.context; }
    if (((token === import34.NgControl) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._NgControl_43_6; }
    if (((token === import35.NgControlStatus) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._NgControlStatus_43_7.context; }
    if (((token === import18.MdPrefixRejector) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._MdPrefixRejector_43_8.context; }
    if (((token === import19.MdSelect) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._MdSelect_43_9.context; }
    if (((token === import28.TemplateRef) && (52 === requestNodeIndex))) { return this._TemplateRef_52_5; }
    if (((token === import49.NgIf) && (52 === requestNodeIndex))) { return this._NgIf_52_6.context; }
    if (((token === import28.TemplateRef) && (54 === requestNodeIndex))) { return this._TemplateRef_54_5; }
    if (((token === import49.NgIf) && (54 === requestNodeIndex))) { return this._NgIf_54_6.context; }
    if (((token === import18.MdPrefixRejector) && ((58 <= requestNodeIndex) && (requestNodeIndex <= 59)))) { return this._MdPrefixRejector_58_3.context; }
    if (((token === import42.MdButton) && ((58 <= requestNodeIndex) && (requestNodeIndex <= 59)))) { return this._MdButton_58_4.context; }
    if (((token === import42.MdRaisedButtonCssMatStyler) && ((58 <= requestNodeIndex) && (requestNodeIndex <= 59)))) { return this._MdRaisedButtonCssMatStyler_58_5.context; }
    if (((token === import18.MdPrefixRejector) && ((61 <= requestNodeIndex) && (requestNodeIndex <= 62)))) { return this._MdPrefixRejector_61_3.context; }
    if (((token === import42.MdAnchor) && ((61 <= requestNodeIndex) && (requestNodeIndex <= 62)))) { return this._MdAnchor_61_4.context; }
    if (((token === import42.MdButtonCssMatStyler) && ((61 <= requestNodeIndex) && (requestNodeIndex <= 62)))) { return this._MdButtonCssMatStyler_61_5.context; }
    if (((token === import50.NgForm) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 64)))) { return this._NgForm_2_3.context; }
    if (((token === import51.ControlContainer) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 64)))) { return this._ControlContainer_2_4; }
    if (((token === import35.NgControlStatusGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 64)))) { return this._NgControlStatusGroup_2_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import16.ValueUnwrapper();
    this._NgForm_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this._NgControlStatusGroup_2_5.ngDoCheck(this,this._el_2,throwOnChange);
    this._MdInputContainer_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    this._DefaultValueAccessor_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_6_1_0:any = '';
    this._RequiredValidator_6_4.check_required(currVal_6_1_0,throwOnChange,false);
    this._RequiredValidator_6_4.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_6_2_0:any = 'uhid';
    this._NgModel_6_7.check_name(currVal_6_2_0,throwOnChange,false);
    const currVal_6_2_1:any = this.context.pp.patient.uhid;
    this._NgModel_6_7.check_model(currVal_6_2_1,throwOnChange,false);
    this._NgModel_6_7.ngDoCheck(this,this._el_6,throwOnChange);
    this._NgControlStatus_6_9.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_6_4_0:any = 'UHID';
    this._MdInputDirective_6_10.check_placeholder(currVal_6_4_0,throwOnChange,false);
    const currVal_6_4_1:any = '';
    this._MdInputDirective_6_10.check_required(currVal_6_4_1,throwOnChange,false);
    const currVal_6_4_2:any = 'text';
    this._MdInputDirective_6_10.check_type(currVal_6_4_2,throwOnChange,false);
    this._MdInputDirective_6_10.ngDoCheck(this,this._el_6,throwOnChange);
    this._MdInputContainer_9_3.ngDoCheck(this,this._el_9,throwOnChange);
    this._DefaultValueAccessor_11_3.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_11_1_0:any = '';
    this._RequiredValidator_11_4.check_required(currVal_11_1_0,throwOnChange,false);
    this._RequiredValidator_11_4.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_11_2_0:any = 'name';
    this._NgModel_11_7.check_name(currVal_11_2_0,throwOnChange,false);
    const currVal_11_2_1:any = this.context.pp.patient.name;
    this._NgModel_11_7.check_model(currVal_11_2_1,throwOnChange,false);
    this._NgModel_11_7.ngDoCheck(this,this._el_11,throwOnChange);
    this._NgControlStatus_11_9.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_11_4_0:any = 'Name';
    this._MdInputDirective_11_10.check_placeholder(currVal_11_4_0,throwOnChange,false);
    const currVal_11_4_1:any = '';
    this._MdInputDirective_11_10.check_required(currVal_11_4_1,throwOnChange,false);
    const currVal_11_4_2:any = 'text';
    this._MdInputDirective_11_10.check_type(currVal_11_4_2,throwOnChange,false);
    this._MdInputDirective_11_10.ngDoCheck(this,this._el_11,throwOnChange);
    this._MdInputContainer_14_3.ngDoCheck(this,this._el_14,throwOnChange);
    this._DefaultValueAccessor_16_3.ngDoCheck(this,this._el_16,throwOnChange);
    const currVal_16_1_0:any = '';
    this._RequiredValidator_16_4.check_required(currVal_16_1_0,throwOnChange,false);
    this._RequiredValidator_16_4.ngDoCheck(this,this._el_16,throwOnChange);
    const currVal_16_2_0:any = 'dob';
    this._NgModel_16_7.check_name(currVal_16_2_0,throwOnChange,false);
    valUnwrapper.reset();
    const currVal_16_2_1:any = valUnwrapper.unwrap(import3.castByValue(this._pipe_date_0_0,this._pipe_date_0.transform)(this.context.pp.patient.dob,'yyyy-MM-dd'));
    this._NgModel_16_7.check_model(currVal_16_2_1,throwOnChange,valUnwrapper.hasWrappedValue);
    this._NgModel_16_7.ngDoCheck(this,this._el_16,throwOnChange);
    this._NgControlStatus_16_9.ngDoCheck(this,this._el_16,throwOnChange);
    const currVal_16_4_0:any = 'Date of birth';
    this._MdInputDirective_16_10.check_placeholder(currVal_16_4_0,throwOnChange,false);
    const currVal_16_4_1:any = '';
    this._MdInputDirective_16_10.check_required(currVal_16_4_1,throwOnChange,false);
    const currVal_16_4_2:any = 'date';
    this._MdInputDirective_16_10.check_type(currVal_16_4_2,throwOnChange,false);
    this._MdInputDirective_16_10.ngDoCheck(this,this._el_16,throwOnChange);
    this._MdInputContainer_19_3.ngDoCheck(this,this._el_19,throwOnChange);
    this._DefaultValueAccessor_21_3.ngDoCheck(this,this._el_21,throwOnChange);
    const currVal_21_1_0:any = '';
    this._RequiredValidator_21_4.check_required(currVal_21_1_0,throwOnChange,false);
    this._RequiredValidator_21_4.ngDoCheck(this,this._el_21,throwOnChange);
    const currVal_21_2_0:any = 'bednum';
    this._NgModel_21_7.check_name(currVal_21_2_0,throwOnChange,false);
    const currVal_21_2_1:any = this.context.pp.patient.bednum;
    this._NgModel_21_7.check_model(currVal_21_2_1,throwOnChange,false);
    this._NgModel_21_7.ngDoCheck(this,this._el_21,throwOnChange);
    this._NgControlStatus_21_9.ngDoCheck(this,this._el_21,throwOnChange);
    const currVal_21_4_0:any = 'Bed Number';
    this._MdInputDirective_21_10.check_placeholder(currVal_21_4_0,throwOnChange,false);
    const currVal_21_4_1:any = '';
    this._MdInputDirective_21_10.check_required(currVal_21_4_1,throwOnChange,false);
    const currVal_21_4_2:any = 'text';
    this._MdInputDirective_21_10.check_type(currVal_21_4_2,throwOnChange,false);
    this._MdInputDirective_21_10.ngDoCheck(this,this._el_21,throwOnChange);
    this._MdInputContainer_24_3.ngDoCheck(this,this._el_24,throwOnChange);
    this._DefaultValueAccessor_26_3.ngDoCheck(this,this._el_26,throwOnChange);
    this._NumberValueAccessor_26_4.ngDoCheck(this,this._el_26,throwOnChange);
    const currVal_26_2_0:any = '';
    this._RequiredValidator_26_5.check_required(currVal_26_2_0,throwOnChange,false);
    this._RequiredValidator_26_5.ngDoCheck(this,this._el_26,throwOnChange);
    const currVal_26_3_0:any = 'weight';
    this._NgModel_26_8.check_name(currVal_26_3_0,throwOnChange,false);
    const currVal_26_3_1:any = this.context.pp.patient.profile.weight;
    this._NgModel_26_8.check_model(currVal_26_3_1,throwOnChange,false);
    this._NgModel_26_8.ngDoCheck(this,this._el_26,throwOnChange);
    this._NgControlStatus_26_10.ngDoCheck(this,this._el_26,throwOnChange);
    const currVal_26_5_0:any = 'Weight (Kgs)';
    this._MdInputDirective_26_11.check_placeholder(currVal_26_5_0,throwOnChange,false);
    const currVal_26_5_1:any = '';
    this._MdInputDirective_26_11.check_required(currVal_26_5_1,throwOnChange,false);
    const currVal_26_5_2:any = 'number';
    this._MdInputDirective_26_11.check_type(currVal_26_5_2,throwOnChange,false);
    this._MdInputDirective_26_11.ngDoCheck(this,this._el_26,throwOnChange);
    const currVal_29_0_0:any = '';
    this._RequiredValidator_29_3.check_required(currVal_29_0_0,throwOnChange,false);
    this._RequiredValidator_29_3.ngDoCheck(this,this._el_29,throwOnChange);
    const currVal_29_1_0:any = 'diabetes';
    this._NgModel_29_5.check_name(currVal_29_1_0,throwOnChange,false);
    const currVal_29_1_1:any = this.context.pp.patient.profile.diabetes;
    this._NgModel_29_5.check_model(currVal_29_1_1,throwOnChange,false);
    this._NgModel_29_5.ngDoCheck(this,this._el_29,throwOnChange);
    this._NgControlStatus_29_7.ngDoCheck(this,this._el_29,throwOnChange);
    this._MdPrefixRejector_29_8.ngDoCheck(this,this._el_29,throwOnChange);
    const currVal_29_4_0:any = 'Diabetes Type';
    this._MdSelect_29_9.check_placeholder(currVal_29_4_0,throwOnChange,false);
    const currVal_29_4_1:any = '';
    this._MdSelect_29_9.check_required(currVal_29_4_1,throwOnChange,false);
    this._MdSelect_29_9.ngDoCheck(this,this._el_29,throwOnChange);
    const currVal_31_0_0:any = 'Known Case';
    this._MdOption_31_3.check_value(currVal_31_0_0,throwOnChange,false);
    this._MdOption_31_3.ngDoCheck(this,this._el_31,throwOnChange);
    this._MdPrefixRejector_31_4.ngDoCheck(this,this._el_31,throwOnChange);
    const currVal_34_0_0:any = 'New Onset';
    this._MdOption_34_3.check_value(currVal_34_0_0,throwOnChange,false);
    this._MdOption_34_3.ngDoCheck(this,this._el_34,throwOnChange);
    this._MdPrefixRejector_34_4.ngDoCheck(this,this._el_34,throwOnChange);
    this._MdInputContainer_38_3.ngDoCheck(this,this._el_38,throwOnChange);
    this._DefaultValueAccessor_40_3.ngDoCheck(this,this._el_40,throwOnChange);
    this._NumberValueAccessor_40_4.ngDoCheck(this,this._el_40,throwOnChange);
    const currVal_40_2_0:any = '';
    this._RequiredValidator_40_5.check_required(currVal_40_2_0,throwOnChange,false);
    this._RequiredValidator_40_5.ngDoCheck(this,this._el_40,throwOnChange);
    const currVal_40_3_0:any = 'preTransplantDose';
    this._NgModel_40_8.check_name(currVal_40_3_0,throwOnChange,false);
    const currVal_40_3_1:any = this.context.pp.patient.profile.preTransplantDose;
    this._NgModel_40_8.check_model(currVal_40_3_1,throwOnChange,false);
    this._NgModel_40_8.ngDoCheck(this,this._el_40,throwOnChange);
    this._NgControlStatus_40_10.ngDoCheck(this,this._el_40,throwOnChange);
    const currVal_40_5_0:any = 'Pre-Transplant Insulin Dose (units/day)';
    this._MdInputDirective_40_11.check_placeholder(currVal_40_5_0,throwOnChange,false);
    const currVal_40_5_1:any = '';
    this._MdInputDirective_40_11.check_required(currVal_40_5_1,throwOnChange,false);
    const currVal_40_5_2:any = 'number';
    this._MdInputDirective_40_11.check_type(currVal_40_5_2,throwOnChange,false);
    this._MdInputDirective_40_11.ngDoCheck(this,this._el_40,throwOnChange);
    const currVal_43_0_0:any = '';
    this._RequiredValidator_43_3.check_required(currVal_43_0_0,throwOnChange,false);
    this._RequiredValidator_43_3.ngDoCheck(this,this._el_43,throwOnChange);
    const currVal_43_1_0:any = 'insulinDeliveryType';
    this._NgModel_43_5.check_name(currVal_43_1_0,throwOnChange,false);
    const currVal_43_1_1:any = this.context.pp.patient.profile.insulinDeliveryType;
    this._NgModel_43_5.check_model(currVal_43_1_1,throwOnChange,false);
    this._NgModel_43_5.ngDoCheck(this,this._el_43,throwOnChange);
    this._NgControlStatus_43_7.ngDoCheck(this,this._el_43,throwOnChange);
    this._MdPrefixRejector_43_8.ngDoCheck(this,this._el_43,throwOnChange);
    const currVal_43_4_0:any = 'Insulin Delivery Type';
    this._MdSelect_43_9.check_placeholder(currVal_43_4_0,throwOnChange,false);
    const currVal_43_4_1:any = '';
    this._MdSelect_43_9.check_required(currVal_43_4_1,throwOnChange,false);
    this._MdSelect_43_9.ngDoCheck(this,this._el_43,throwOnChange);
    const currVal_45_0_0:any = 'infusion';
    this._MdOption_45_3.check_value(currVal_45_0_0,throwOnChange,false);
    this._MdOption_45_3.ngDoCheck(this,this._el_45,throwOnChange);
    this._MdPrefixRejector_45_4.ngDoCheck(this,this._el_45,throwOnChange);
    const currVal_48_0_0:any = 'subcutaneous';
    this._MdOption_48_3.check_value(currVal_48_0_0,throwOnChange,false);
    this._MdOption_48_3.ngDoCheck(this,this._el_48,throwOnChange);
    this._MdPrefixRejector_48_4.ngDoCheck(this,this._el_48,throwOnChange);
    const currVal_52_0_0:any = ((this.context.pp.patient.profile.insulinDeliveryType == 'subcutaneous') && this.context.pp.patient.profile.subcutaneousColumn);
    this._NgIf_52_6.check_ngIf(currVal_52_0_0,throwOnChange,false);
    this._NgIf_52_6.ngDoCheck(this,this._anchor_52,throwOnChange);
    const currVal_54_0_0:any = ((this.context.pp.patient.profile.insulinDeliveryType == 'infusion') && this.context.pp.patient.profile.infusionColumn);
    this._NgIf_54_6.check_ngIf(currVal_54_0_0,throwOnChange,false);
    this._NgIf_54_6.ngDoCheck(this,this._anchor_54,throwOnChange);
    this._MdPrefixRejector_58_3.ngDoCheck(this,this._el_58,throwOnChange);
    const currVal_58_1_0:boolean = !this._NgForm_2_3.context.form.valid;
    this._MdButton_58_4.check_disabled(currVal_58_1_0,throwOnChange,false);
    if (this._MdButton_58_4.ngDoCheck(this,this._el_58,throwOnChange)) { this.compView_58.markAsCheckOnce(); }
    this._MdRaisedButtonCssMatStyler_58_5.ngDoCheck(this,this._el_58,throwOnChange);
    this._MdPrefixRejector_61_3.ngDoCheck(this,this._el_61,throwOnChange);
    this._MdAnchor_61_4.ngDoCheck(this,this._el_61,throwOnChange);
    this._MdButtonCssMatStyler_61_5.ngDoCheck(this,this._el_61,throwOnChange);
    this._vc_52.detectChangesInNestedViews(throwOnChange);
    this._vc_54.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdHint_4_2.dirty) {
        this._query_MdHint_4_2.reset(([] as any[]));
        this._MdInputContainer_4_3.context._hintChildren = this._query_MdHint_4_2;
        this._query_MdHint_4_2.notifyOnChanges();
      }
      if (this._query_MdHint_9_2.dirty) {
        this._query_MdHint_9_2.reset(([] as any[]));
        this._MdInputContainer_9_3.context._hintChildren = this._query_MdHint_9_2;
        this._query_MdHint_9_2.notifyOnChanges();
      }
      if (this._query_MdHint_14_2.dirty) {
        this._query_MdHint_14_2.reset(([] as any[]));
        this._MdInputContainer_14_3.context._hintChildren = this._query_MdHint_14_2;
        this._query_MdHint_14_2.notifyOnChanges();
      }
      if (this._query_MdHint_19_2.dirty) {
        this._query_MdHint_19_2.reset(([] as any[]));
        this._MdInputContainer_19_3.context._hintChildren = this._query_MdHint_19_2;
        this._query_MdHint_19_2.notifyOnChanges();
      }
      if (this._query_MdHint_24_2.dirty) {
        this._query_MdHint_24_2.reset(([] as any[]));
        this._MdInputContainer_24_3.context._hintChildren = this._query_MdHint_24_2;
        this._query_MdHint_24_2.notifyOnChanges();
      }
      if (this._query_MdOption_29_0.dirty) {
        this._query_MdOption_29_0.reset([
          this._MdOption_31_3.context,
          this._MdOption_34_3.context
        ]
        );
        this._MdSelect_29_9.context.options = this._query_MdOption_29_0;
        this._query_MdOption_29_0.notifyOnChanges();
      }
      if (this._query_MdHint_38_2.dirty) {
        this._query_MdHint_38_2.reset(([] as any[]));
        this._MdInputContainer_38_3.context._hintChildren = this._query_MdHint_38_2;
        this._query_MdHint_38_2.notifyOnChanges();
      }
      if (this._query_MdOption_43_0.dirty) {
        this._query_MdOption_43_0.reset([
          this._MdOption_45_3.context,
          this._MdOption_48_3.context
        ]
        );
        this._MdSelect_43_9.context.options = this._query_MdOption_43_0;
        this._query_MdOption_43_0.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._MdInputContainer_4_3.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._MdInputContainer_9_3.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._MdInputContainer_14_3.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._MdInputContainer_19_3.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._MdInputContainer_24_3.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._MdSelect_29_9.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._MdInputContainer_38_3.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._MdSelect_43_9.context.ngAfterContentInit(); }
    }
    this._NgControlStatusGroup_2_5.checkHost(this,this,this._el_2,throwOnChange);
    this._MdInputContainer_4_3.checkHost(this,this.compView_4,this._el_4,throwOnChange);
    this._RequiredValidator_6_4.checkHost(this,this,this._el_6,throwOnChange);
    this._NgControlStatus_6_9.checkHost(this,this,this._el_6,throwOnChange);
    this._MdInputDirective_6_10.checkHost(this,this,this._el_6,throwOnChange);
    this._MdInputContainer_9_3.checkHost(this,this.compView_9,this._el_9,throwOnChange);
    this._RequiredValidator_11_4.checkHost(this,this,this._el_11,throwOnChange);
    this._NgControlStatus_11_9.checkHost(this,this,this._el_11,throwOnChange);
    this._MdInputDirective_11_10.checkHost(this,this,this._el_11,throwOnChange);
    this._MdInputContainer_14_3.checkHost(this,this.compView_14,this._el_14,throwOnChange);
    this._RequiredValidator_16_4.checkHost(this,this,this._el_16,throwOnChange);
    this._NgControlStatus_16_9.checkHost(this,this,this._el_16,throwOnChange);
    this._MdInputDirective_16_10.checkHost(this,this,this._el_16,throwOnChange);
    this._MdInputContainer_19_3.checkHost(this,this.compView_19,this._el_19,throwOnChange);
    this._RequiredValidator_21_4.checkHost(this,this,this._el_21,throwOnChange);
    this._NgControlStatus_21_9.checkHost(this,this,this._el_21,throwOnChange);
    this._MdInputDirective_21_10.checkHost(this,this,this._el_21,throwOnChange);
    this._MdInputContainer_24_3.checkHost(this,this.compView_24,this._el_24,throwOnChange);
    this._RequiredValidator_26_5.checkHost(this,this,this._el_26,throwOnChange);
    this._NgControlStatus_26_10.checkHost(this,this,this._el_26,throwOnChange);
    this._MdInputDirective_26_11.checkHost(this,this,this._el_26,throwOnChange);
    this._RequiredValidator_29_3.checkHost(this,this.compView_29,this._el_29,throwOnChange);
    this._NgControlStatus_29_7.checkHost(this,this.compView_29,this._el_29,throwOnChange);
    this._MdSelect_29_9.checkHost(this,this.compView_29,this._el_29,throwOnChange);
    this._MdOption_31_3.checkHost(this,this.compView_31,this._el_31,throwOnChange);
    this._MdOption_34_3.checkHost(this,this.compView_34,this._el_34,throwOnChange);
    this._MdInputContainer_38_3.checkHost(this,this.compView_38,this._el_38,throwOnChange);
    this._RequiredValidator_40_5.checkHost(this,this,this._el_40,throwOnChange);
    this._NgControlStatus_40_10.checkHost(this,this,this._el_40,throwOnChange);
    this._MdInputDirective_40_11.checkHost(this,this,this._el_40,throwOnChange);
    this._RequiredValidator_43_3.checkHost(this,this.compView_43,this._el_43,throwOnChange);
    this._NgControlStatus_43_7.checkHost(this,this.compView_43,this._el_43,throwOnChange);
    this._MdSelect_43_9.checkHost(this,this.compView_43,this._el_43,throwOnChange);
    this._MdOption_45_3.checkHost(this,this.compView_45,this._el_45,throwOnChange);
    this._MdOption_48_3.checkHost(this,this.compView_48,this._el_48,throwOnChange);
    this._MdButton_58_4.checkHost(this,this.compView_58,this._el_58,throwOnChange);
    this._MdRaisedButtonCssMatStyler_58_5.checkHost(this,this.compView_58,this._el_58,throwOnChange);
    this._MdAnchor_61_4.checkHost(this,this.compView_61,this._el_61,throwOnChange);
    this._MdButtonCssMatStyler_61_5.checkHost(this,this.compView_61,this._el_61,throwOnChange);
    this.compView_4.internalDetectChanges(throwOnChange);
    this.compView_9.internalDetectChanges(throwOnChange);
    this.compView_14.internalDetectChanges(throwOnChange);
    this.compView_19.internalDetectChanges(throwOnChange);
    this.compView_24.internalDetectChanges(throwOnChange);
    this.compView_29.internalDetectChanges(throwOnChange);
    this.compView_31.internalDetectChanges(throwOnChange);
    this.compView_34.internalDetectChanges(throwOnChange);
    this.compView_38.internalDetectChanges(throwOnChange);
    this.compView_43.internalDetectChanges(throwOnChange);
    this.compView_45.internalDetectChanges(throwOnChange);
    this.compView_48.internalDetectChanges(throwOnChange);
    this.compView_58.internalDetectChanges(throwOnChange);
    this.compView_61.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_52.destroyNestedViews();
    this._vc_54.destroyNestedViews();
    this.compView_4.destroy();
    this.compView_9.destroy();
    this.compView_14.destroy();
    this.compView_19.destroy();
    this.compView_24.destroy();
    this.compView_29.destroy();
    this.compView_31.destroy();
    this.compView_34.destroy();
    this.compView_38.destroy();
    this.compView_43.destroy();
    this.compView_45.destroy();
    this.compView_48.destroy();
    this.compView_58.destroy();
    this.compView_61.destroy();
    this._NgModel_6_7.ngOnDestroy();
    this._MdInputDirective_6_10.ngOnDestroy();
    this._NgModel_11_7.ngOnDestroy();
    this._MdInputDirective_11_10.ngOnDestroy();
    this._NgModel_16_7.ngOnDestroy();
    this._MdInputDirective_16_10.ngOnDestroy();
    this._NgModel_21_7.ngOnDestroy();
    this._MdInputDirective_21_10.ngOnDestroy();
    this._NgModel_26_8.ngOnDestroy();
    this._MdInputDirective_26_11.ngOnDestroy();
    this._MdOption_31_3.ngOnDestroy();
    this._MdOption_34_3.ngOnDestroy();
    this._NgModel_29_5.ngOnDestroy();
    this._MdSelect_29_9.ngOnDestroy();
    this._NgModel_40_8.ngOnDestroy();
    this._MdInputDirective_40_11.ngOnDestroy();
    this._MdOption_45_3.ngOnDestroy();
    this._MdOption_48_3.ngOnDestroy();
    this._NgModel_43_5.ngOnDestroy();
    this._MdSelect_43_9.ngOnDestroy();
    this._NgForm_2_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 4) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 4) && (ngContentIndex == 1))) {
      cb(this._text_5,ctx);
      cb(this._el_6,ctx);
      cb(this._text_7,ctx);
    }
    if (((nodeIndex == 4) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 4) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 4) && (ngContentIndex == 4))) {  }
    if (((nodeIndex == 9) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 9) && (ngContentIndex == 1))) {
      cb(this._text_10,ctx);
      cb(this._el_11,ctx);
      cb(this._text_12,ctx);
    }
    if (((nodeIndex == 9) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 9) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 9) && (ngContentIndex == 4))) {  }
    if (((nodeIndex == 14) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 14) && (ngContentIndex == 1))) {
      cb(this._text_15,ctx);
      cb(this._el_16,ctx);
      cb(this._text_17,ctx);
    }
    if (((nodeIndex == 14) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 14) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 14) && (ngContentIndex == 4))) {  }
    if (((nodeIndex == 19) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 19) && (ngContentIndex == 1))) {
      cb(this._text_20,ctx);
      cb(this._el_21,ctx);
      cb(this._text_22,ctx);
    }
    if (((nodeIndex == 19) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 19) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 19) && (ngContentIndex == 4))) {  }
    if (((nodeIndex == 24) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 24) && (ngContentIndex == 1))) {
      cb(this._text_25,ctx);
      cb(this._el_26,ctx);
      cb(this._text_27,ctx);
    }
    if (((nodeIndex == 24) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 24) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 24) && (ngContentIndex == 4))) {  }
    if (((nodeIndex == 29) && (ngContentIndex == 0))) {
      cb(this._text_30,ctx);
      cb(this._el_31,ctx);
      cb(this._text_33,ctx);
      cb(this._el_34,ctx);
      cb(this._text_36,ctx);
    }
    if (((nodeIndex == 31) && (ngContentIndex == 0))) { cb(this._text_32,ctx); }
    if (((nodeIndex == 34) && (ngContentIndex == 0))) { cb(this._text_35,ctx); }
    if (((nodeIndex == 38) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 38) && (ngContentIndex == 1))) {
      cb(this._text_39,ctx);
      cb(this._el_40,ctx);
      cb(this._text_41,ctx);
    }
    if (((nodeIndex == 38) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 38) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 38) && (ngContentIndex == 4))) {  }
    if (((nodeIndex == 43) && (ngContentIndex == 0))) {
      cb(this._text_44,ctx);
      cb(this._el_45,ctx);
      cb(this._text_47,ctx);
      cb(this._el_48,ctx);
      cb(this._text_50,ctx);
    }
    if (((nodeIndex == 45) && (ngContentIndex == 0))) { cb(this._text_46,ctx); }
    if (((nodeIndex == 48) && (ngContentIndex == 0))) { cb(this._text_49,ctx); }
    if (((nodeIndex == 58) && (ngContentIndex == 0))) { cb(this._text_59,ctx); }
    if (((nodeIndex == 61) && (ngContentIndex == 0))) { cb(this._text_62,ctx); }
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 52)) { return new View_PatientProfileComponent1(this.viewUtils,this,52,this._anchor_52,this._vc_52); }
    if ((nodeIndex == 54)) { return new View_PatientProfileComponent3(this.viewUtils,this,54,this._anchor_54,this._vc_54); }
    return (null as any);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._NgForm_2_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.saveProfile()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.compView_4.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInputContainer_4_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_6_3.handleEvent(eventName,$event) && result);
    result = (this._MdInputDirective_6_10.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.pp.patient.uhid = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_9(eventName:string,$event:any):boolean {
    this.compView_9.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInputContainer_9_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_11(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_11_3.handleEvent(eventName,$event) && result);
    result = (this._MdInputDirective_11_10.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.pp.patient.name = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.compView_14.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInputContainer_14_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_16(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_16_3.handleEvent(eventName,$event) && result);
    result = (this._MdInputDirective_16_10.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.pp.patient.dob = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_19(eventName:string,$event:any):boolean {
    this.compView_19.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInputContainer_19_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_21(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_21_3.handleEvent(eventName,$event) && result);
    result = (this._MdInputDirective_21_10.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.pp.patient.bednum = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_24(eventName:string,$event:any):boolean {
    this.compView_24.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInputContainer_24_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_26(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_26_3.handleEvent(eventName,$event) && result);
    result = (this._NumberValueAccessor_26_4.handleEvent(eventName,$event) && result);
    result = (this._MdInputDirective_26_11.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.pp.patient.profile.weight = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_29(eventName:string,$event:any):boolean {
    this.compView_29.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSelect_29_9.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.pp.patient.profile.diabetes = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_31(eventName:string,$event:any):boolean {
    this.compView_31.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdOption_31_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_34(eventName:string,$event:any):boolean {
    this.compView_34.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdOption_34_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_38(eventName:string,$event:any):boolean {
    this.compView_38.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInputContainer_38_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_40(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_40_3.handleEvent(eventName,$event) && result);
    result = (this._NumberValueAccessor_40_4.handleEvent(eventName,$event) && result);
    result = (this._MdInputDirective_40_11.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.pp.patient.profile.preTransplantDose = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_43(eventName:string,$event:any):boolean {
    this.compView_43.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSelect_43_9.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.pp.patient.profile.insulinDeliveryType = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_45(eventName:string,$event:any):boolean {
    this.compView_45.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdOption_45_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_48(eventName:string,$event:any):boolean {
    this.compView_48.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdOption_48_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_58(eventName:string,$event:any):boolean {
    this.compView_58.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_58_4.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_61(eventName:string,$event:any):boolean {
    this.compView_61.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdAnchor_61_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.goBack()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}